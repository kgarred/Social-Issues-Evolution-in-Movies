<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.24.0615.0331                               -->
<workbook original-version='18.1' source-build='2023.2.10 (20232.24.0615.0331)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top Country' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='1'>
        <calculation class='tableau' formula='1' />
        <range granularity='1' max='3' min='1' />
      </column>
      <column caption='Top Social Issue' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='1.0'>
        <calculation class='tableau' formula='1.0' />
        <range granularity='1.0' max='3.0' min='1.0' />
      </column>
    </datasource>
    <datasource caption='intermediate_predicted_full_dataset (2)' inline='true' name='federated.0rq9glx1dbw8e91b2xraf1mtg4b7' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='intermediate_predicted_full_dataset' name='textscan.1xxzzsm0jol35710kkms718byith'>
            <connection class='textscan' directory='H:/Mdx_uni_stuff/4090_Project/Code&amp;Data/DataFiles' filename='intermediate_predicted_full_dataset.tsv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1xxzzsm0jol35710kkms718byith' name='intermediate_predicted_full_dataset.tsv' table='[intermediate_predicted_full_dataset#tsv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator='&#9;'>
            <column datatype='string' name='film_id' ordinal='0' />
            <column datatype='string' name='issue_label' ordinal='1' />
            <column datatype='string' name='openingWeekend' ordinal='2' />
            <column datatype='integer' name='weekendEarning' ordinal='3' />
            <column datatype='string' name='budget' ordinal='4' />
            <column datatype='integer' name='GrossUSCanada' ordinal='5' />
            <column datatype='integer' name='GrossWorldwide' ordinal='6' />
            <column datatype='integer' name='officialSitesCount' ordinal='7' />
            <column datatype='string' name='officialSites' ordinal='8' />
            <column datatype='integer' name='productionCompanyCount' ordinal='9' />
            <column datatype='string' name='productionCompanies' ordinal='10' />
            <column datatype='integer' name='languageCount' ordinal='11' />
            <column datatype='string' name='languages' ordinal='12' />
            <column datatype='date' name='releaseDate' ordinal='13' />
            <column datatype='string' name='releaseLocation' ordinal='14' />
            <column datatype='integer' name='countryOriginCount' ordinal='15' />
            <column datatype='string' name='titleType' ordinal='16' />
            <column datatype='string' name='primaryTitle' ordinal='17' />
            <column datatype='string' name='originalTitle' ordinal='18' />
            <column datatype='integer' name='isAdult' ordinal='19' />
            <column datatype='integer' name='startYear' ordinal='20' />
            <column datatype='string' name='endYear' ordinal='21' />
            <column datatype='integer' name='runtimeMinutes' ordinal='22' />
            <column datatype='integer' name='releaseYear' ordinal='23' />
            <column datatype='string' name='decades' ordinal='24' />
            <column datatype='string' name='locations' ordinal='25' />
            <column datatype='string' name='scene' ordinal='26' />
            <column datatype='string' name='address' ordinal='27' />
            <column datatype='string' name='area' ordinal='28' />
            <column datatype='string' name='state' ordinal='29' />
            <column datatype='string' name='country' ordinal='30' />
            <column datatype='string' name='lattitude' ordinal='31' />
            <column datatype='string' name='longitude' ordinal='32' />
            <column datatype='string' name='continent' ordinal='33' />
            <column datatype='string' name='genre_list' ordinal='34' />
            <column datatype='string' name='coo_list' ordinal='35' />
            <column datatype='integer' name='budget_est' ordinal='36' />
            <column datatype='string' name='budget_label' ordinal='37' />
            <column datatype='real' name='averageRating' ordinal='38' />
            <column datatype='integer' name='numVotes' ordinal='39' />
            <column datatype='string' name='coo_continent' ordinal='40' />
            <column datatype='string' name='film_era' ordinal='41' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1xxzzsm0jol35710kkms718byith' name='intermediate_predicted_full_dataset.tsv' table='[intermediate_predicted_full_dataset#tsv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator='&#9;'>
            <column datatype='string' name='film_id' ordinal='0' />
            <column datatype='string' name='issue_label' ordinal='1' />
            <column datatype='string' name='openingWeekend' ordinal='2' />
            <column datatype='integer' name='weekendEarning' ordinal='3' />
            <column datatype='string' name='budget' ordinal='4' />
            <column datatype='integer' name='GrossUSCanada' ordinal='5' />
            <column datatype='integer' name='GrossWorldwide' ordinal='6' />
            <column datatype='integer' name='officialSitesCount' ordinal='7' />
            <column datatype='string' name='officialSites' ordinal='8' />
            <column datatype='integer' name='productionCompanyCount' ordinal='9' />
            <column datatype='string' name='productionCompanies' ordinal='10' />
            <column datatype='integer' name='languageCount' ordinal='11' />
            <column datatype='string' name='languages' ordinal='12' />
            <column datatype='date' name='releaseDate' ordinal='13' />
            <column datatype='string' name='releaseLocation' ordinal='14' />
            <column datatype='integer' name='countryOriginCount' ordinal='15' />
            <column datatype='string' name='titleType' ordinal='16' />
            <column datatype='string' name='primaryTitle' ordinal='17' />
            <column datatype='string' name='originalTitle' ordinal='18' />
            <column datatype='integer' name='isAdult' ordinal='19' />
            <column datatype='integer' name='startYear' ordinal='20' />
            <column datatype='string' name='endYear' ordinal='21' />
            <column datatype='integer' name='runtimeMinutes' ordinal='22' />
            <column datatype='integer' name='releaseYear' ordinal='23' />
            <column datatype='string' name='decades' ordinal='24' />
            <column datatype='string' name='locations' ordinal='25' />
            <column datatype='string' name='scene' ordinal='26' />
            <column datatype='string' name='address' ordinal='27' />
            <column datatype='string' name='area' ordinal='28' />
            <column datatype='string' name='state' ordinal='29' />
            <column datatype='string' name='country' ordinal='30' />
            <column datatype='string' name='lattitude' ordinal='31' />
            <column datatype='string' name='longitude' ordinal='32' />
            <column datatype='string' name='continent' ordinal='33' />
            <column datatype='string' name='genre_list' ordinal='34' />
            <column datatype='string' name='coo_list' ordinal='35' />
            <column datatype='integer' name='budget_est' ordinal='36' />
            <column datatype='string' name='budget_label' ordinal='37' />
            <column datatype='real' name='averageRating' ordinal='38' />
            <column datatype='integer' name='numVotes' ordinal='39' />
            <column datatype='string' name='coo_continent' ordinal='40' />
            <column datatype='string' name='film_era' ordinal='41' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;£&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;\\t&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>film_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[film_id]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>film_id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_211F38A6DD2B4ABDB842BF8C015AA8A4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>issue_label</remote-name>
            <remote-type>129</remote-type>
            <local-name>[issue_label]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>issue_label</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_211F38A6DD2B4ABDB842BF8C015AA8A4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>openingWeekend</remote-name>
            <remote-type>129</remote-type>
            <local-name>[openingWeekend]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>openingWeekend</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_211F38A6DD2B4ABDB842BF8C015AA8A4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekendEarning</remote-name>
            <remote-type>20</remote-type>
            <local-name>[weekendEarning]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>weekendEarning</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_211F38A6DD2B4ABDB842BF8C015AA8A4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>budget</remote-name>
            <remote-type>129</remote-type>
            <local-name>[budget]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>budget</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_211F38A6DD2B4ABDB842BF8C015AA8A4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GrossUSCanada</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GrossUSCanada]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>GrossUSCanada</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_211F38A6DD2B4ABDB842BF8C015AA8A4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GrossWorldwide</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GrossWorldwide]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>GrossWorldwide</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_211F38A6DD2B4ABDB842BF8C015AA8A4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>officialSitesCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[officialSitesCount]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>officialSitesCount</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_211F38A6DD2B4ABDB842BF8C015AA8A4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>officialSites</remote-name>
            <remote-type>129</remote-type>
            <local-name>[officialSites]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>officialSites</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_211F38A6DD2B4ABDB842BF8C015AA8A4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>productionCompanyCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[productionCompanyCount]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>productionCompanyCount</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_211F38A6DD2B4ABDB842BF8C015AA8A4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>productionCompanies</remote-name>
            <remote-type>129</remote-type>
            <local-name>[productionCompanies]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>productionCompanies</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_211F38A6DD2B4ABDB842BF8C015AA8A4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>languageCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[languageCount]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>languageCount</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_211F38A6DD2B4ABDB842BF8C015AA8A4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>languages</remote-name>
            <remote-type>129</remote-type>
            <local-name>[languages]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>languages</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_211F38A6DD2B4ABDB842BF8C015AA8A4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>releaseDate</remote-name>
            <remote-type>133</remote-type>
            <local-name>[releaseDate]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>releaseDate</remote-alias>
            <ordinal>13</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_211F38A6DD2B4ABDB842BF8C015AA8A4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>releaseLocation</remote-name>
            <remote-type>129</remote-type>
            <local-name>[releaseLocation]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>releaseLocation</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_211F38A6DD2B4ABDB842BF8C015AA8A4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>countryOriginCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[countryOriginCount]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>countryOriginCount</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_211F38A6DD2B4ABDB842BF8C015AA8A4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>titleType</remote-name>
            <remote-type>129</remote-type>
            <local-name>[titleType]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>titleType</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_211F38A6DD2B4ABDB842BF8C015AA8A4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>primaryTitle</remote-name>
            <remote-type>129</remote-type>
            <local-name>[primaryTitle]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>primaryTitle</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_211F38A6DD2B4ABDB842BF8C015AA8A4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>originalTitle</remote-name>
            <remote-type>129</remote-type>
            <local-name>[originalTitle]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>originalTitle</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_211F38A6DD2B4ABDB842BF8C015AA8A4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>isAdult</remote-name>
            <remote-type>20</remote-type>
            <local-name>[isAdult]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>isAdult</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_211F38A6DD2B4ABDB842BF8C015AA8A4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>startYear</remote-name>
            <remote-type>20</remote-type>
            <local-name>[startYear]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>startYear</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_211F38A6DD2B4ABDB842BF8C015AA8A4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>endYear</remote-name>
            <remote-type>129</remote-type>
            <local-name>[endYear]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>endYear</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_211F38A6DD2B4ABDB842BF8C015AA8A4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>runtimeMinutes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[runtimeMinutes]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>runtimeMinutes</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_211F38A6DD2B4ABDB842BF8C015AA8A4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>releaseYear</remote-name>
            <remote-type>20</remote-type>
            <local-name>[releaseYear]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>releaseYear</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_211F38A6DD2B4ABDB842BF8C015AA8A4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>decades</remote-name>
            <remote-type>129</remote-type>
            <local-name>[decades]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>decades</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_211F38A6DD2B4ABDB842BF8C015AA8A4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>locations</remote-name>
            <remote-type>129</remote-type>
            <local-name>[locations]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>locations</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_211F38A6DD2B4ABDB842BF8C015AA8A4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>scene</remote-name>
            <remote-type>129</remote-type>
            <local-name>[scene]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>scene</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_211F38A6DD2B4ABDB842BF8C015AA8A4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>address</remote-name>
            <remote-type>129</remote-type>
            <local-name>[address]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>address</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_211F38A6DD2B4ABDB842BF8C015AA8A4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>area</remote-name>
            <remote-type>129</remote-type>
            <local-name>[area]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>area</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_211F38A6DD2B4ABDB842BF8C015AA8A4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_211F38A6DD2B4ABDB842BF8C015AA8A4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_211F38A6DD2B4ABDB842BF8C015AA8A4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lattitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[lattitude]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>lattitude</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_211F38A6DD2B4ABDB842BF8C015AA8A4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_211F38A6DD2B4ABDB842BF8C015AA8A4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_211F38A6DD2B4ABDB842BF8C015AA8A4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>genre_list</remote-name>
            <remote-type>129</remote-type>
            <local-name>[genre_list]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>genre_list</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_211F38A6DD2B4ABDB842BF8C015AA8A4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coo_list</remote-name>
            <remote-type>129</remote-type>
            <local-name>[coo_list]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>coo_list</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_211F38A6DD2B4ABDB842BF8C015AA8A4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>budget_est</remote-name>
            <remote-type>20</remote-type>
            <local-name>[budget_est]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>budget_est</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_211F38A6DD2B4ABDB842BF8C015AA8A4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>budget_label</remote-name>
            <remote-type>129</remote-type>
            <local-name>[budget_label]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>budget_label</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_211F38A6DD2B4ABDB842BF8C015AA8A4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>averageRating</remote-name>
            <remote-type>5</remote-type>
            <local-name>[averageRating]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>averageRating</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_211F38A6DD2B4ABDB842BF8C015AA8A4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>numVotes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[numVotes]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>numVotes</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_211F38A6DD2B4ABDB842BF8C015AA8A4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coo_continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[coo_continent]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>coo_continent</remote-alias>
            <ordinal>40</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_211F38A6DD2B4ABDB842BF8C015AA8A4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>film_era</remote-name>
            <remote-type>129</remote-type>
            <local-name>[film_era]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>film_era</remote-alias>
            <ordinal>41</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_211F38A6DD2B4ABDB842BF8C015AA8A4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Gross US Canada' datatype='integer' name='[GrossUSCanada]' role='measure' type='quantitative' />
      <column caption='Gross Worldwide' datatype='integer' name='[GrossWorldwide]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='intermediate_predicted_full_dataset.tsv' datatype='table' name='[__tableau_internal_object_id__].[intermediate_predicted_full_dataset.tsv_211F38A6DD2B4ABDB842BF8C015AA8A4]' role='measure' type='quantitative' />
      <column caption='Address' datatype='string' name='[address]' role='dimension' type='nominal' />
      <column caption='Area' datatype='string' name='[area]' role='dimension' type='nominal' />
      <column caption='Average Rating' datatype='real' name='[averageRating]' role='measure' type='quantitative' />
      <column caption='Budget' datatype='string' name='[budget]' role='dimension' type='nominal' />
      <column caption='Budget Est' datatype='integer' name='[budget_est]' role='measure' type='quantitative' />
      <column caption='Budget Label' datatype='string' name='[budget_label]' role='dimension' type='nominal' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='Coo Continent' datatype='string' name='[coo_continent]' role='dimension' type='nominal' />
      <column caption='Coo List' datatype='string' name='[coo_list]' role='dimension' type='nominal' />
      <column caption='Country Origin Count' datatype='integer' name='[countryOriginCount]' role='measure' type='quantitative' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Decades' datatype='string' name='[decades]' role='dimension' type='nominal' />
      <column caption='End Year' datatype='string' name='[endYear]' role='dimension' type='nominal' />
      <column caption='Film Era' datatype='string' name='[film_era]' role='dimension' type='nominal' />
      <column caption='Film Id' datatype='string' name='[film_id]' role='dimension' type='nominal' />
      <column caption='Genre List' datatype='string' name='[genre_list]' role='dimension' type='nominal' />
      <column caption='Is Adult' datatype='integer' name='[isAdult]' role='measure' type='quantitative' />
      <column caption='Issue Label' datatype='string' name='[issue_label]' role='dimension' type='nominal' />
      <column caption='Language Count' datatype='integer' name='[languageCount]' role='measure' type='quantitative' />
      <column caption='Languages' datatype='string' name='[languages]' role='dimension' type='nominal' />
      <column caption='Lattitude' datatype='string' name='[lattitude]' role='dimension' type='nominal' />
      <column caption='Locations' datatype='string' name='[locations]' role='dimension' type='nominal' />
      <column caption='Longitude' datatype='string' name='[longitude]' role='dimension' type='nominal' />
      <column caption='Num Votes' datatype='integer' name='[numVotes]' role='measure' type='quantitative' />
      <column caption='Official Sites Count' datatype='integer' name='[officialSitesCount]' role='measure' type='quantitative' />
      <column caption='Official Sites' datatype='string' name='[officialSites]' role='dimension' type='nominal' />
      <column caption='Opening Weekend' datatype='string' name='[openingWeekend]' role='dimension' type='nominal' />
      <column caption='Original Title' datatype='string' name='[originalTitle]' role='dimension' type='nominal' />
      <column caption='Primary Title' datatype='string' name='[primaryTitle]' role='dimension' type='nominal' />
      <column caption='Production Companies' datatype='string' name='[productionCompanies]' role='dimension' type='nominal' />
      <column caption='Production Company Count' datatype='integer' name='[productionCompanyCount]' role='measure' type='quantitative' />
      <column caption='Release Date' datatype='date' name='[releaseDate]' role='dimension' type='ordinal' />
      <column caption='Release Location' datatype='string' name='[releaseLocation]' role='dimension' type='nominal' />
      <column caption='Release Year' datatype='integer' name='[releaseYear]' role='dimension' type='quantitative' />
      <column caption='Runtime Minutes' datatype='integer' name='[runtimeMinutes]' role='measure' type='quantitative' />
      <column caption='Scene' datatype='string' name='[scene]' role='dimension' type='nominal' />
      <column caption='Start Year' datatype='integer' name='[startYear]' role='dimension' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Title Type' datatype='string' name='[titleType]' role='dimension' type='nominal' />
      <column caption='Weekend Earning' datatype='integer' name='[weekendEarning]' role='measure' type='quantitative' />
      <drill-paths>
        <drill-path name='country, state'>
          <field>[country]</field>
          <field>[state]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='intermediate_predicted_full_dataset.tsv' id='intermediate_predicted_full_dataset.tsv_211F38A6DD2B4ABDB842BF8C015AA8A4'>
            <properties context=''>
              <relation connection='textscan.1xxzzsm0jol35710kkms718byith' name='intermediate_predicted_full_dataset.tsv' table='[intermediate_predicted_full_dataset#tsv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_GB' separator='&#9;'>
                  <column datatype='string' name='film_id' ordinal='0' />
                  <column datatype='string' name='issue_label' ordinal='1' />
                  <column datatype='string' name='openingWeekend' ordinal='2' />
                  <column datatype='integer' name='weekendEarning' ordinal='3' />
                  <column datatype='string' name='budget' ordinal='4' />
                  <column datatype='integer' name='GrossUSCanada' ordinal='5' />
                  <column datatype='integer' name='GrossWorldwide' ordinal='6' />
                  <column datatype='integer' name='officialSitesCount' ordinal='7' />
                  <column datatype='string' name='officialSites' ordinal='8' />
                  <column datatype='integer' name='productionCompanyCount' ordinal='9' />
                  <column datatype='string' name='productionCompanies' ordinal='10' />
                  <column datatype='integer' name='languageCount' ordinal='11' />
                  <column datatype='string' name='languages' ordinal='12' />
                  <column datatype='date' name='releaseDate' ordinal='13' />
                  <column datatype='string' name='releaseLocation' ordinal='14' />
                  <column datatype='integer' name='countryOriginCount' ordinal='15' />
                  <column datatype='string' name='titleType' ordinal='16' />
                  <column datatype='string' name='primaryTitle' ordinal='17' />
                  <column datatype='string' name='originalTitle' ordinal='18' />
                  <column datatype='integer' name='isAdult' ordinal='19' />
                  <column datatype='integer' name='startYear' ordinal='20' />
                  <column datatype='string' name='endYear' ordinal='21' />
                  <column datatype='integer' name='runtimeMinutes' ordinal='22' />
                  <column datatype='integer' name='releaseYear' ordinal='23' />
                  <column datatype='string' name='decades' ordinal='24' />
                  <column datatype='string' name='locations' ordinal='25' />
                  <column datatype='string' name='scene' ordinal='26' />
                  <column datatype='string' name='address' ordinal='27' />
                  <column datatype='string' name='area' ordinal='28' />
                  <column datatype='string' name='state' ordinal='29' />
                  <column datatype='string' name='country' ordinal='30' />
                  <column datatype='string' name='lattitude' ordinal='31' />
                  <column datatype='string' name='longitude' ordinal='32' />
                  <column datatype='string' name='continent' ordinal='33' />
                  <column datatype='string' name='genre_list' ordinal='34' />
                  <column datatype='string' name='coo_list' ordinal='35' />
                  <column datatype='integer' name='budget_est' ordinal='36' />
                  <column datatype='string' name='budget_label' ordinal='37' />
                  <column datatype='real' name='averageRating' ordinal='38' />
                  <column datatype='integer' name='numVotes' ordinal='39' />
                  <column datatype='string' name='coo_continent' ordinal='40' />
                  <column datatype='string' name='film_era' ordinal='41' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='intermediate_predicted_full_dataset' inline='true' name='federated.1hki1ac1peadlu15imht81tndqec' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='intermediate_predicted_full_dataset' name='textscan.0lscb2b0j6aaal18id91m0ip5jbw'>
            <connection class='textscan' directory='H:/Kiran/Project_IMDB/classification/data' filename='intermediate_predicted_full_dataset.tsv' password='' server='' />
          </named-connection>
          <named-connection caption='genre_vs_issues_correlation_dataset' name='textscan.0hycjww08r30yt11wbgws122mukr'>
            <connection class='textscan' directory='H:/Kiran/Project_IMDB/Results' filename='genre_vs_issues_correlation_dataset.tsv' password='' server='' />
          </named-connection>
          <named-connection caption='original_predicted_full_dataset' name='textscan.0bufjqo1js21vi1gajrbs1ooulhc'>
            <connection class='textscan' directory='H:/Mdx_uni_stuff/4090_Project/Code&amp;Data/DataFiles' filename='original_predicted_full_dataset.tsv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0lscb2b0j6aaal18id91m0ip5jbw' name='intermediate_predicted_full_dataset.tsv' table='[intermediate_predicted_full_dataset#tsv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator='&#9;'>
            <column datatype='string' name='film_id' ordinal='0' />
            <column datatype='string' name='issue_label' ordinal='1' />
            <column datatype='string' name='openingWeekend' ordinal='2' />
            <column datatype='string' name='weekendEarning' ordinal='3' />
            <column datatype='string' name='budget' ordinal='4' />
            <column datatype='string' name='GrossUSCanada' ordinal='5' />
            <column datatype='string' name='GrossWorldwide' ordinal='6' />
            <column datatype='real' name='officialSitesCount' ordinal='7' />
            <column datatype='string' name='officialSites' ordinal='8' />
            <column datatype='real' name='productionCompanyCount' ordinal='9' />
            <column datatype='string' name='productionCompanies' ordinal='10' />
            <column datatype='real' name='languageCount' ordinal='11' />
            <column datatype='string' name='languages' ordinal='12' />
            <column datatype='date' name='releaseDate' ordinal='13' />
            <column datatype='string' name='releaseLocation' ordinal='14' />
            <column datatype='real' name='countryOriginCount' ordinal='15' />
            <column datatype='string' name='titleType' ordinal='16' />
            <column datatype='string' name='primaryTitle' ordinal='17' />
            <column datatype='string' name='originalTitle' ordinal='18' />
            <column datatype='real' name='isAdult' ordinal='19' />
            <column datatype='integer' name='startYear' ordinal='20' />
            <column datatype='string' name='endYear' ordinal='21' />
            <column datatype='integer' name='runtimeMinutes' ordinal='22' />
            <column datatype='integer' name='releaseYear' ordinal='23' />
            <column datatype='string' name='decades' ordinal='24' />
            <column datatype='string' name='locations' ordinal='25' />
            <column datatype='string' name='scene' ordinal='26' />
            <column datatype='string' name='address' ordinal='27' />
            <column datatype='string' name='area' ordinal='28' />
            <column datatype='string' name='state' ordinal='29' />
            <column datatype='string' name='country' ordinal='30' />
            <column datatype='string' name='lattitude' ordinal='31' />
            <column datatype='string' name='longitude' ordinal='32' />
            <column datatype='string' name='continent' ordinal='33' />
            <column datatype='string' name='genre_list' ordinal='34' />
            <column datatype='string' name='coo_list' ordinal='35' />
            <column datatype='real' name='budget_est' ordinal='36' />
            <column datatype='string' name='budget_label' ordinal='37' />
            <column datatype='real' name='averageRating' ordinal='38' />
            <column datatype='integer' name='numVotes' ordinal='39' />
            <column datatype='string' name='coo_continent' ordinal='40' />
            <column datatype='string' name='film_era' ordinal='41' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0lscb2b0j6aaal18id91m0ip5jbw' name='intermediate_predicted_full_dataset.tsv' table='[intermediate_predicted_full_dataset#tsv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator='&#9;'>
            <column datatype='string' name='film_id' ordinal='0' />
            <column datatype='string' name='issue_label' ordinal='1' />
            <column datatype='string' name='openingWeekend' ordinal='2' />
            <column datatype='string' name='weekendEarning' ordinal='3' />
            <column datatype='string' name='budget' ordinal='4' />
            <column datatype='string' name='GrossUSCanada' ordinal='5' />
            <column datatype='string' name='GrossWorldwide' ordinal='6' />
            <column datatype='real' name='officialSitesCount' ordinal='7' />
            <column datatype='string' name='officialSites' ordinal='8' />
            <column datatype='real' name='productionCompanyCount' ordinal='9' />
            <column datatype='string' name='productionCompanies' ordinal='10' />
            <column datatype='real' name='languageCount' ordinal='11' />
            <column datatype='string' name='languages' ordinal='12' />
            <column datatype='date' name='releaseDate' ordinal='13' />
            <column datatype='string' name='releaseLocation' ordinal='14' />
            <column datatype='real' name='countryOriginCount' ordinal='15' />
            <column datatype='string' name='titleType' ordinal='16' />
            <column datatype='string' name='primaryTitle' ordinal='17' />
            <column datatype='string' name='originalTitle' ordinal='18' />
            <column datatype='real' name='isAdult' ordinal='19' />
            <column datatype='integer' name='startYear' ordinal='20' />
            <column datatype='string' name='endYear' ordinal='21' />
            <column datatype='integer' name='runtimeMinutes' ordinal='22' />
            <column datatype='integer' name='releaseYear' ordinal='23' />
            <column datatype='string' name='decades' ordinal='24' />
            <column datatype='string' name='locations' ordinal='25' />
            <column datatype='string' name='scene' ordinal='26' />
            <column datatype='string' name='address' ordinal='27' />
            <column datatype='string' name='area' ordinal='28' />
            <column datatype='string' name='state' ordinal='29' />
            <column datatype='string' name='country' ordinal='30' />
            <column datatype='string' name='lattitude' ordinal='31' />
            <column datatype='string' name='longitude' ordinal='32' />
            <column datatype='string' name='continent' ordinal='33' />
            <column datatype='string' name='genre_list' ordinal='34' />
            <column datatype='string' name='coo_list' ordinal='35' />
            <column datatype='real' name='budget_est' ordinal='36' />
            <column datatype='string' name='budget_label' ordinal='37' />
            <column datatype='real' name='averageRating' ordinal='38' />
            <column datatype='integer' name='numVotes' ordinal='39' />
            <column datatype='string' name='coo_continent' ordinal='40' />
            <column datatype='string' name='film_era' ordinal='41' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;£&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;\\t&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>film_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[film_id]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>film_id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_059D472842E5439DA1AC074B3B225626]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>issue_label</remote-name>
            <remote-type>129</remote-type>
            <local-name>[issue_label]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>issue_label</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_059D472842E5439DA1AC074B3B225626]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>openingWeekend</remote-name>
            <remote-type>129</remote-type>
            <local-name>[openingWeekend]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>openingWeekend</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_059D472842E5439DA1AC074B3B225626]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekendEarning</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekendEarning]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>weekendEarning</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_059D472842E5439DA1AC074B3B225626]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>budget</remote-name>
            <remote-type>129</remote-type>
            <local-name>[budget]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>budget</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_059D472842E5439DA1AC074B3B225626]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GrossUSCanada</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GrossUSCanada]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>GrossUSCanada</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_059D472842E5439DA1AC074B3B225626]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GrossWorldwide</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GrossWorldwide]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>GrossWorldwide</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_059D472842E5439DA1AC074B3B225626]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>officialSitesCount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[officialSitesCount]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>officialSitesCount</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_059D472842E5439DA1AC074B3B225626]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>officialSites</remote-name>
            <remote-type>129</remote-type>
            <local-name>[officialSites]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>officialSites</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_059D472842E5439DA1AC074B3B225626]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>productionCompanyCount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[productionCompanyCount]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>productionCompanyCount</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_059D472842E5439DA1AC074B3B225626]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>productionCompanies</remote-name>
            <remote-type>129</remote-type>
            <local-name>[productionCompanies]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>productionCompanies</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_059D472842E5439DA1AC074B3B225626]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>languageCount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[languageCount]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>languageCount</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_059D472842E5439DA1AC074B3B225626]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>languages</remote-name>
            <remote-type>129</remote-type>
            <local-name>[languages]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>languages</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_059D472842E5439DA1AC074B3B225626]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>releaseDate</remote-name>
            <remote-type>133</remote-type>
            <local-name>[releaseDate]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>releaseDate</remote-alias>
            <ordinal>13</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_059D472842E5439DA1AC074B3B225626]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>releaseLocation</remote-name>
            <remote-type>129</remote-type>
            <local-name>[releaseLocation]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>releaseLocation</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_059D472842E5439DA1AC074B3B225626]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>countryOriginCount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[countryOriginCount]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>countryOriginCount</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_059D472842E5439DA1AC074B3B225626]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>titleType</remote-name>
            <remote-type>129</remote-type>
            <local-name>[titleType]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>titleType</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_059D472842E5439DA1AC074B3B225626]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>primaryTitle</remote-name>
            <remote-type>129</remote-type>
            <local-name>[primaryTitle]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>primaryTitle</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_059D472842E5439DA1AC074B3B225626]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>originalTitle</remote-name>
            <remote-type>129</remote-type>
            <local-name>[originalTitle]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>originalTitle</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_059D472842E5439DA1AC074B3B225626]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>isAdult</remote-name>
            <remote-type>5</remote-type>
            <local-name>[isAdult]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>isAdult</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_059D472842E5439DA1AC074B3B225626]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>startYear</remote-name>
            <remote-type>20</remote-type>
            <local-name>[startYear]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>startYear</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_059D472842E5439DA1AC074B3B225626]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>endYear</remote-name>
            <remote-type>129</remote-type>
            <local-name>[endYear]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>endYear</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_059D472842E5439DA1AC074B3B225626]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>runtimeMinutes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[runtimeMinutes]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>runtimeMinutes</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_059D472842E5439DA1AC074B3B225626]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>releaseYear</remote-name>
            <remote-type>20</remote-type>
            <local-name>[releaseYear]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>releaseYear</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_059D472842E5439DA1AC074B3B225626]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>decades</remote-name>
            <remote-type>129</remote-type>
            <local-name>[decades]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>decades</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_059D472842E5439DA1AC074B3B225626]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>locations</remote-name>
            <remote-type>129</remote-type>
            <local-name>[locations]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>locations</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_059D472842E5439DA1AC074B3B225626]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>scene</remote-name>
            <remote-type>129</remote-type>
            <local-name>[scene]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>scene</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_059D472842E5439DA1AC074B3B225626]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>address</remote-name>
            <remote-type>129</remote-type>
            <local-name>[address]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>address</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_059D472842E5439DA1AC074B3B225626]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>area</remote-name>
            <remote-type>129</remote-type>
            <local-name>[area]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>area</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_059D472842E5439DA1AC074B3B225626]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_059D472842E5439DA1AC074B3B225626]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_059D472842E5439DA1AC074B3B225626]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lattitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[lattitude]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>lattitude</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_059D472842E5439DA1AC074B3B225626]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_059D472842E5439DA1AC074B3B225626]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_059D472842E5439DA1AC074B3B225626]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>genre_list</remote-name>
            <remote-type>129</remote-type>
            <local-name>[genre_list]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>genre_list</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_059D472842E5439DA1AC074B3B225626]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coo_list</remote-name>
            <remote-type>129</remote-type>
            <local-name>[coo_list]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>coo_list</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_059D472842E5439DA1AC074B3B225626]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>budget_est</remote-name>
            <remote-type>5</remote-type>
            <local-name>[budget_est]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>budget_est</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_059D472842E5439DA1AC074B3B225626]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>budget_label</remote-name>
            <remote-type>129</remote-type>
            <local-name>[budget_label]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>budget_label</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_059D472842E5439DA1AC074B3B225626]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>averageRating</remote-name>
            <remote-type>5</remote-type>
            <local-name>[averageRating]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>averageRating</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_059D472842E5439DA1AC074B3B225626]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>numVotes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[numVotes]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>numVotes</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_059D472842E5439DA1AC074B3B225626]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coo_continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[coo_continent]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>coo_continent</remote-alias>
            <ordinal>40</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_059D472842E5439DA1AC074B3B225626]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>film_era</remote-name>
            <remote-type>129</remote-type>
            <local-name>[film_era]</local-name>
            <parent-name>[intermediate_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>film_era</remote-alias>
            <ordinal>41</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[intermediate_predicted_full_dataset.tsv_059D472842E5439DA1AC074B3B225626]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Ranking by Social Issue' datatype='integer' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_UNIQUE([Calculation_538743166044520456], &apos;desc&apos;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='count_interval' datatype='string' name='[Calculation_1693916478540742656]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF COUNTD([film_id]) &lt;= 500 THEN &apos;Film Count: &lt; 500&apos;&#13;&#10;ELSEIF COUNTD([film_id]) &lt;= 1000 THEN &apos;Film Count: 500 - 1000&apos;&#13;&#10;ELSEIF COUNTD([film_id]) &lt;= 1500 THEN &apos;Film Count: 1000 - 1500&apos;&#13;&#10;ELSEIF COUNTD([film_id]) &gt; 1500 THEN &apos;Film Count: &gt; 1500&apos;&#13;&#10;END' />
      </column>
      <column caption='log_count_films' datatype='real' name='[Calculation_1734448864393080833]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='LOG(COUNTD([film_id]))' />
      </column>
      <column caption='log interval' datatype='string' name='[Calculation_1734448864551047170]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF LOG(COUNTD([film_id])) &lt;= 0.88 THEN &apos;film count &lt; 8&apos;&#13;&#10;ELSEIF LOG(COUNTD([film_id])) &lt;= 1.76 THEN &apos;film count: 8 - 55&apos;&#13;&#10;ELSEIF LOG(COUNTD([film_id])) &lt;= 2.64 THEN &apos;film count: 55 - 435&apos;&#13;&#10;ELSEIF LOG(COUNTD([film_id])) &lt;= 3.52 THEN &apos;film count: 435 - 5000&apos;&#13;&#10;ELSEIF LOG(COUNTD([film_id])) &gt; 3.52 THEN &apos;film count &gt; 5000&apos;&#13;&#10;END' />
      </column>
      <column caption='Percent of Total Movies' datatype='real' name='[Calculation_538743166044520456]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([film_id]) / SUM({FIXED [releaseYear]: COUNTD([film_id])}) * 100' />
      </column>
      <column caption='distinct_film_count' datatype='integer' name='[Calculation_538743166061293577]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([film_id])' />
      </column>
      <column caption='Top Country per Social Issue' datatype='string' name='[Calculation_538743166142578706]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation1] = 1 THEN ATTR([coo_list]) END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Top coo' datatype='string' name='[Calculation_538743166158741528]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF RANK_UNIQUE([Calculation_538743166044520456]) &lt;= [Parameters].[Parameter 1]&#13;&#10;THEN ATTR([coo_list])&#13;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Show Top Country' datatype='boolean' name='[Calculation_538743166167384090]' role='measure' type='nominal'>
        <calculation class='tableau' formula='RANK_UNIQUE([Calculation_538743166044520456]) == [Parameters].[Parameter 1]'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Rank SI per country' datatype='integer' name='[Calculation_577023763792109568]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_UNIQUE([Calculation_538743166061293577],&apos;desc&apos;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Top Ranking per country' datatype='string' name='[Calculation_577023763800829953]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_577023763792109568] = 1 THEN ATTR([issue_label]) END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Top SI' datatype='string' name='[Calculation_577023763801382914]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF RANK_UNIQUE([Calculation_538743166061293577]) &lt;= [Parameters].[Parameter 2]&#13;&#10;THEN ATTR([issue_label])&#13;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Show Top SI' datatype='boolean' name='[Calculation_577023763821789187]' role='measure' type='nominal'>
        <calculation class='tableau' formula='RANK_UNIQUE([Calculation_538743166061293577]) == [Parameters].[Parameter 2]'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='gen-issue_perc_count' datatype='real' name='[Calculation_962644482137464832]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([film_id]) / TOTAL(COUNTD([film_id]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Shhot_location_type' datatype='string' name='[Calculation_962644482145800193]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [coo_list] == [country] THEN &apos;Domestic&apos;&#13;&#10;ELSE &apos;International&apos;&#13;&#10;END' />
      </column>
      <column datatype='string' name='[Coo List (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[coo_list]' new-bin='true'>
          <bin default-name='false' value='&quot;Group 1&quot;'>
            <value>&quot;United States&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Group 2&quot;'>
            <value>&quot;France&quot;</value>
            <value>&quot;United Kingdom&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Group 3&quot;'>
            <value>&quot;Canada&quot;</value>
            <value>&quot;Germany&quot;</value>
            <value>&quot;India&quot;</value>
            <value>&quot;Italy&quot;</value>
            <value>&quot;Japan&quot;</value>
            <value>&quot;Spain&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;None&quot;'>
            <value>&quot;None&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Other Countries&quot;'>
            <value>&quot;Afghanistan&quot;</value>
            <value>&quot;Albania&quot;</value>
            <value>&quot;Algeria&quot;</value>
            <value>&quot;Andorra&quot;</value>
            <value>&quot;Angola&quot;</value>
            <value>&quot;Antarctica&quot;</value>
            <value>&quot;Argentina&quot;</value>
            <value>&quot;Armenia&quot;</value>
            <value>&quot;Aruba&quot;</value>
            <value>&quot;Australia&quot;</value>
            <value>&quot;Austria&quot;</value>
            <value>&quot;Azerbaijan&quot;</value>
            <value>&quot;Bahamas&quot;</value>
            <value>&quot;Bahrain&quot;</value>
            <value>&quot;Bangladesh&quot;</value>
            <value>&quot;Belarus&quot;</value>
            <value>&quot;Belgium&quot;</value>
            <value>&quot;Benin&quot;</value>
            <value>&quot;Bermuda&quot;</value>
            <value>&quot;Bhutan&quot;</value>
            <value>&quot;Bolivia&quot;</value>
            <value>&quot;Bosnia and Herzegovina&quot;</value>
            <value>&quot;Botswana&quot;</value>
            <value>&quot;Brazil&quot;</value>
            <value>&quot;Brunei&quot;</value>
            <value>&quot;Bulgaria&quot;</value>
            <value>&quot;Burkina Faso&quot;</value>
            <value>&quot;Burma&quot;</value>
            <value>&quot;Cambodia&quot;</value>
            <value>&quot;Cameroon&quot;</value>
            <value>&quot;Cape Verde&quot;</value>
            <value>&quot;Cayman Islands&quot;</value>
            <value>&quot;Chad&quot;</value>
            <value>&quot;Chile&quot;</value>
            <value>&quot;China&quot;</value>
            <value>&quot;Cocos Islands&quot;</value>
            <value>&quot;Colombia&quot;</value>
            <value>&quot;Congo&quot;</value>
            <value>&quot;Costa Rica&quot;</value>
            <value>&quot;Côte d&apos;Ivoire&quot;</value>
            <value>&quot;Croatia&quot;</value>
            <value>&quot;Cuba&quot;</value>
            <value>&quot;Cyprus&quot;</value>
            <value>&quot;Czech Republic&quot;</value>
            <value>&quot;Czechoslovakia&quot;</value>
            <value>&quot;Denmark&quot;</value>
            <value>&quot;Dominican Republic&quot;</value>
            <value>&quot;East Germany&quot;</value>
            <value>&quot;Ecuador&quot;</value>
            <value>&quot;Egypt&quot;</value>
            <value>&quot;El Salvador&quot;</value>
            <value>&quot;Estonia&quot;</value>
            <value>&quot;Ethiopia&quot;</value>
            <value>&quot;Falkland Islands&quot;</value>
            <value>&quot;Faroe Islands&quot;</value>
            <value>&quot;Federal Republic of Yugoslavia&quot;</value>
            <value>&quot;Fiji&quot;</value>
            <value>&quot;Finland&quot;</value>
            <value>&quot;French Polynesia&quot;</value>
            <value>&quot;Gabon&quot;</value>
            <value>&quot;Gambia&quot;</value>
            <value>&quot;Georgia&quot;</value>
            <value>&quot;Ghana&quot;</value>
            <value>&quot;Gibraltar&quot;</value>
            <value>&quot;Greece&quot;</value>
            <value>&quot;Greenland&quot;</value>
            <value>&quot;Guatemala&quot;</value>
            <value>&quot;Guinea&quot;</value>
            <value>&quot;Haiti&quot;</value>
            <value>&quot;Honduras&quot;</value>
            <value>&quot;Hong Kong&quot;</value>
            <value>&quot;Hungary&quot;</value>
            <value>&quot;Iceland&quot;</value>
            <value>&quot;Indonesia&quot;</value>
            <value>&quot;Iran&quot;</value>
            <value>&quot;Iraq&quot;</value>
            <value>&quot;Ireland&quot;</value>
            <value>&quot;Isle of Man&quot;</value>
            <value>&quot;Israel&quot;</value>
            <value>&quot;Jamaica&quot;</value>
            <value>&quot;Jordan&quot;</value>
            <value>&quot;Kazakhstan&quot;</value>
            <value>&quot;Kenya&quot;</value>
            <value>&quot;Kosovo&quot;</value>
            <value>&quot;Kuwait&quot;</value>
            <value>&quot;Kyrgyzstan&quot;</value>
            <value>&quot;Laos&quot;</value>
            <value>&quot;Latvia&quot;</value>
            <value>&quot;Lebanon&quot;</value>
            <value>&quot;Lesotho&quot;</value>
            <value>&quot;Liberia&quot;</value>
            <value>&quot;Libya&quot;</value>
            <value>&quot;Liechtenstein&quot;</value>
            <value>&quot;Lithuania&quot;</value>
            <value>&quot;Luxembourg&quot;</value>
            <value>&quot;Macao&quot;</value>
            <value>&quot;Madagascar&quot;</value>
            <value>&quot;Malawi&quot;</value>
            <value>&quot;Malaysia&quot;</value>
            <value>&quot;Maldives&quot;</value>
            <value>&quot;Mali&quot;</value>
            <value>&quot;Malta&quot;</value>
            <value>&quot;Marshall Islands&quot;</value>
            <value>&quot;Martinique&quot;</value>
            <value>&quot;Mauritania&quot;</value>
            <value>&quot;Mauritius&quot;</value>
            <value>&quot;Mexico&quot;</value>
            <value>&quot;Micronesia&quot;</value>
            <value>&quot;Moldova&quot;</value>
            <value>&quot;Monaco&quot;</value>
            <value>&quot;Mongolia&quot;</value>
            <value>&quot;Montenegro&quot;</value>
            <value>&quot;Morocco&quot;</value>
            <value>&quot;Mozambique&quot;</value>
            <value>&quot;Myanmar&quot;</value>
            <value>&quot;Namibia&quot;</value>
            <value>&quot;Nepal&quot;</value>
            <value>&quot;Netherlands&quot;</value>
            <value>&quot;Netherlands Antilles&quot;</value>
            <value>&quot;New Zealand&quot;</value>
            <value>&quot;Nicaragua&quot;</value>
            <value>&quot;Niger&quot;</value>
            <value>&quot;Nigeria&quot;</value>
            <value>&quot;North Korea&quot;</value>
            <value>&quot;North Macedonia&quot;</value>
            <value>&quot;North Vietnam&quot;</value>
            <value>&quot;Norway&quot;</value>
            <value>&quot;Occupied Palestinian Territory&quot;</value>
            <value>&quot;Pakistan&quot;</value>
            <value>&quot;Panama&quot;</value>
            <value>&quot;Papua New Guinea&quot;</value>
            <value>&quot;Paraguay&quot;</value>
            <value>&quot;Peru&quot;</value>
            <value>&quot;Philippines&quot;</value>
            <value>&quot;Poland&quot;</value>
            <value>&quot;Portugal&quot;</value>
            <value>&quot;Puerto Rico&quot;</value>
            <value>&quot;Qatar&quot;</value>
            <value>&quot;Reunion&quot;</value>
            <value>&quot;Romania&quot;</value>
            <value>&quot;Russia&quot;</value>
            <value>&quot;Rwanda&quot;</value>
            <value>&quot;Saint Kitts and Nevis&quot;</value>
            <value>&quot;Samoa&quot;</value>
            <value>&quot;San Marino&quot;</value>
            <value>&quot;Saudi Arabia&quot;</value>
            <value>&quot;Senegal&quot;</value>
            <value>&quot;Serbia&quot;</value>
            <value>&quot;Serbia and Montenegro&quot;</value>
            <value>&quot;Sierra Leone&quot;</value>
            <value>&quot;Singapore&quot;</value>
            <value>&quot;Slovakia&quot;</value>
            <value>&quot;Slovenia&quot;</value>
            <value>&quot;Solomon Islands&quot;</value>
            <value>&quot;Somalia&quot;</value>
            <value>&quot;South Africa&quot;</value>
            <value>&quot;South Korea&quot;</value>
            <value>&quot;Soviet Union&quot;</value>
            <value>&quot;Sri Lanka&quot;</value>
            <value>&quot;Sudan&quot;</value>
            <value>&quot;Suriname&quot;</value>
            <value>&quot;Svalbard and Jan Mayen&quot;</value>
            <value>&quot;Swaziland&quot;</value>
            <value>&quot;Sweden&quot;</value>
            <value>&quot;Switzerland&quot;</value>
            <value>&quot;Syria&quot;</value>
            <value>&quot;Taiwan&quot;</value>
            <value>&quot;Tajikistan&quot;</value>
            <value>&quot;Tanzania&quot;</value>
            <value>&quot;Thailand&quot;</value>
            <value>&quot;The Democratic Republic of Congo&quot;</value>
            <value>&quot;Togo&quot;</value>
            <value>&quot;Trinidad and Tobago&quot;</value>
            <value>&quot;Tunisia&quot;</value>
            <value>&quot;Turkey&quot;</value>
            <value>&quot;Uganda&quot;</value>
            <value>&quot;Ukraine&quot;</value>
            <value>&quot;United Arab Emirates&quot;</value>
            <value>&quot;Uruguay&quot;</value>
            <value>&quot;Uzbekistan&quot;</value>
            <value>&quot;Vanuatu&quot;</value>
            <value>&quot;Vatican&quot;</value>
            <value>&quot;Venezuela&quot;</value>
            <value>&quot;Vietnam&quot;</value>
            <value>&quot;West Germany&quot;</value>
            <value>&quot;Yemen&quot;</value>
            <value>&quot;Yugoslavia&quot;</value>
            <value>&quot;Zambia&quot;</value>
            <value>&quot;Zimbabwe&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <calculation class='categorical-bin' column='[country]' new-bin='true'>
          <bin default-name='false' value='&quot;First Group&quot;'>
            <value>&quot;United States&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;None&quot;'>
            <value>&quot;None&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Other Contributors&quot;'>
            <value>&quot;Afghanistan&quot;</value>
            <value>&quot;Africa&quot;</value>
            <value>&quot;Albania&quot;</value>
            <value>&quot;Algeria&quot;</value>
            <value>&quot;Andorra&quot;</value>
            <value>&quot;Angola&quot;</value>
            <value>&quot;Antarctica&quot;</value>
            <value>&quot;Antigua and Barbuda&quot;</value>
            <value>&quot;Arctic&quot;</value>
            <value>&quot;Argentina&quot;</value>
            <value>&quot;Armenia&quot;</value>
            <value>&quot;Atlantic Ocean&quot;</value>
            <value>&quot;Austria&quot;</value>
            <value>&quot;Azerbaijan&quot;</value>
            <value>&quot;Bahamas&quot;</value>
            <value>&quot;Bahrain&quot;</value>
            <value>&quot;Bangladesh&quot;</value>
            <value>&quot;Barbados&quot;</value>
            <value>&quot;Beijing&quot;</value>
            <value>&quot;Belarus&quot;</value>
            <value>&quot;Belgium&quot;</value>
            <value>&quot;Belize&quot;</value>
            <value>&quot;Benin&quot;</value>
            <value>&quot;Bermuda&quot;</value>
            <value>&quot;Bhutan&quot;</value>
            <value>&quot;Bolivia&quot;</value>
            <value>&quot;Bosnia and Herzegovina&quot;</value>
            <value>&quot;Botswana&quot;</value>
            <value>&quot;Brazil&quot;</value>
            <value>&quot;British Virgin Islands&quot;</value>
            <value>&quot;Brunei&quot;</value>
            <value>&quot;Bulgaria&quot;</value>
            <value>&quot;Burkina Faso&quot;</value>
            <value>&quot;Burundi&quot;</value>
            <value>&quot;Cambodia&quot;</value>
            <value>&quot;Cameroon&quot;</value>
            <value>&quot;Cape Verde&quot;</value>
            <value>&quot;Cayman Islands&quot;</value>
            <value>&quot;Central African Republic&quot;</value>
            <value>&quot;Chad&quot;</value>
            <value>&quot;Chile&quot;</value>
            <value>&quot;China&quot;</value>
            <value>&quot;Colombia&quot;</value>
            <value>&quot;Cook Islands&quot;</value>
            <value>&quot;Costa Rica&quot;</value>
            <value>&quot;Côte d&apos;Ivoire&quot;</value>
            <value>&quot;Croatia&quot;</value>
            <value>&quot;Cuba&quot;</value>
            <value>&quot;Cyprus&quot;</value>
            <value>&quot;Czech Republic&quot;</value>
            <value>&quot;Czechia&quot;</value>
            <value>&quot;Democratic Federation of Northern Syria&quot;</value>
            <value>&quot;Democratic Republic of the Congo&quot;</value>
            <value>&quot;Denmark&quot;</value>
            <value>&quot;Djibouti&quot;</value>
            <value>&quot;Dominican Republic&quot;</value>
            <value>&quot;East Timor&quot;</value>
            <value>&quot;Ecuador&quot;</value>
            <value>&quot;Egypt&quot;</value>
            <value>&quot;El Salvador&quot;</value>
            <value>&quot;Equatorial Guinea&quot;</value>
            <value>&quot;Eritrea&quot;</value>
            <value>&quot;Estonia&quot;</value>
            <value>&quot;Eswatini&quot;</value>
            <value>&quot;Ethiopia&quot;</value>
            <value>&quot;Europe&quot;</value>
            <value>&quot;Falkland Islands&quot;</value>
            <value>&quot;Faroe Islands&quot;</value>
            <value>&quot;Federated States of Micronesia&quot;</value>
            <value>&quot;Fiji&quot;</value>
            <value>&quot;Finland&quot;</value>
            <value>&quot;Gabon&quot;</value>
            <value>&quot;Georgia&quot;</value>
            <value>&quot;Ghana&quot;</value>
            <value>&quot;Gibraltar&quot;</value>
            <value>&quot;Greece&quot;</value>
            <value>&quot;Greenland&quot;</value>
            <value>&quot;Grenada&quot;</value>
            <value>&quot;Guatemala&quot;</value>
            <value>&quot;Guernsey&quot;</value>
            <value>&quot;Guinea&quot;</value>
            <value>&quot;Guinea-Bissau&quot;</value>
            <value>&quot;Guyana&quot;</value>
            <value>&quot;Haiti&quot;</value>
            <value>&quot;Honduras&quot;</value>
            <value>&quot;Hong Kong&quot;</value>
            <value>&quot;Hungary&quot;</value>
            <value>&quot;Iceland&quot;</value>
            <value>&quot;Indonesia&quot;</value>
            <value>&quot;Iran&quot;</value>
            <value>&quot;Ireland&quot;</value>
            <value>&quot;Isle of Man&quot;</value>
            <value>&quot;Israel&quot;</value>
            <value>&quot;Jamaica&quot;</value>
            <value>&quot;Japan&quot;</value>
            <value>&quot;Jersey&quot;</value>
            <value>&quot;Jordan&quot;</value>
            <value>&quot;Kazakhstan&quot;</value>
            <value>&quot;Kenya&quot;</value>
            <value>&quot;Kosovo&quot;</value>
            <value>&quot;Kuwait&quot;</value>
            <value>&quot;Kyrgyzstan&quot;</value>
            <value>&quot;Laos&quot;</value>
            <value>&quot;Latvia&quot;</value>
            <value>&quot;Lebanon&quot;</value>
            <value>&quot;Lesotho&quot;</value>
            <value>&quot;Liberia&quot;</value>
            <value>&quot;Libya&quot;</value>
            <value>&quot;Lithuania&quot;</value>
            <value>&quot;Luxembourg&quot;</value>
            <value>&quot;Macau&quot;</value>
            <value>&quot;Madagascar&quot;</value>
            <value>&quot;Malawi&quot;</value>
            <value>&quot;Malaysia&quot;</value>
            <value>&quot;Maldives&quot;</value>
            <value>&quot;Mali&quot;</value>
            <value>&quot;Malta&quot;</value>
            <value>&quot;Manukau Harbour&quot;</value>
            <value>&quot;Marshall Islands&quot;</value>
            <value>&quot;Mauritania&quot;</value>
            <value>&quot;Mauritius&quot;</value>
            <value>&quot;Mexico&quot;</value>
            <value>&quot;Moldova&quot;</value>
            <value>&quot;Monaco&quot;</value>
            <value>&quot;Mongolia&quot;</value>
            <value>&quot;Montenegro&quot;</value>
            <value>&quot;Montserrat&quot;</value>
            <value>&quot;Morocco&quot;</value>
            <value>&quot;Mozambique&quot;</value>
            <value>&quot;Myanmar&quot;</value>
            <value>&quot;Namibia&quot;</value>
            <value>&quot;Nauru&quot;</value>
            <value>&quot;Nepal&quot;</value>
            <value>&quot;Netherlands&quot;</value>
            <value>&quot;New Zealand&quot;</value>
            <value>&quot;Nicaragua&quot;</value>
            <value>&quot;Niger&quot;</value>
            <value>&quot;Nigeria&quot;</value>
            <value>&quot;Niue&quot;</value>
            <value>&quot;North America&quot;</value>
            <value>&quot;North Korea&quot;</value>
            <value>&quot;North Macedonia&quot;</value>
            <value>&quot;Norway&quot;</value>
            <value>&quot;Oceania&quot;</value>
            <value>&quot;Pakistan&quot;</value>
            <value>&quot;Palestinian Territories&quot;</value>
            <value>&quot;Panama&quot;</value>
            <value>&quot;Papua New Guinea&quot;</value>
            <value>&quot;Paraguay&quot;</value>
            <value>&quot;Peru&quot;</value>
            <value>&quot;Philippines&quot;</value>
            <value>&quot;Pitcairn Islands&quot;</value>
            <value>&quot;Poland&quot;</value>
            <value>&quot;Portugal&quot;</value>
            <value>&quot;Qatar&quot;</value>
            <value>&quot;Reunion&quot;</value>
            <value>&quot;Romania&quot;</value>
            <value>&quot;Russia&quot;</value>
            <value>&quot;Rwanda&quot;</value>
            <value>&quot;Saint Kitts and Nevis&quot;</value>
            <value>&quot;Saint Lucia&quot;</value>
            <value>&quot;Saint Vincent and the Grenadines&quot;</value>
            <value>&quot;Samoa&quot;</value>
            <value>&quot;San Marino&quot;</value>
            <value>&quot;São Tomé and Príncipe&quot;</value>
            <value>&quot;Saudi Arabia&quot;</value>
            <value>&quot;Senegal&quot;</value>
            <value>&quot;Serbia&quot;</value>
            <value>&quot;Seychelles&quot;</value>
            <value>&quot;Sierra Leone&quot;</value>
            <value>&quot;Singapore&quot;</value>
            <value>&quot;Slovakia&quot;</value>
            <value>&quot;Slovenia&quot;</value>
            <value>&quot;Solomon Islands&quot;</value>
            <value>&quot;Somalia&quot;</value>
            <value>&quot;South Africa&quot;</value>
            <value>&quot;South Georgia and the South Sandwich Islands&quot;</value>
            <value>&quot;South Korea&quot;</value>
            <value>&quot;South Sudan&quot;</value>
            <value>&quot;Sri Lanka&quot;</value>
            <value>&quot;Sudan&quot;</value>
            <value>&quot;Suriname&quot;</value>
            <value>&quot;Sweden&quot;</value>
            <value>&quot;Switzerland&quot;</value>
            <value>&quot;Syria&quot;</value>
            <value>&quot;Taiwan&quot;</value>
            <value>&quot;Tajikistan&quot;</value>
            <value>&quot;Tanzania&quot;</value>
            <value>&quot;Thailand&quot;</value>
            <value>&quot;The Gambia&quot;</value>
            <value>&quot;Togo&quot;</value>
            <value>&quot;Tonga&quot;</value>
            <value>&quot;Trinidad and Tobago&quot;</value>
            <value>&quot;Tunisia&quot;</value>
            <value>&quot;Turkey&quot;</value>
            <value>&quot;Turkmenistan&quot;</value>
            <value>&quot;Turks and Caicos Islands&quot;</value>
            <value>&quot;Uganda&quot;</value>
            <value>&quot;Ukraine&quot;</value>
            <value>&quot;United Arab Emirates&quot;</value>
            <value>&quot;Uruguay&quot;</value>
            <value>&quot;USSR&quot;</value>
            <value>&quot;Uzbekistan&quot;</value>
            <value>&quot;Vanuatu&quot;</value>
            <value>&quot;Vatican City&quot;</value>
            <value>&quot;Venezuela&quot;</value>
            <value>&quot;Vietnam&quot;</value>
            <value>&quot;Yemen&quot;</value>
            <value>&quot;Yugoslavia&quot;</value>
            <value>&quot;Zambia&quot;</value>
            <value>&quot;Zimbabwe&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Second Group&quot;'>
            <value>&quot;Canada&quot;</value>
            <value>&quot;France&quot;</value>
            <value>&quot;United Kingdom&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;ThirdGroup&quot;'>
            <value>&quot;Australia&quot;</value>
            <value>&quot;Germany&quot;</value>
            <value>&quot;India&quot;</value>
            <value>&quot;Italy&quot;</value>
            <value>&quot;Spain&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Film Era]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[releaseYear]' new-bin='true'>
          <bin default-name='false' value='&quot;Blockbuster Era&quot;'>
            <value>1981</value>
            <value>1982</value>
            <value>1983</value>
            <value>1984</value>
            <value>1985</value>
            <value>1986</value>
            <value>1987</value>
            <value>1988</value>
            <value>1989</value>
            <value>1990</value>
            <value>1991</value>
            <value>1992</value>
            <value>1993</value>
            <value>1994</value>
            <value>1995</value>
            <value>1996</value>
            <value>1997</value>
            <value>1998</value>
            <value>1999</value>
            <value>2000</value>
          </bin>
          <bin default-name='false' value='&quot;Golden Age of Hollywood&quot;'>
            <value>1931</value>
            <value>1932</value>
            <value>1933</value>
            <value>1934</value>
            <value>1935</value>
            <value>1936</value>
            <value>1937</value>
            <value>1938</value>
            <value>1939</value>
            <value>1940</value>
            <value>1941</value>
            <value>1942</value>
            <value>1943</value>
            <value>1944</value>
            <value>1945</value>
            <value>1946</value>
            <value>1947</value>
            <value>1948</value>
            <value>1949</value>
            <value>1950</value>
            <value>1951</value>
            <value>1952</value>
            <value>1953</value>
            <value>1954</value>
            <value>1955</value>
            <value>1956</value>
            <value>1957</value>
            <value>1958</value>
            <value>1959</value>
            <value>1960</value>
          </bin>
          <bin default-name='false' value='&quot;New Hollywood Era&quot;'>
            <value>1961</value>
            <value>1962</value>
            <value>1963</value>
            <value>1964</value>
            <value>1965</value>
            <value>1966</value>
            <value>1967</value>
            <value>1968</value>
            <value>1969</value>
            <value>1970</value>
            <value>1971</value>
            <value>1972</value>
            <value>1973</value>
            <value>1974</value>
            <value>1975</value>
            <value>1976</value>
            <value>1977</value>
            <value>1978</value>
            <value>1979</value>
            <value>1980</value>
          </bin>
          <bin default-name='false' value='&quot;Silent Era&quot;'>
            <value>1894</value>
            <value>1897</value>
            <value>1904</value>
            <value>1906</value>
            <value>1911</value>
            <value>1912</value>
            <value>1913</value>
            <value>1914</value>
            <value>1915</value>
            <value>1916</value>
            <value>1917</value>
            <value>1918</value>
            <value>1919</value>
            <value>1920</value>
          </bin>
          <bin default-name='false' value='&quot;Streaming Era&quot;'>
            <value>2001</value>
            <value>2002</value>
            <value>2003</value>
            <value>2004</value>
            <value>2005</value>
            <value>2006</value>
            <value>2007</value>
            <value>2008</value>
            <value>2009</value>
            <value>2010</value>
            <value>2011</value>
            <value>2012</value>
            <value>2013</value>
            <value>2014</value>
            <value>2015</value>
            <value>2016</value>
            <value>2017</value>
            <value>2018</value>
            <value>2019</value>
            <value>2020</value>
            <value>2021</value>
            <value>2022</value>
            <value>2023</value>
            <value>2024</value>
          </bin>
          <bin default-name='false' value='&quot;Transition to Sound&quot;'>
            <value>1921</value>
            <value>1922</value>
            <value>1923</value>
            <value>1924</value>
            <value>1925</value>
            <value>1926</value>
            <value>1927</value>
            <value>1928</value>
            <value>1929</value>
            <value>1930</value>
          </bin>
        </calculation>
      </column>
      <column caption='Gross US Canada' datatype='string' name='[GrossUSCanada]' role='dimension' type='nominal' />
      <column caption='Gross Worldwide' datatype='string' name='[GrossWorldwide]' role='dimension' type='nominal' />
      <column datatype='string' name='[Issue Label (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[issue_label]' new-bin='true'>
          <bin default-name='false' value='&quot;Social Issues&quot;'>
            <value>&quot;crime and corruption&quot;</value>
            <value>&quot;disability&quot;</value>
            <value>&quot;drugs and alcoholism&quot;</value>
            <value>&quot;environmental issues&quot;</value>
            <value>&quot;feminism&quot;</value>
            <value>&quot;health and disease&quot;</value>
            <value>&quot;immigration or refugee crisis&quot;</value>
            <value>&quot;lgbtq&quot;</value>
            <value>&quot;political issues&quot;</value>
            <value>&quot;racism or discrimination&quot;</value>
            <value>&quot;socioeconomic inequality&quot;</value>
            <value>&quot;war or revolution&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Issue Strength]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[issue_label]' new-bin='true'>
          <bin default-name='false' value='&quot;Normal Issues&quot;'>
            <value>&quot;crime and corruption&quot;</value>
            <value>&quot;drugs and alcoholism&quot;</value>
            <value>&quot;feminism&quot;</value>
            <value>&quot;health and disease&quot;</value>
            <value>&quot;racism or discrimination&quot;</value>
            <value>&quot;socioeconomic inequality&quot;</value>
            <value>&quot;war or revolution&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Others&quot;'>
            <value>&quot;others&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Weak Issues&quot;'>
            <value>&quot;disability&quot;</value>
            <value>&quot;environmental issues&quot;</value>
            <value>&quot;immigration or refugee crisis&quot;</value>
            <value>&quot;lgbtq&quot;</value>
            <value>&quot;political issues&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Release Year (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[releaseYear]' new-bin='true'>
          <bin default-name='false' value='&quot;1900s&quot;'>
            <value>1904</value>
            <value>1906</value>
            <value>1911</value>
            <value>1912</value>
            <value>1913</value>
            <value>1914</value>
            <value>1915</value>
            <value>1916</value>
            <value>1917</value>
            <value>1918</value>
            <value>1919</value>
            <value>1920</value>
            <value>1921</value>
            <value>1922</value>
            <value>1923</value>
            <value>1924</value>
          </bin>
          <bin default-name='false' value='&quot;1925s&quot;'>
            <value>1925</value>
            <value>1926</value>
            <value>1927</value>
            <value>1928</value>
            <value>1929</value>
            <value>1930</value>
            <value>1931</value>
            <value>1932</value>
            <value>1933</value>
            <value>1934</value>
            <value>1935</value>
            <value>1936</value>
            <value>1937</value>
            <value>1938</value>
            <value>1939</value>
            <value>1940</value>
            <value>1941</value>
            <value>1942</value>
            <value>1943</value>
            <value>1944</value>
            <value>1945</value>
            <value>1946</value>
            <value>1947</value>
            <value>1948</value>
            <value>1949</value>
          </bin>
          <bin default-name='false' value='&quot;1950s&quot;'>
            <value>1950</value>
            <value>1951</value>
            <value>1952</value>
            <value>1953</value>
            <value>1954</value>
            <value>1955</value>
            <value>1956</value>
            <value>1957</value>
            <value>1958</value>
            <value>1959</value>
            <value>1960</value>
            <value>1961</value>
            <value>1962</value>
            <value>1963</value>
            <value>1964</value>
            <value>1965</value>
            <value>1966</value>
            <value>1967</value>
            <value>1968</value>
            <value>1969</value>
            <value>1970</value>
            <value>1971</value>
            <value>1972</value>
            <value>1973</value>
            <value>1974</value>
          </bin>
          <bin default-name='false' value='&quot;1975s&quot;'>
            <value>1975</value>
            <value>1976</value>
            <value>1977</value>
            <value>1978</value>
            <value>1979</value>
            <value>1980</value>
            <value>1981</value>
            <value>1982</value>
            <value>1983</value>
            <value>1984</value>
            <value>1985</value>
            <value>1986</value>
            <value>1987</value>
            <value>1988</value>
            <value>1989</value>
            <value>1990</value>
            <value>1991</value>
            <value>1992</value>
            <value>1993</value>
            <value>1994</value>
            <value>1995</value>
            <value>1996</value>
            <value>1997</value>
            <value>1998</value>
            <value>1999</value>
          </bin>
          <bin default-name='false' value='&quot;2000s&quot;'>
            <value>2000</value>
            <value>2001</value>
            <value>2002</value>
            <value>2003</value>
            <value>2004</value>
            <value>2005</value>
            <value>2006</value>
            <value>2007</value>
            <value>2008</value>
            <value>2009</value>
            <value>2010</value>
            <value>2011</value>
            <value>2012</value>
            <value>2013</value>
            <value>2014</value>
            <value>2015</value>
            <value>2016</value>
            <value>2017</value>
            <value>2018</value>
            <value>2019</value>
            <value>2020</value>
            <value>2021</value>
            <value>2022</value>
            <value>2023</value>
          </bin>
          <bin default-name='false' value='&quot;excluded&quot;'>
            <value>1894</value>
            <value>1897</value>
            <value>2024</value>
          </bin>
        </calculation>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='intermediate_predicted_full_dataset.tsv' datatype='table' name='[__tableau_internal_object_id__].[intermediate_predicted_full_dataset.tsv_059D472842E5439DA1AC074B3B225626]' role='measure' type='quantitative' />
      <column caption='Address' datatype='string' name='[address]' role='dimension' type='nominal' />
      <column caption='Area' datatype='string' name='[area]' role='dimension' type='nominal' />
      <column datatype='string' name='[averageRating (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[averageRating]' new-bin='true'>
          <bin default-name='false' value='&quot;5 - 6&quot;'>
            <value>5.0999999999999996</value>
            <value>5.2000000000000002</value>
            <value>5.2999999999999998</value>
            <value>5.4000000000000004</value>
            <value>5.5</value>
            <value>5.5999999999999996</value>
            <value>5.7000000000000002</value>
            <value>5.7999999999999998</value>
            <value>5.9000000000000004</value>
            <value>6.0</value>
          </bin>
          <bin default-name='false' value='&quot;6 - 7&quot;'>
            <value>6.0999999999999996</value>
            <value>6.2000000000000002</value>
            <value>6.2999999999999998</value>
            <value>6.4000000000000004</value>
            <value>6.5</value>
            <value>6.5999999999999996</value>
            <value>6.7000000000000002</value>
            <value>6.7999999999999998</value>
            <value>6.9000000000000004</value>
            <value>7.0</value>
          </bin>
          <bin default-name='false' value='&quot;7 - 8&quot;'>
            <value>7.0999999999999996</value>
            <value>7.2000000000000002</value>
            <value>7.2999999999999998</value>
            <value>7.4000000000000004</value>
            <value>7.5</value>
            <value>7.5999999999999996</value>
            <value>7.7000000000000002</value>
            <value>7.7999999999999998</value>
            <value>7.9000000000000004</value>
            <value>8.0</value>
          </bin>
          <bin default-name='false' value='&quot;8 - 9&quot;'>
            <value>8.0999999999999996</value>
            <value>8.1999999999999993</value>
            <value>8.3000000000000007</value>
            <value>8.4000000000000004</value>
            <value>8.5</value>
            <value>8.5999999999999996</value>
            <value>8.6999999999999993</value>
            <value>8.8000000000000007</value>
            <value>8.9000000000000004</value>
            <value>9.0</value>
          </bin>
          <bin default-name='false' value='&quot;Above 9&quot;'>
            <value>9.0999999999999996</value>
            <value>9.1999999999999993</value>
            <value>9.3000000000000007</value>
            <value>9.4000000000000004</value>
            <value>9.5</value>
            <value>9.5999999999999996</value>
            <value>9.6999999999999993</value>
            <value>9.8000000000000007</value>
            <value>9.9000000000000004</value>
          </bin>
          <bin default-name='false' value='&quot;Under 5&quot;'>
            <value>1.0</value>
            <value>1.1000000000000001</value>
            <value>1.2</value>
            <value>1.3</value>
            <value>1.3999999999999999</value>
            <value>1.5</value>
            <value>1.6000000000000001</value>
            <value>1.7</value>
            <value>1.8</value>
            <value>1.8999999999999999</value>
            <value>2.0</value>
            <value>2.1000000000000001</value>
            <value>2.2000000000000002</value>
            <value>2.2999999999999998</value>
            <value>2.3999999999999999</value>
            <value>2.5</value>
            <value>2.6000000000000001</value>
            <value>2.7000000000000002</value>
            <value>2.7999999999999998</value>
            <value>2.8999999999999999</value>
            <value>3.0</value>
            <value>3.1000000000000001</value>
            <value>3.2000000000000002</value>
            <value>3.2999999999999998</value>
            <value>3.3999999999999999</value>
            <value>3.5</value>
            <value>3.6000000000000001</value>
            <value>3.7000000000000002</value>
            <value>3.7999999999999998</value>
            <value>3.8999999999999999</value>
            <value>4.0</value>
            <value>4.0999999999999996</value>
            <value>4.2000000000000002</value>
            <value>4.2999999999999998</value>
            <value>4.4000000000000004</value>
            <value>4.5</value>
            <value>4.5999999999999996</value>
            <value>4.7000000000000002</value>
            <value>4.7999999999999998</value>
            <value>4.9000000000000004</value>
            <value>5.0</value>
          </bin>
        </calculation>
      </column>
      <column datatype='real' name='[averageRating]' role='measure' type='quantitative' />
      <column caption='Budget' datatype='string' name='[budget]' role='dimension' type='nominal' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column datatype='string' name='[coo_continent]' role='dimension' type='nominal' />
      <column caption='Coo List' datatype='string' name='[coo_list]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;Czechoslovakia&quot;' value='&quot;Slovakia&quot;' />
          <semantic-value key='&quot;East Germany&quot;' value='&quot;Germany&quot;' />
          <semantic-value key='&quot;North Vietnam&quot;' value='&quot;Viet Nam&quot;' />
          <semantic-value key='&quot;Occupied Palestinian Territory&quot;' value='&quot;Palestinian Territories&quot;' />
          <semantic-value key='&quot;Serbia and Montenegro&quot;' value='&quot;Serbia&quot;' />
          <semantic-value key='&quot;Soviet Union&quot;' value='&quot;Russia&quot;' />
          <semantic-value key='&quot;The Democratic Republic of Congo&quot;' value='&quot;Democratic Republic of Congo&quot;' />
          <semantic-value key='&quot;West Germany&quot;' value='&quot;Germany&quot;' />
          <semantic-value key='&quot;Yugoslavia&quot;' value='&quot;Serbia&quot;' />
        </semantic-values>
      </column>
      <column caption='Country Origin Count' datatype='real' name='[countryOriginCount]' role='measure' type='quantitative' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;Democratic Federation of Northern Syria&quot;' value='&quot;Syria&quot;' />
          <semantic-value key='&quot;USSR&quot;' value='&quot;Russia&quot;' />
          <semantic-value key='&quot;Yugoslavia&quot;' value='&quot;Serbia&quot;' />
        </semantic-values>
      </column>
      <column caption='Decades' datatype='string' name='[decades]' role='dimension' type='nominal' />
      <column caption='End Year' datatype='string' name='[endYear]' role='dimension' type='nominal' />
      <column caption='Film Id' datatype='string' name='[film_id]' role='dimension' type='nominal' />
      <column caption='Genre List' datatype='string' name='[genre_list]' role='dimension' type='nominal' />
      <column caption='Is Adult' datatype='real' name='[isAdult]' role='measure' type='quantitative' />
      <column caption='Issue Label' datatype='string' name='[issue_label]' role='dimension' type='nominal' />
      <column caption='Language Count' datatype='real' name='[languageCount]' role='measure' type='quantitative' />
      <column caption='Languages' datatype='string' name='[languages]' role='dimension' type='nominal' />
      <column caption='Lattitude' datatype='string' name='[lattitude]' role='dimension' type='nominal' />
      <column caption='Locations' datatype='string' name='[locations]' role='dimension' type='nominal' />
      <column caption='Longitude' datatype='string' name='[longitude]' role='dimension' type='nominal' />
      <column caption='Official Sites Count' datatype='real' name='[officialSitesCount]' role='measure' type='quantitative' />
      <column caption='Official Sites' datatype='string' name='[officialSites]' role='dimension' type='nominal' />
      <column caption='Opening Weekend' datatype='string' name='[openingWeekend]' role='dimension' type='nominal' />
      <column caption='Original Title' datatype='string' name='[originalTitle]' role='dimension' type='nominal' />
      <column caption='Primary Title' datatype='string' name='[primaryTitle]' role='dimension' type='nominal' />
      <column caption='Production Companies' datatype='string' name='[productionCompanies]' role='dimension' type='nominal' />
      <column caption='Production Company Count' datatype='real' name='[productionCompanyCount]' role='measure' type='quantitative' />
      <column caption='Release Date' datatype='date' name='[releaseDate]' role='dimension' type='ordinal' />
      <column caption='Release Location' datatype='string' name='[releaseLocation]' role='dimension' type='nominal' />
      <column caption='Release Year' datatype='integer' name='[releaseYear]' role='dimension' type='quantitative' />
      <column caption='Runtime Minutes' datatype='integer' name='[runtimeMinutes]' role='measure' type='quantitative' />
      <column caption='Scene' datatype='string' name='[scene]' role='dimension' type='nominal' />
      <column caption='Start Year' datatype='integer' name='[startYear]' role='dimension' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Title Type' datatype='string' name='[titleType]' role='dimension' type='nominal' />
      <column caption='Weekend Earning' datatype='string' name='[weekendEarning]' role='dimension' type='nominal' />
      <column-instance column='[Calculation_1734448864551047170]' derivation='None' name='[none:Calculation_1734448864551047170:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[coo_continent]' derivation='None' name='[none:coo_continent:nk]' pivot='key' type='nominal' />
      <column-instance column='[coo_list]' derivation='None' name='[none:coo_list:nk]' pivot='key' type='nominal' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <column-instance column='[genre_list]' derivation='None' name='[none:genre_list:nk]' pivot='key' type='nominal' />
      <column-instance column='[issue_label]' derivation='None' name='[none:issue_label:nk]' pivot='key' type='nominal' />
      <column-instance column='[releaseYear]' derivation='None' name='[none:releaseYear:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_1693916478540742656]' derivation='User' name='[usr:Calculation_1693916478540742656:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1734448864551047170]' derivation='User' name='[usr:Calculation_1734448864551047170:nk]' pivot='key' type='nominal' />
      <group caption='Action (Coo List)' hidden='true' name='[Action (Coo List)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[coo_list]' />
        </groupfilter>
      </group>
      <group caption='Action (Country)' hidden='true' name='[Action (Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[country]' />
        </groupfilter>
      </group>
      <group caption='Action (Issue Label,Release Year)' hidden='true' name='[Action (Issue Label,Release Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[issue_label]' />
          <groupfilter function='level-members' level='[none:releaseYear:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (coo_continent,Film Era,Issue Label,Issue Strength)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:coo_continent:nk]' />
          <groupfilter function='level-members' level='[Film Era]' />
          <groupfilter function='level-members' level='[none:issue_label:nk]' />
          <groupfilter function='level-members' level='[Issue Strength]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='country, state'>
          <field>[country]</field>
          <field>[state]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:coo_list:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;None&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;The Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Burma&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Vietnam&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Serbia and Montenegro&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Soviet Union&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Occupied Palestinian Territory&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Côte d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Czechoslovakia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Federal Republic of Yugoslavia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Netherlands Antilles&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Yugoslavia&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1734448864551047170:nk]' palette='red_gold_10_0' type='palette'>
            <map to='#b71d3e'>
              <bucket>&quot;log (0-0.80)&quot;</bucket>
            </map>
            <map to='#b71d3e'>
              <bucket>&quot;log (0-0.88)&quot;</bucket>
            </map>
            <map to='#b71d3e'>
              <bucket>&quot;log (0-1)&quot;</bucket>
            </map>
            <map to='#d64c45'>
              <bucket>&quot;log (0.80-1.60)&quot;</bucket>
            </map>
            <map to='#d64c45'>
              <bucket>&quot;log (0.88-1.76)&quot;</bucket>
            </map>
            <map to='#e66549'>
              <bucket>&quot;log (1-2)&quot;</bucket>
            </map>
            <map to='#ee734a'>
              <bucket>&quot;log (1.60-2.40)&quot;</bucket>
            </map>
            <map to='#ee734a'>
              <bucket>&quot;log (1.76-2.64)&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;log (&gt;3)&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;log (&gt;3.20)&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;log (&gt;3.52)&quot;</bucket>
            </map>
            <map to='#fa9d4f'>
              <bucket>&quot;log (2-3)&quot;</bucket>
            </map>
            <map to='#fa9d4f'>
              <bucket>&quot;log (2.40-3.20)&quot;</bucket>
            </map>
            <map to='#fa9d4f'>
              <bucket>&quot;log (2.64-3.52)&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Democratic Federation of Northern Syria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Yugoslavia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;São Tomé and Príncipe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Atlantic Ocean&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antarctica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Arctic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vatican City&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Côte d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;USSR&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;None&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Palestinian Territories&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Country (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;First Group&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Other Contributors&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;None&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ThirdGroup&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Second Group&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:genre_list:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Drama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Action&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Romance&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Biography&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Talk-Show&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Game-Show&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Family&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Comedy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thriller&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;News&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Adult&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sci-Fi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Musical&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Crime&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;War&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;History&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Horror&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mystery&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Reality-TV&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fantasy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Documentary&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Western&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Adventure&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Short&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Music&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Film-Noir&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Animation&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sport&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Coo List (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Group 1&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Other Countries&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;None&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Group 3&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Group 2&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:coo_continent:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;None&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Antarctica&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Issue Strength]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Normal Issues&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Others&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Weak Issues&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Issue Label (group)]' palette='red_gold_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;others&quot;</bucket>
            </map>
            <map to='#ee734a'>
              <bucket>&quot;Social Issues&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:issue_label:nk]' palette='tableau20_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;others&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;crime and corruption&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;feminism&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;war or revolution&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;political issues&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;health and disease&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;disability&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;immigration or refugee crisis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;racism or discrimination&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;lgbtq&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;drugs and alcoholism&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;socioeconomic inequality&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;environmental issues&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_1693916478540742656:nk]' palette='red_gold_10_0' type='palette'>
            <map to='#b71d3e'>
              <bucket>&quot;Film Count: &gt; 1500&quot;</bucket>
            </map>
            <map to='#de5747'>
              <bucket>&quot;Film Count: 1000 - 1500&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;Film Count: &lt; 500&quot;</bucket>
            </map>
            <map to='#fa8f4d'>
              <bucket>&quot;Film Count: 500 - 1000&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_1734448864551047170:nk]' palette='red_gold_10_0' type='palette'>
            <map to='#b71d3e'>
              <bucket>&quot;film count &gt; 5000&quot;</bucket>
            </map>
            <map to='#b71d3e'>
              <bucket>&quot;film count: 55-435&quot;</bucket>
            </map>
            <map to='#b71d3e'>
              <bucket>&quot;log (&gt; 3.52 &gt; 5000)&quot;</bucket>
            </map>
            <map to='#b71d3e'>
              <bucket>&quot;log (&gt;3.20)&quot;</bucket>
            </map>
            <map to='#b71d3e'>
              <bucket>&quot;log (&gt;3.52)&quot;</bucket>
            </map>
            <map to='#b71d3e'>
              <bucket>&quot;log(1.76-2.64)(55-435)&quot;</bucket>
            </map>
            <map to='#b71d3e'>
              <bucket>&quot;log(&gt; 3.52 &gt; 5000)&quot;</bucket>
            </map>
            <map to='#d54a45'>
              <bucket>&quot;log (2.40-3.20)&quot;</bucket>
            </map>
            <map to='#d54a45'>
              <bucket>&quot;log (2.64-3.52)&quot;</bucket>
            </map>
            <map to='#d64c45'>
              <bucket>&quot;film count: 435 - 5000&quot;</bucket>
            </map>
            <map to='#ee734a'>
              <bucket>&quot;film count: 8-55&quot;</bucket>
            </map>
            <map to='#ee734a'>
              <bucket>&quot;log (1.60-2.40)&quot;</bucket>
            </map>
            <map to='#ee734a'>
              <bucket>&quot;log (1.76-2.64)&quot;</bucket>
            </map>
            <map to='#ee734a'>
              <bucket>&quot;log (2.64-3.52)(435 - 5000)&quot;</bucket>
            </map>
            <map to='#ee734a'>
              <bucket>&quot;log(1.76-2.64)(50-435)&quot;</bucket>
            </map>
            <map to='#ee734a'>
              <bucket>&quot;log(2.64-3.52)(435 - 5000)&quot;</bucket>
            </map>
            <map to='#f0774a'>
              <bucket>&quot;film count: 55 - 435&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;film count &lt; 8&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;log (0-0.80)&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;log (0-0.88)&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;log(0-0.88)&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;log(0.88-1.76)&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;log(1.76-2.64)&quot;</bucket>
            </map>
            <map to='#f9a750'>
              <bucket>&quot;film count: 8 - 55&quot;</bucket>
            </map>
            <map to='#faa04f'>
              <bucket>&quot;log (0.80-1.60)&quot;</bucket>
            </map>
            <map to='#faa04f'>
              <bucket>&quot;log (0.88-1.76)&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='film_id' />
        <field-sort-custom-order field='issue_label' />
        <field-sort-custom-order field='openingWeekend' />
        <field-sort-custom-order field='weekendEarning' />
        <field-sort-custom-order field='budget' />
        <field-sort-custom-order field='GrossUSCanada' />
        <field-sort-custom-order field='GrossWorldwide' />
        <field-sort-custom-order field='officialSitesCount' />
        <field-sort-custom-order field='officialSites' />
        <field-sort-custom-order field='productionCompanyCount' />
        <field-sort-custom-order field='productionCompanies' />
        <field-sort-custom-order field='languageCount' />
        <field-sort-custom-order field='languages' />
        <field-sort-custom-order field='releaseDate' />
        <field-sort-custom-order field='releaseLocation' />
        <field-sort-custom-order field='countryOriginCount' />
        <field-sort-custom-order field='titleType' />
        <field-sort-custom-order field='primaryTitle' />
        <field-sort-custom-order field='originalTitle' />
        <field-sort-custom-order field='isAdult' />
        <field-sort-custom-order field='startYear' />
        <field-sort-custom-order field='endYear' />
        <field-sort-custom-order field='runtimeMinutes' />
        <field-sort-custom-order field='releaseYear' />
        <field-sort-custom-order field='decades' />
        <field-sort-custom-order field='locations' />
        <field-sort-custom-order field='scene' />
        <field-sort-custom-order field='address' />
        <field-sort-custom-order field='area' />
        <field-sort-custom-order field='state' />
        <field-sort-custom-order field='country' />
        <field-sort-custom-order field='lattitude' />
        <field-sort-custom-order field='longitude' />
        <field-sort-custom-order field='continent' />
        <field-sort-custom-order field='genre_list' />
        <field-sort-custom-order field='coo_list' />
        <field-sort-custom-order field='Calculation_538743166167384090' />
        <field-sort-custom-order field='Calculation_538743166158741528' />
        <field-sort-custom-order field='Calculation_1734448864393080833' />
        <field-sort-custom-order field='Calculation_1734448864551047170' />
        <field-sort-custom-order field='Issue Label (group)' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field='Country (group)' />
        <field-sort-custom-order field='Coo List (group)' />
        <field-sort-custom-order field='Release Year (group)' />
        <field-sort-custom-order field='Calculation_538743166061293577' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top Country' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='1'>
          <calculation class='tableau' formula='1' />
          <range granularity='1' max='3' min='1' />
        </column>
        <column caption='Top Social Issue' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='1.0'>
          <calculation class='tableau' formula='1.0' />
          <range granularity='1.0' max='3.0' min='1.0' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='intermediate_predicted_full_dataset.tsv' id='intermediate_predicted_full_dataset.tsv_059D472842E5439DA1AC074B3B225626'>
            <properties context=''>
              <relation connection='textscan.0lscb2b0j6aaal18id91m0ip5jbw' name='intermediate_predicted_full_dataset.tsv' table='[intermediate_predicted_full_dataset#tsv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_GB' separator='&#9;'>
                  <column datatype='string' name='film_id' ordinal='0' />
                  <column datatype='string' name='issue_label' ordinal='1' />
                  <column datatype='string' name='openingWeekend' ordinal='2' />
                  <column datatype='string' name='weekendEarning' ordinal='3' />
                  <column datatype='string' name='budget' ordinal='4' />
                  <column datatype='string' name='GrossUSCanada' ordinal='5' />
                  <column datatype='string' name='GrossWorldwide' ordinal='6' />
                  <column datatype='real' name='officialSitesCount' ordinal='7' />
                  <column datatype='string' name='officialSites' ordinal='8' />
                  <column datatype='real' name='productionCompanyCount' ordinal='9' />
                  <column datatype='string' name='productionCompanies' ordinal='10' />
                  <column datatype='real' name='languageCount' ordinal='11' />
                  <column datatype='string' name='languages' ordinal='12' />
                  <column datatype='date' name='releaseDate' ordinal='13' />
                  <column datatype='string' name='releaseLocation' ordinal='14' />
                  <column datatype='real' name='countryOriginCount' ordinal='15' />
                  <column datatype='string' name='titleType' ordinal='16' />
                  <column datatype='string' name='primaryTitle' ordinal='17' />
                  <column datatype='string' name='originalTitle' ordinal='18' />
                  <column datatype='real' name='isAdult' ordinal='19' />
                  <column datatype='integer' name='startYear' ordinal='20' />
                  <column datatype='string' name='endYear' ordinal='21' />
                  <column datatype='integer' name='runtimeMinutes' ordinal='22' />
                  <column datatype='integer' name='releaseYear' ordinal='23' />
                  <column datatype='string' name='decades' ordinal='24' />
                  <column datatype='string' name='locations' ordinal='25' />
                  <column datatype='string' name='scene' ordinal='26' />
                  <column datatype='string' name='address' ordinal='27' />
                  <column datatype='string' name='area' ordinal='28' />
                  <column datatype='string' name='state' ordinal='29' />
                  <column datatype='string' name='country' ordinal='30' />
                  <column datatype='string' name='lattitude' ordinal='31' />
                  <column datatype='string' name='longitude' ordinal='32' />
                  <column datatype='string' name='continent' ordinal='33' />
                  <column datatype='string' name='genre_list' ordinal='34' />
                  <column datatype='string' name='coo_list' ordinal='35' />
                  <column datatype='real' name='budget_est' ordinal='36' />
                  <column datatype='string' name='budget_label' ordinal='37' />
                  <column datatype='real' name='averageRating' ordinal='38' />
                  <column datatype='integer' name='numVotes' ordinal='39' />
                  <column datatype='string' name='coo_continent' ordinal='40' />
                  <column datatype='string' name='film_era' ordinal='41' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='original_predicted_full_dataset' inline='true' name='federated.0oel5xy0rl5ava16ygp4l0oetslf' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='original_predicted_full_dataset' name='textscan.1dwvtae0s1hvcn10zww6918hx9ws'>
            <connection class='textscan' directory='H:/Mdx_uni_stuff/4090_Project/Code&amp;Data/DataFiles' filename='original_predicted_full_dataset.tsv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1dwvtae0s1hvcn10zww6918hx9ws' name='original_predicted_full_dataset.tsv' table='[original_predicted_full_dataset#tsv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator='&#9;'>
            <column datatype='string' name='film_id' ordinal='0' />
            <column datatype='string' name='issue_label' ordinal='1' />
            <column datatype='string' name='openingWeekend' ordinal='2' />
            <column datatype='integer' name='weekendEarning' ordinal='3' />
            <column datatype='string' name='budget' ordinal='4' />
            <column datatype='integer' name='GrossUSCanada' ordinal='5' />
            <column datatype='integer' name='GrossWorldwide' ordinal='6' />
            <column datatype='integer' name='officialSitesCount' ordinal='7' />
            <column datatype='string' name='officialSites' ordinal='8' />
            <column datatype='integer' name='productionCompanyCount' ordinal='9' />
            <column datatype='string' name='productionCompanies' ordinal='10' />
            <column datatype='integer' name='languageCount' ordinal='11' />
            <column datatype='string' name='languages' ordinal='12' />
            <column datatype='date' name='releaseDate' ordinal='13' />
            <column datatype='string' name='releaseLocation' ordinal='14' />
            <column datatype='integer' name='countryOriginCount' ordinal='15' />
            <column datatype='string' name='titleType' ordinal='16' />
            <column datatype='string' name='primaryTitle' ordinal='17' />
            <column datatype='string' name='originalTitle' ordinal='18' />
            <column datatype='integer' name='isAdult' ordinal='19' />
            <column datatype='integer' name='startYear' ordinal='20' />
            <column datatype='string' name='endYear' ordinal='21' />
            <column datatype='integer' name='runtimeMinutes' ordinal='22' />
            <column datatype='integer' name='releaseYear' ordinal='23' />
            <column datatype='string' name='decades' ordinal='24' />
            <column datatype='string' name='locations' ordinal='25' />
            <column datatype='string' name='scene' ordinal='26' />
            <column datatype='string' name='address' ordinal='27' />
            <column datatype='string' name='area' ordinal='28' />
            <column datatype='string' name='state' ordinal='29' />
            <column datatype='string' name='country' ordinal='30' />
            <column datatype='string' name='lattitude' ordinal='31' />
            <column datatype='string' name='longitude' ordinal='32' />
            <column datatype='string' name='continent' ordinal='33' />
            <column datatype='string' name='genre_list' ordinal='34' />
            <column datatype='string' name='coo_list' ordinal='35' />
            <column datatype='integer' name='budget_est' ordinal='36' />
            <column datatype='string' name='budget_label' ordinal='37' />
            <column datatype='real' name='averageRating' ordinal='38' />
            <column datatype='integer' name='numVotes' ordinal='39' />
            <column datatype='string' name='coo_continent' ordinal='40' />
            <column datatype='string' name='film_era' ordinal='41' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1dwvtae0s1hvcn10zww6918hx9ws' name='original_predicted_full_dataset.tsv' table='[original_predicted_full_dataset#tsv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator='&#9;'>
            <column datatype='string' name='film_id' ordinal='0' />
            <column datatype='string' name='issue_label' ordinal='1' />
            <column datatype='string' name='openingWeekend' ordinal='2' />
            <column datatype='integer' name='weekendEarning' ordinal='3' />
            <column datatype='string' name='budget' ordinal='4' />
            <column datatype='integer' name='GrossUSCanada' ordinal='5' />
            <column datatype='integer' name='GrossWorldwide' ordinal='6' />
            <column datatype='integer' name='officialSitesCount' ordinal='7' />
            <column datatype='string' name='officialSites' ordinal='8' />
            <column datatype='integer' name='productionCompanyCount' ordinal='9' />
            <column datatype='string' name='productionCompanies' ordinal='10' />
            <column datatype='integer' name='languageCount' ordinal='11' />
            <column datatype='string' name='languages' ordinal='12' />
            <column datatype='date' name='releaseDate' ordinal='13' />
            <column datatype='string' name='releaseLocation' ordinal='14' />
            <column datatype='integer' name='countryOriginCount' ordinal='15' />
            <column datatype='string' name='titleType' ordinal='16' />
            <column datatype='string' name='primaryTitle' ordinal='17' />
            <column datatype='string' name='originalTitle' ordinal='18' />
            <column datatype='integer' name='isAdult' ordinal='19' />
            <column datatype='integer' name='startYear' ordinal='20' />
            <column datatype='string' name='endYear' ordinal='21' />
            <column datatype='integer' name='runtimeMinutes' ordinal='22' />
            <column datatype='integer' name='releaseYear' ordinal='23' />
            <column datatype='string' name='decades' ordinal='24' />
            <column datatype='string' name='locations' ordinal='25' />
            <column datatype='string' name='scene' ordinal='26' />
            <column datatype='string' name='address' ordinal='27' />
            <column datatype='string' name='area' ordinal='28' />
            <column datatype='string' name='state' ordinal='29' />
            <column datatype='string' name='country' ordinal='30' />
            <column datatype='string' name='lattitude' ordinal='31' />
            <column datatype='string' name='longitude' ordinal='32' />
            <column datatype='string' name='continent' ordinal='33' />
            <column datatype='string' name='genre_list' ordinal='34' />
            <column datatype='string' name='coo_list' ordinal='35' />
            <column datatype='integer' name='budget_est' ordinal='36' />
            <column datatype='string' name='budget_label' ordinal='37' />
            <column datatype='real' name='averageRating' ordinal='38' />
            <column datatype='integer' name='numVotes' ordinal='39' />
            <column datatype='string' name='coo_continent' ordinal='40' />
            <column datatype='string' name='film_era' ordinal='41' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[original_predicted_full_dataset.tsv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;£&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;\\t&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>film_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[film_id]</local-name>
            <parent-name>[original_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>film_id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[original_predicted_full_dataset.tsv_3E3CB084F7F141CD9B577BC6321A4A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>issue_label</remote-name>
            <remote-type>129</remote-type>
            <local-name>[issue_label]</local-name>
            <parent-name>[original_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>issue_label</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[original_predicted_full_dataset.tsv_3E3CB084F7F141CD9B577BC6321A4A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>openingWeekend</remote-name>
            <remote-type>129</remote-type>
            <local-name>[openingWeekend]</local-name>
            <parent-name>[original_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>openingWeekend</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[original_predicted_full_dataset.tsv_3E3CB084F7F141CD9B577BC6321A4A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekendEarning</remote-name>
            <remote-type>20</remote-type>
            <local-name>[weekendEarning]</local-name>
            <parent-name>[original_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>weekendEarning</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[original_predicted_full_dataset.tsv_3E3CB084F7F141CD9B577BC6321A4A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>budget</remote-name>
            <remote-type>129</remote-type>
            <local-name>[budget]</local-name>
            <parent-name>[original_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>budget</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[original_predicted_full_dataset.tsv_3E3CB084F7F141CD9B577BC6321A4A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GrossUSCanada</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GrossUSCanada]</local-name>
            <parent-name>[original_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>GrossUSCanada</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[original_predicted_full_dataset.tsv_3E3CB084F7F141CD9B577BC6321A4A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GrossWorldwide</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GrossWorldwide]</local-name>
            <parent-name>[original_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>GrossWorldwide</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[original_predicted_full_dataset.tsv_3E3CB084F7F141CD9B577BC6321A4A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>officialSitesCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[officialSitesCount]</local-name>
            <parent-name>[original_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>officialSitesCount</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[original_predicted_full_dataset.tsv_3E3CB084F7F141CD9B577BC6321A4A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>officialSites</remote-name>
            <remote-type>129</remote-type>
            <local-name>[officialSites]</local-name>
            <parent-name>[original_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>officialSites</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[original_predicted_full_dataset.tsv_3E3CB084F7F141CD9B577BC6321A4A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>productionCompanyCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[productionCompanyCount]</local-name>
            <parent-name>[original_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>productionCompanyCount</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[original_predicted_full_dataset.tsv_3E3CB084F7F141CD9B577BC6321A4A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>productionCompanies</remote-name>
            <remote-type>129</remote-type>
            <local-name>[productionCompanies]</local-name>
            <parent-name>[original_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>productionCompanies</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[original_predicted_full_dataset.tsv_3E3CB084F7F141CD9B577BC6321A4A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>languageCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[languageCount]</local-name>
            <parent-name>[original_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>languageCount</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[original_predicted_full_dataset.tsv_3E3CB084F7F141CD9B577BC6321A4A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>languages</remote-name>
            <remote-type>129</remote-type>
            <local-name>[languages]</local-name>
            <parent-name>[original_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>languages</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[original_predicted_full_dataset.tsv_3E3CB084F7F141CD9B577BC6321A4A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>releaseDate</remote-name>
            <remote-type>133</remote-type>
            <local-name>[releaseDate]</local-name>
            <parent-name>[original_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>releaseDate</remote-alias>
            <ordinal>13</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[original_predicted_full_dataset.tsv_3E3CB084F7F141CD9B577BC6321A4A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>releaseLocation</remote-name>
            <remote-type>129</remote-type>
            <local-name>[releaseLocation]</local-name>
            <parent-name>[original_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>releaseLocation</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[original_predicted_full_dataset.tsv_3E3CB084F7F141CD9B577BC6321A4A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>countryOriginCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[countryOriginCount]</local-name>
            <parent-name>[original_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>countryOriginCount</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[original_predicted_full_dataset.tsv_3E3CB084F7F141CD9B577BC6321A4A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>titleType</remote-name>
            <remote-type>129</remote-type>
            <local-name>[titleType]</local-name>
            <parent-name>[original_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>titleType</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[original_predicted_full_dataset.tsv_3E3CB084F7F141CD9B577BC6321A4A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>primaryTitle</remote-name>
            <remote-type>129</remote-type>
            <local-name>[primaryTitle]</local-name>
            <parent-name>[original_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>primaryTitle</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[original_predicted_full_dataset.tsv_3E3CB084F7F141CD9B577BC6321A4A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>originalTitle</remote-name>
            <remote-type>129</remote-type>
            <local-name>[originalTitle]</local-name>
            <parent-name>[original_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>originalTitle</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[original_predicted_full_dataset.tsv_3E3CB084F7F141CD9B577BC6321A4A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>isAdult</remote-name>
            <remote-type>20</remote-type>
            <local-name>[isAdult]</local-name>
            <parent-name>[original_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>isAdult</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[original_predicted_full_dataset.tsv_3E3CB084F7F141CD9B577BC6321A4A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>startYear</remote-name>
            <remote-type>20</remote-type>
            <local-name>[startYear]</local-name>
            <parent-name>[original_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>startYear</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[original_predicted_full_dataset.tsv_3E3CB084F7F141CD9B577BC6321A4A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>endYear</remote-name>
            <remote-type>129</remote-type>
            <local-name>[endYear]</local-name>
            <parent-name>[original_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>endYear</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[original_predicted_full_dataset.tsv_3E3CB084F7F141CD9B577BC6321A4A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>runtimeMinutes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[runtimeMinutes]</local-name>
            <parent-name>[original_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>runtimeMinutes</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[original_predicted_full_dataset.tsv_3E3CB084F7F141CD9B577BC6321A4A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>releaseYear</remote-name>
            <remote-type>20</remote-type>
            <local-name>[releaseYear]</local-name>
            <parent-name>[original_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>releaseYear</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[original_predicted_full_dataset.tsv_3E3CB084F7F141CD9B577BC6321A4A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>decades</remote-name>
            <remote-type>129</remote-type>
            <local-name>[decades]</local-name>
            <parent-name>[original_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>decades</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[original_predicted_full_dataset.tsv_3E3CB084F7F141CD9B577BC6321A4A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>locations</remote-name>
            <remote-type>129</remote-type>
            <local-name>[locations]</local-name>
            <parent-name>[original_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>locations</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[original_predicted_full_dataset.tsv_3E3CB084F7F141CD9B577BC6321A4A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>scene</remote-name>
            <remote-type>129</remote-type>
            <local-name>[scene]</local-name>
            <parent-name>[original_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>scene</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[original_predicted_full_dataset.tsv_3E3CB084F7F141CD9B577BC6321A4A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>address</remote-name>
            <remote-type>129</remote-type>
            <local-name>[address]</local-name>
            <parent-name>[original_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>address</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[original_predicted_full_dataset.tsv_3E3CB084F7F141CD9B577BC6321A4A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>area</remote-name>
            <remote-type>129</remote-type>
            <local-name>[area]</local-name>
            <parent-name>[original_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>area</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[original_predicted_full_dataset.tsv_3E3CB084F7F141CD9B577BC6321A4A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[original_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[original_predicted_full_dataset.tsv_3E3CB084F7F141CD9B577BC6321A4A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[original_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[original_predicted_full_dataset.tsv_3E3CB084F7F141CD9B577BC6321A4A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lattitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[lattitude]</local-name>
            <parent-name>[original_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>lattitude</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[original_predicted_full_dataset.tsv_3E3CB084F7F141CD9B577BC6321A4A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[original_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[original_predicted_full_dataset.tsv_3E3CB084F7F141CD9B577BC6321A4A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[original_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[original_predicted_full_dataset.tsv_3E3CB084F7F141CD9B577BC6321A4A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>genre_list</remote-name>
            <remote-type>129</remote-type>
            <local-name>[genre_list]</local-name>
            <parent-name>[original_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>genre_list</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[original_predicted_full_dataset.tsv_3E3CB084F7F141CD9B577BC6321A4A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coo_list</remote-name>
            <remote-type>129</remote-type>
            <local-name>[coo_list]</local-name>
            <parent-name>[original_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>coo_list</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[original_predicted_full_dataset.tsv_3E3CB084F7F141CD9B577BC6321A4A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>budget_est</remote-name>
            <remote-type>20</remote-type>
            <local-name>[budget_est]</local-name>
            <parent-name>[original_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>budget_est</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[original_predicted_full_dataset.tsv_3E3CB084F7F141CD9B577BC6321A4A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>budget_label</remote-name>
            <remote-type>129</remote-type>
            <local-name>[budget_label]</local-name>
            <parent-name>[original_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>budget_label</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[original_predicted_full_dataset.tsv_3E3CB084F7F141CD9B577BC6321A4A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>averageRating</remote-name>
            <remote-type>5</remote-type>
            <local-name>[averageRating]</local-name>
            <parent-name>[original_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>averageRating</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[original_predicted_full_dataset.tsv_3E3CB084F7F141CD9B577BC6321A4A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>numVotes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[numVotes]</local-name>
            <parent-name>[original_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>numVotes</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[original_predicted_full_dataset.tsv_3E3CB084F7F141CD9B577BC6321A4A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coo_continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[coo_continent]</local-name>
            <parent-name>[original_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>coo_continent</remote-alias>
            <ordinal>40</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[original_predicted_full_dataset.tsv_3E3CB084F7F141CD9B577BC6321A4A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>film_era</remote-name>
            <remote-type>129</remote-type>
            <local-name>[film_era]</local-name>
            <parent-name>[original_predicted_full_dataset.tsv]</parent-name>
            <remote-alias>film_era</remote-alias>
            <ordinal>41</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[original_predicted_full_dataset.tsv_3E3CB084F7F141CD9B577BC6321A4A5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Gross US Canada' datatype='integer' name='[GrossUSCanada]' role='measure' type='quantitative' />
      <column caption='Gross Worldwide' datatype='integer' name='[GrossWorldwide]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='original_predicted_full_dataset.tsv' datatype='table' name='[__tableau_internal_object_id__].[original_predicted_full_dataset.tsv_3E3CB084F7F141CD9B577BC6321A4A5F]' role='measure' type='quantitative' />
      <column caption='Address' datatype='string' name='[address]' role='dimension' type='nominal' />
      <column caption='Area' datatype='string' name='[area]' role='dimension' type='nominal' />
      <column caption='Average Rating' datatype='real' name='[averageRating]' role='measure' type='quantitative' />
      <column caption='Budget' datatype='string' name='[budget]' role='dimension' type='nominal' />
      <column caption='Budget Est' datatype='integer' name='[budget_est]' role='measure' type='quantitative' />
      <column caption='Budget Label' datatype='string' name='[budget_label]' role='dimension' type='nominal' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='Coo Continent' datatype='string' name='[coo_continent]' role='dimension' type='nominal' />
      <column caption='Coo List' datatype='string' name='[coo_list]' role='dimension' type='nominal' />
      <column caption='Country Origin Count' datatype='integer' name='[countryOriginCount]' role='measure' type='quantitative' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Decades' datatype='string' name='[decades]' role='dimension' type='nominal' />
      <column caption='End Year' datatype='string' name='[endYear]' role='dimension' type='nominal' />
      <column caption='Film Era' datatype='string' name='[film_era]' role='dimension' type='nominal' />
      <column caption='Film Id' datatype='string' name='[film_id]' role='dimension' type='nominal' />
      <column caption='Genre List' datatype='string' name='[genre_list]' role='dimension' type='nominal' />
      <column caption='Is Adult' datatype='integer' name='[isAdult]' role='measure' type='quantitative' />
      <column caption='Issue Label' datatype='string' name='[issue_label]' role='dimension' type='nominal' />
      <column caption='Language Count' datatype='integer' name='[languageCount]' role='measure' type='quantitative' />
      <column caption='Languages' datatype='string' name='[languages]' role='dimension' type='nominal' />
      <column caption='Lattitude' datatype='string' name='[lattitude]' role='dimension' type='nominal' />
      <column caption='Locations' datatype='string' name='[locations]' role='dimension' type='nominal' />
      <column caption='Longitude' datatype='string' name='[longitude]' role='dimension' type='nominal' />
      <column caption='Num Votes' datatype='integer' name='[numVotes]' role='measure' type='quantitative' />
      <column caption='Official Sites Count' datatype='integer' name='[officialSitesCount]' role='measure' type='quantitative' />
      <column caption='Official Sites' datatype='string' name='[officialSites]' role='dimension' type='nominal' />
      <column caption='Opening Weekend' datatype='string' name='[openingWeekend]' role='dimension' type='nominal' />
      <column caption='Original Title' datatype='string' name='[originalTitle]' role='dimension' type='nominal' />
      <column caption='Primary Title' datatype='string' name='[primaryTitle]' role='dimension' type='nominal' />
      <column caption='Production Companies' datatype='string' name='[productionCompanies]' role='dimension' type='nominal' />
      <column caption='Production Company Count' datatype='integer' name='[productionCompanyCount]' role='measure' type='quantitative' />
      <column caption='Release Date' datatype='date' name='[releaseDate]' role='dimension' type='ordinal' />
      <column caption='Release Location' datatype='string' name='[releaseLocation]' role='dimension' type='nominal' />
      <column caption='Release Year' datatype='integer' name='[releaseYear]' role='dimension' type='quantitative' />
      <column caption='Runtime Minutes' datatype='integer' name='[runtimeMinutes]' role='measure' type='quantitative' />
      <column caption='Scene' datatype='string' name='[scene]' role='dimension' type='nominal' />
      <column caption='Start Year' datatype='integer' name='[startYear]' role='dimension' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Title Type' datatype='string' name='[titleType]' role='dimension' type='nominal' />
      <column caption='Weekend Earning' datatype='integer' name='[weekendEarning]' role='measure' type='quantitative' />
      <drill-paths>
        <drill-path name='country, state'>
          <field>[country]</field>
          <field>[state]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='original_predicted_full_dataset.tsv' id='original_predicted_full_dataset.tsv_3E3CB084F7F141CD9B577BC6321A4A5F'>
            <properties context=''>
              <relation connection='textscan.1dwvtae0s1hvcn10zww6918hx9ws' name='original_predicted_full_dataset.tsv' table='[original_predicted_full_dataset#tsv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_GB' separator='&#9;'>
                  <column datatype='string' name='film_id' ordinal='0' />
                  <column datatype='string' name='issue_label' ordinal='1' />
                  <column datatype='string' name='openingWeekend' ordinal='2' />
                  <column datatype='integer' name='weekendEarning' ordinal='3' />
                  <column datatype='string' name='budget' ordinal='4' />
                  <column datatype='integer' name='GrossUSCanada' ordinal='5' />
                  <column datatype='integer' name='GrossWorldwide' ordinal='6' />
                  <column datatype='integer' name='officialSitesCount' ordinal='7' />
                  <column datatype='string' name='officialSites' ordinal='8' />
                  <column datatype='integer' name='productionCompanyCount' ordinal='9' />
                  <column datatype='string' name='productionCompanies' ordinal='10' />
                  <column datatype='integer' name='languageCount' ordinal='11' />
                  <column datatype='string' name='languages' ordinal='12' />
                  <column datatype='date' name='releaseDate' ordinal='13' />
                  <column datatype='string' name='releaseLocation' ordinal='14' />
                  <column datatype='integer' name='countryOriginCount' ordinal='15' />
                  <column datatype='string' name='titleType' ordinal='16' />
                  <column datatype='string' name='primaryTitle' ordinal='17' />
                  <column datatype='string' name='originalTitle' ordinal='18' />
                  <column datatype='integer' name='isAdult' ordinal='19' />
                  <column datatype='integer' name='startYear' ordinal='20' />
                  <column datatype='string' name='endYear' ordinal='21' />
                  <column datatype='integer' name='runtimeMinutes' ordinal='22' />
                  <column datatype='integer' name='releaseYear' ordinal='23' />
                  <column datatype='string' name='decades' ordinal='24' />
                  <column datatype='string' name='locations' ordinal='25' />
                  <column datatype='string' name='scene' ordinal='26' />
                  <column datatype='string' name='address' ordinal='27' />
                  <column datatype='string' name='area' ordinal='28' />
                  <column datatype='string' name='state' ordinal='29' />
                  <column datatype='string' name='country' ordinal='30' />
                  <column datatype='string' name='lattitude' ordinal='31' />
                  <column datatype='string' name='longitude' ordinal='32' />
                  <column datatype='string' name='continent' ordinal='33' />
                  <column datatype='string' name='genre_list' ordinal='34' />
                  <column datatype='string' name='coo_list' ordinal='35' />
                  <column datatype='integer' name='budget_est' ordinal='36' />
                  <column datatype='string' name='budget_label' ordinal='37' />
                  <column datatype='real' name='averageRating' ordinal='38' />
                  <column datatype='integer' name='numVotes' ordinal='39' />
                  <column datatype='string' name='coo_continent' ordinal='40' />
                  <column datatype='string' name='film_era' ordinal='41' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='COOvsShoot Locations'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Tableau Bold'>Country of Origin vs Shooting Location</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='intermediate_predicted_full_dataset' name='federated.1hki1ac1peadlu15imht81tndqec' />
          </datasources>
          <datasource-dependencies datasource='federated.1hki1ac1peadlu15imht81tndqec'>
            <column caption='Coo List' datatype='string' name='[coo_list]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Czechoslovakia&quot;' value='&quot;Slovakia&quot;' />
                <semantic-value key='&quot;East Germany&quot;' value='&quot;Germany&quot;' />
                <semantic-value key='&quot;North Vietnam&quot;' value='&quot;Viet Nam&quot;' />
                <semantic-value key='&quot;Occupied Palestinian Territory&quot;' value='&quot;Palestinian Territories&quot;' />
                <semantic-value key='&quot;Serbia and Montenegro&quot;' value='&quot;Serbia&quot;' />
                <semantic-value key='&quot;Soviet Union&quot;' value='&quot;Russia&quot;' />
                <semantic-value key='&quot;The Democratic Republic of Congo&quot;' value='&quot;Democratic Republic of Congo&quot;' />
                <semantic-value key='&quot;West Germany&quot;' value='&quot;Germany&quot;' />
                <semantic-value key='&quot;Yugoslavia&quot;' value='&quot;Serbia&quot;' />
              </semantic-values>
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Democratic Federation of Northern Syria&quot;' value='&quot;Syria&quot;' />
                <semantic-value key='&quot;USSR&quot;' value='&quot;Russia&quot;' />
                <semantic-value key='&quot;Yugoslavia&quot;' value='&quot;Serbia&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[film_id]' derivation='CountD' name='[ctd:film_id:qk]' pivot='key' type='quantitative' />
            <column caption='Film Id' datatype='string' name='[film_id]' role='dimension' type='nominal' />
            <column-instance column='[coo_list]' derivation='None' name='[none:coo_list:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[film_id]' derivation='CountD' name='[pcto:ctd:film_id:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <computed-sort column='[federated.1hki1ac1peadlu15imht81tndqec].[none:coo_list:nk]' direction='DESC' using='[federated.1hki1ac1peadlu15imht81tndqec].[ctd:film_id:qk]' />
          <filter class='categorical' column='[federated.1hki1ac1peadlu15imht81tndqec].[none:country:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country:nk]' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;None&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1hki1ac1peadlu15imht81tndqec].[none:country:nk]' direction='DESC' using='[federated.1hki1ac1peadlu15imht81tndqec].[ctd:film_id:qk]' />
          <slices>
            <column>[federated.1hki1ac1peadlu15imht81tndqec].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.1hki1ac1peadlu15imht81tndqec].[none:coo_list:nk]' value='10' />
            <format attr='font-family' field='[federated.1hki1ac1peadlu15imht81tndqec].[none:coo_list:nk]' value='Tableau Bold' />
            <format attr='font-size' field='[federated.1hki1ac1peadlu15imht81tndqec].[none:country:nk]' value='10' />
            <format attr='font-family' field='[federated.1hki1ac1peadlu15imht81tndqec].[none:country:nk]' value='Tableau Bold' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1hki1ac1peadlu15imht81tndqec].[ctd:film_id:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='size-bar' field='[federated.1hki1ac1peadlu15imht81tndqec].[pcto:ctd:film_id:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.1hki1ac1peadlu15imht81tndqec].[pcto:ctd:film_id:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#ffffff</color>
                <color>#f8f8f8</color>
                <color>#f2f2f2</color>
                <color>#ececec</color>
                <color>#e5e5e5</color>
                <color>#dfdfdf</color>
                <color>#d9d9d9</color>
                <color>#babadf</color>
                <color>#9999e5</color>
                <color>#7676ec</color>
                <color>#5050f2</color>
                <color>#2929f8</color>
                <color>#0000ff</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1hki1ac1peadlu15imht81tndqec].[pcto:ctd:film_id:qk]' />
              <text column='[federated.1hki1ac1peadlu15imht81tndqec].[pcto:ctd:film_id:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-transparency' value='206' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1hki1ac1peadlu15imht81tndqec].[none:coo_list:nk]</rows>
        <cols>[federated.1hki1ac1peadlu15imht81tndqec].[none:country:nk]</cols>
      </table>
      <simple-id uuid='{9B76C01A-9691-47E6-BA0F-3D1093288E7C}' />
    </worksheet>
    <worksheet name='GE &amp; Env Issues'>
      <table>
        <view>
          <datasources>
            <datasource caption='intermediate_predicted_full_dataset' name='federated.1hki1ac1peadlu15imht81tndqec' />
          </datasources>
          <datasource-dependencies datasource='federated.1hki1ac1peadlu15imht81tndqec'>
            <column caption='Percent of Total Movies' datatype='real' name='[Calculation_538743166044520456]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([film_id]) / SUM({FIXED [releaseYear]: COUNTD([film_id])}) * 100' />
            </column>
            <column datatype='string' name='[Coo List (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[coo_list]' new-bin='true'>
                <bin default-name='false' value='&quot;Group 1&quot;'>
                  <value>&quot;United States&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Group 2&quot;'>
                  <value>&quot;France&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Group 3&quot;'>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Spain&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;None&quot;'>
                  <value>&quot;None&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Other Countries&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Andorra&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Antarctica&quot;</value>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Aruba&quot;</value>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bahamas&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Bermuda&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;Bolivia&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Botswana&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Brunei&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burma&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Cape Verde&quot;</value>
                  <value>&quot;Cayman Islands&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Cocos Islands&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Côte d&apos;Ivoire&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Czech Republic&quot;</value>
                  <value>&quot;Czechoslovakia&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;East Germany&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Falkland Islands&quot;</value>
                  <value>&quot;Faroe Islands&quot;</value>
                  <value>&quot;Federal Republic of Yugoslavia&quot;</value>
                  <value>&quot;Fiji&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;French Polynesia&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Gibraltar&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Greenland&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Iran&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Isle of Man&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Kosovo&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Laos&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Liechtenstein&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Macao&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Marshall Islands&quot;</value>
                  <value>&quot;Martinique&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Micronesia&quot;</value>
                  <value>&quot;Moldova&quot;</value>
                  <value>&quot;Monaco&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;Netherlands Antilles&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;North Korea&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;North Vietnam&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Occupied Palestinian Territory&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Papua New Guinea&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Reunion&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;Russia&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Saint Kitts and Nevis&quot;</value>
                  <value>&quot;Samoa&quot;</value>
                  <value>&quot;San Marino&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Serbia and Montenegro&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;Solomon Islands&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Korea&quot;</value>
                  <value>&quot;Soviet Union&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Svalbard and Jan Mayen&quot;</value>
                  <value>&quot;Swaziland&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Syria&quot;</value>
                  <value>&quot;Taiwan&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Tanzania&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;The Democratic Republic of Congo&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                  <value>&quot;Vatican&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                  <value>&quot;Vietnam&quot;</value>
                  <value>&quot;West Germany&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                  <value>&quot;Yugoslavia&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[coo_continent]' role='dimension' type='nominal' />
            <column caption='Coo List' datatype='string' name='[coo_list]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Czechoslovakia&quot;' value='&quot;Slovakia&quot;' />
                <semantic-value key='&quot;East Germany&quot;' value='&quot;Germany&quot;' />
                <semantic-value key='&quot;North Vietnam&quot;' value='&quot;Viet Nam&quot;' />
                <semantic-value key='&quot;Occupied Palestinian Territory&quot;' value='&quot;Palestinian Territories&quot;' />
                <semantic-value key='&quot;Serbia and Montenegro&quot;' value='&quot;Serbia&quot;' />
                <semantic-value key='&quot;Soviet Union&quot;' value='&quot;Russia&quot;' />
                <semantic-value key='&quot;The Democratic Republic of Congo&quot;' value='&quot;Democratic Republic of Congo&quot;' />
                <semantic-value key='&quot;West Germany&quot;' value='&quot;Germany&quot;' />
                <semantic-value key='&quot;Yugoslavia&quot;' value='&quot;Serbia&quot;' />
              </semantic-values>
            </column>
            <column caption='Film Id' datatype='string' name='[film_id]' role='dimension' type='nominal' />
            <column caption='Issue Label' datatype='string' name='[issue_label]' role='dimension' type='nominal' />
            <column-instance column='[coo_continent]' derivation='None' name='[none:coo_continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[issue_label]' derivation='None' name='[none:issue_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[releaseYear]' derivation='None' name='[none:releaseYear:qk]' pivot='key' type='quantitative' />
            <column caption='Release Year' datatype='integer' name='[releaseYear]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_538743166044520456]' derivation='User' name='[usr:Calculation_538743166044520456:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hki1ac1peadlu15imht81tndqec].[Coo List (group)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Coo List (group)]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[Coo List (group)]' member='&quot;None&quot;' />
                <groupfilter function='member' level='[Coo List (group)]' member='&quot;Other Countries&quot;' />
                <groupfilter function='member' level='[Coo List (group)]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hki1ac1peadlu15imht81tndqec].[none:issue_label:nk]'>
            <groupfilter function='member' level='[none:issue_label:nk]' member='&quot;environmental issues&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1hki1ac1peadlu15imht81tndqec].[none:issue_label:nk]</column>
            <column>[federated.1hki1ac1peadlu15imht81tndqec].[Coo List (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1hki1ac1peadlu15imht81tndqec].[usr:Calculation_538743166044520456:qk]' field-type='quantitative' scale='log' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1hki1ac1peadlu15imht81tndqec].[none:coo_continent:nk] * [federated.1hki1ac1peadlu15imht81tndqec].[usr:Calculation_538743166044520456:qk])</rows>
        <cols>[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]</cols>
      </table>
      <simple-id uuid='{8D5FA796-633B-4E36-89E3-C385471784D5}' />
    </worksheet>
    <worksheet name='GE &amp; Immigration'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Events &amp; Immigration</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='intermediate_predicted_full_dataset' name='federated.1hki1ac1peadlu15imht81tndqec' />
          </datasources>
          <datasource-dependencies datasource='federated.1hki1ac1peadlu15imht81tndqec'>
            <column caption='Percent of Total Movies' datatype='real' name='[Calculation_538743166044520456]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([film_id]) / SUM({FIXED [releaseYear]: COUNTD([film_id])}) * 100' />
            </column>
            <column datatype='string' name='[Coo List (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[coo_list]' new-bin='true'>
                <bin default-name='false' value='&quot;Group 1&quot;'>
                  <value>&quot;United States&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Group 2&quot;'>
                  <value>&quot;France&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Group 3&quot;'>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Spain&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;None&quot;'>
                  <value>&quot;None&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Other Countries&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Andorra&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Antarctica&quot;</value>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Aruba&quot;</value>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bahamas&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Bermuda&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;Bolivia&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Botswana&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Brunei&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burma&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Cape Verde&quot;</value>
                  <value>&quot;Cayman Islands&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Cocos Islands&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Côte d&apos;Ivoire&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Czech Republic&quot;</value>
                  <value>&quot;Czechoslovakia&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;East Germany&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Falkland Islands&quot;</value>
                  <value>&quot;Faroe Islands&quot;</value>
                  <value>&quot;Federal Republic of Yugoslavia&quot;</value>
                  <value>&quot;Fiji&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;French Polynesia&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Gibraltar&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Greenland&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Iran&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Isle of Man&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Kosovo&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Laos&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Liechtenstein&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Macao&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Marshall Islands&quot;</value>
                  <value>&quot;Martinique&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Micronesia&quot;</value>
                  <value>&quot;Moldova&quot;</value>
                  <value>&quot;Monaco&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;Netherlands Antilles&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;North Korea&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;North Vietnam&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Occupied Palestinian Territory&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Papua New Guinea&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Reunion&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;Russia&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Saint Kitts and Nevis&quot;</value>
                  <value>&quot;Samoa&quot;</value>
                  <value>&quot;San Marino&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Serbia and Montenegro&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;Solomon Islands&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Korea&quot;</value>
                  <value>&quot;Soviet Union&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Svalbard and Jan Mayen&quot;</value>
                  <value>&quot;Swaziland&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Syria&quot;</value>
                  <value>&quot;Taiwan&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Tanzania&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;The Democratic Republic of Congo&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                  <value>&quot;Vatican&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                  <value>&quot;Vietnam&quot;</value>
                  <value>&quot;West Germany&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                  <value>&quot;Yugoslavia&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[coo_continent]' role='dimension' type='nominal' />
            <column caption='Coo List' datatype='string' name='[coo_list]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Czechoslovakia&quot;' value='&quot;Slovakia&quot;' />
                <semantic-value key='&quot;East Germany&quot;' value='&quot;Germany&quot;' />
                <semantic-value key='&quot;North Vietnam&quot;' value='&quot;Viet Nam&quot;' />
                <semantic-value key='&quot;Occupied Palestinian Territory&quot;' value='&quot;Palestinian Territories&quot;' />
                <semantic-value key='&quot;Serbia and Montenegro&quot;' value='&quot;Serbia&quot;' />
                <semantic-value key='&quot;Soviet Union&quot;' value='&quot;Russia&quot;' />
                <semantic-value key='&quot;The Democratic Republic of Congo&quot;' value='&quot;Democratic Republic of Congo&quot;' />
                <semantic-value key='&quot;West Germany&quot;' value='&quot;Germany&quot;' />
                <semantic-value key='&quot;Yugoslavia&quot;' value='&quot;Serbia&quot;' />
              </semantic-values>
            </column>
            <column caption='Film Id' datatype='string' name='[film_id]' role='dimension' type='nominal' />
            <column caption='Issue Label' datatype='string' name='[issue_label]' role='dimension' type='nominal' />
            <column-instance column='[coo_continent]' derivation='None' name='[none:coo_continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[issue_label]' derivation='None' name='[none:issue_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[releaseYear]' derivation='None' name='[none:releaseYear:qk]' pivot='key' type='quantitative' />
            <column caption='Release Year' datatype='integer' name='[releaseYear]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_538743166044520456]' derivation='User' name='[usr:Calculation_538743166044520456:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hki1ac1peadlu15imht81tndqec].[Coo List (group)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Coo List (group)]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[Coo List (group)]' member='&quot;None&quot;' />
                <groupfilter function='member' level='[Coo List (group)]' member='&quot;Other Countries&quot;' />
                <groupfilter function='member' level='[Coo List (group)]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hki1ac1peadlu15imht81tndqec].[none:issue_label:nk]'>
            <groupfilter function='member' level='[none:issue_label:nk]' member='&quot;immigration or refugee crisis&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1hki1ac1peadlu15imht81tndqec].[none:issue_label:nk]</column>
            <column>[federated.1hki1ac1peadlu15imht81tndqec].[Coo List (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='vertical-align' id='refline0' value='top' />
            <format attr='vertical-align' id='refline2' value='top' />
            <format attr='text-align' id='refline2' value='left' />
            <format attr='text-align' id='refline0' value='right' />
            <format attr='fill-above' id='refline4' value='#00000000' />
            <format attr='fill-below' id='refline4' value='#00000000' />
            <format attr='line-visibility' id='refline4' value='on' />
            <format attr='line-pattern-only' id='refline4' value='dashed' />
            <format attr='stroke-color' id='refline4' value='#00000096' />
            <format attr='text-align' id='refline4' value='right' />
            <format attr='vertical-align' id='refline4' value='top' />
            <format attr='fill-above' id='refline5' value='#00000000' />
            <format attr='fill-below' id='refline5' value='#00000000' />
            <format attr='line-visibility' id='refline5' value='on' />
            <format attr='line-pattern-only' id='refline5' value='dashed' />
            <format attr='stroke-color' id='refline5' value='#00000084' />
            <format attr='vertical-align' id='refline5' value='top' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
            <format attr='stroke-color' id='refline0' value='#00000079' />
            <format attr='line-pattern-only' id='refline2' value='dashed' />
            <format attr='stroke-color' id='refline2' value='#00000077' />
            <format attr='stroke-size' id='refline2' value='0' />
            <format attr='line-visibility' id='refline2' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label='Refugees from Nazism' label-type='custom' paired-id='refline1' scope='per-table' symmetric='false' value='1933' value-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' z-order='1' />
            <reference-line axis-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' enable-instant-analytics='true' formula='constant' id='refline1' label-type='none' paired-id='refline0' scope='per-table' symmetric='false' value='1945' value-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' z-order='1' />
            <reference-line axis-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' enable-instant-analytics='true' formula='constant' id='refline2' label='WWI' label-type='custom' paired-id='refline3' scope='per-table' symmetric='false' value='1914' value-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' z-order='2' />
            <reference-line axis-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' enable-instant-analytics='true' formula='constant' id='refline3' label-type='none' paired-id='refline2' scope='per-table' symmetric='false' value='1918' value-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' z-order='2' />
            <reference-line axis-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' enable-instant-analytics='true' formula='constant' id='refline4' label='Anti-German' label-type='custom' scope='per-table' value='1917' value-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' z-order='3' />
            <reference-line axis-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' enable-instant-analytics='true' formula='constant' id='refline5' label='Migration and Refugee assistance Act' label-type='custom' scope='per-table' value='1962' value-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' z-order='4' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1hki1ac1peadlu15imht81tndqec].[none:coo_continent:nk] * [federated.1hki1ac1peadlu15imht81tndqec].[usr:Calculation_538743166044520456:qk])</rows>
        <cols>[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]</cols>
      </table>
      <simple-id uuid='{0B08FA10-A270-49BB-8D2E-50019F299B3A}' />
    </worksheet>
    <worksheet name='Global Events &amp; Racism'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global events &amp; Racism  </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='intermediate_predicted_full_dataset' name='federated.1hki1ac1peadlu15imht81tndqec' />
          </datasources>
          <datasource-dependencies datasource='federated.1hki1ac1peadlu15imht81tndqec'>
            <column caption='Percent of Total Movies' datatype='real' name='[Calculation_538743166044520456]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([film_id]) / SUM({FIXED [releaseYear]: COUNTD([film_id])}) * 100' />
            </column>
            <column datatype='string' name='[coo_continent]' role='dimension' type='nominal' />
            <column caption='Film Id' datatype='string' name='[film_id]' role='dimension' type='nominal' />
            <column caption='Issue Label' datatype='string' name='[issue_label]' role='dimension' type='nominal' />
            <column-instance column='[coo_continent]' derivation='None' name='[none:coo_continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[issue_label]' derivation='None' name='[none:issue_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[releaseYear]' derivation='None' name='[none:releaseYear:qk]' pivot='key' type='quantitative' />
            <column caption='Release Year' datatype='integer' name='[releaseYear]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_538743166044520456]' derivation='User' name='[usr:Calculation_538743166044520456:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hki1ac1peadlu15imht81tndqec].[none:coo_continent:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:coo_continent:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:coo_continent:nk]' member='&quot;Antarctica&quot;' />
                <groupfilter function='member' level='[none:coo_continent:nk]' member='&quot;None&quot;' />
                <groupfilter function='member' level='[none:coo_continent:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hki1ac1peadlu15imht81tndqec].[none:issue_label:nk]'>
            <groupfilter function='member' level='[none:issue_label:nk]' member='&quot;racism or discrimination&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' included-values='in-range'>
            <min>1925</min>
            <max>2024</max>
          </filter>
          <slices>
            <column>[federated.1hki1ac1peadlu15imht81tndqec].[none:issue_label:nk]</column>
            <column>[federated.1hki1ac1peadlu15imht81tndqec].[none:coo_continent:nk]</column>
            <column>[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='vertical-align' id='refline0' value='top' />
            <format attr='color' id='refline0' value='#000000' />
            <format attr='text-align' id='refline0' value='right' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='stroke-color' id='refline2' value='#00000086' />
            <format attr='line-visibility' id='refline2' value='on' />
            <format attr='line-pattern-only' id='refline2' value='dashed' />
            <format attr='vertical-align' id='refline2' value='top' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='fill-color' id='refline0' value='#f5f5f5' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
            <format attr='stroke-color' id='refline0' value='#0000007c' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label='Segregation Era' label-type='custom' paired-id='refline1' scope='per-table' symmetric='false' value='1900' value-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' z-order='1' />
            <reference-line axis-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' enable-instant-analytics='true' formula='constant' id='refline1' label-type='none' paired-id='refline0' scope='per-table' symmetric='false' value='1939' value-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' z-order='1' />
            <reference-line axis-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' enable-instant-analytics='true' formula='constant' id='refline2' label='Civil Rights Act' label-type='custom' scope='per-table' value='1964' value-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1hki1ac1peadlu15imht81tndqec].[none:coo_continent:nk] * [federated.1hki1ac1peadlu15imht81tndqec].[usr:Calculation_538743166044520456:qk])</rows>
        <cols>[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]</cols>
      </table>
      <simple-id uuid='{70497D4A-1F75-497D-A817-C5B3117749F8}' />
    </worksheet>
    <worksheet name='Global event &amp; War'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Arial Black' fontsize='20'>Global events &amp; </run>
            <run fontalignment='1' fontname='Arial Black' fontsize='20' italic='true'>War or Revolution </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='intermediate_predicted_full_dataset' name='federated.1hki1ac1peadlu15imht81tndqec' />
          </datasources>
          <datasource-dependencies datasource='federated.1hki1ac1peadlu15imht81tndqec'>
            <column caption='Percent of Total Movies' datatype='real' name='[Calculation_538743166044520456]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([film_id]) / SUM({FIXED [releaseYear]: COUNTD([film_id])}) * 100' />
            </column>
            <column datatype='string' name='[coo_continent]' role='dimension' type='nominal' />
            <column caption='Decades' datatype='string' name='[decades]' role='dimension' type='nominal' />
            <column caption='Film Id' datatype='string' name='[film_id]' role='dimension' type='nominal' />
            <column caption='Issue Label' datatype='string' name='[issue_label]' role='dimension' type='nominal' />
            <column-instance column='[coo_continent]' derivation='None' name='[none:coo_continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[decades]' derivation='None' name='[none:decades:nk]' pivot='key' type='nominal' />
            <column-instance column='[issue_label]' derivation='None' name='[none:issue_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[releaseYear]' derivation='None' name='[none:releaseYear:qk]' pivot='key' type='quantitative' />
            <column caption='Release Year' datatype='integer' name='[releaseYear]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_538743166044520456]' derivation='User' name='[usr:Calculation_538743166044520456:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hki1ac1peadlu15imht81tndqec].[none:coo_continent:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:coo_continent:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:coo_continent:nk]' member='&quot;None&quot;' />
                <groupfilter function='member' level='[none:coo_continent:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hki1ac1peadlu15imht81tndqec].[none:decades:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:decades:nk]' />
              <groupfilter function='member' level='[none:decades:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hki1ac1peadlu15imht81tndqec].[none:issue_label:nk]'>
            <groupfilter function='member' level='[none:issue_label:nk]' member='&quot;war or revolution&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1hki1ac1peadlu15imht81tndqec].[none:decades:nk]</column>
            <column>[federated.1hki1ac1peadlu15imht81tndqec].[none:issue_label:nk]</column>
            <column>[federated.1hki1ac1peadlu15imht81tndqec].[none:coo_continent:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' value='#1b1b1b' />
            <format attr='font-size' field='[federated.1hki1ac1peadlu15imht81tndqec].[none:coo_continent:nk]' value='10' />
            <format attr='font-family' field='[federated.1hki1ac1peadlu15imht81tndqec].[none:coo_continent:nk]' value='Arial Black' />
            <format attr='font-size' field='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' value='10' />
            <format attr='font-family' field='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' value='Arial Black' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='line-visibility' id='refline1' value='on' />
            <format attr='line-pattern-only' id='refline1' value='dashed' />
            <format attr='stroke-color' id='refline1' value='#000000ad' />
            <format attr='text-align' id='refline1' value='left' />
            <format attr='vertical-align' id='refline0' value='top' />
            <format attr='vertical-align' id='refline1' value='top' />
            <format attr='vertical-align' id='refline2' value='top' />
            <format attr='line-visibility' id='refline3' value='on' />
            <format attr='line-pattern-only' id='refline3' value='dashed' />
            <format attr='stroke-color' id='refline3' value='#0000009b' />
            <format attr='text-align' id='refline2' value='right' />
            <format attr='fill-above' id='refline5' value='#00000000' />
            <format attr='fill-below' id='refline5' value='#00000000' />
            <format attr='line-visibility' id='refline5' value='on' />
            <format attr='line-pattern-only' id='refline5' value='dashed' />
            <format attr='stroke-color' id='refline5' value='#00000096' />
            <format attr='fill-below' id='refline3' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='fill-above' id='refline3' value='#00000000' />
            <format attr='vertical-align' id='refline6' value='top' />
            <format attr='color' id='refline6' value='#000000' />
            <format attr='text-align' id='refline0' value='right' />
            <format attr='color' id='refline0' value='#000000' />
            <format attr='color' id='refline2' value='#000000' />
            <format attr='vertical-align' id='refline10' value='top' />
            <format attr='vertical-align' id='refline7' value='top' />
            <format attr='vertical-align' id='refline4' value='top' />
            <format attr='vertical-align' id='refline12' value='top' />
            <format attr='font-family' id='refline10' value='Tableau Bold' />
            <format attr='font-size' id='refline10' value='20' />
            <format attr='font-size' id='refline7' value='20' />
            <format attr='font-family' id='refline7' value='Tableau Bold' />
            <format attr='font-size' id='refline12' value='20' />
            <format attr='font-family' id='refline12' value='Tableau Bold' />
            <format attr='font-size' id='refline4' value='20' />
            <format attr='font-family' id='refline4' value='Tableau Bold' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <reference-line axis-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' enable-instant-analytics='true' formula='constant' id='refline10' label='WWI' label-type='custom' paired-id='refline11' scope='per-table' symmetric='false' value='1914' value-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' z-order='3' />
            <reference-line axis-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' enable-instant-analytics='true' formula='constant' id='refline11' label-type='none' paired-id='refline10' scope='per-table' symmetric='false' value='1918' value-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' z-order='3' />
            <reference-line axis-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' enable-instant-analytics='true' formula='constant' id='refline12' label='Civil Right Movement' label-type='custom' paired-id='refline13' scope='per-table' symmetric='false' value='1954' value-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' z-order='4' />
            <reference-line axis-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' enable-instant-analytics='true' formula='constant' id='refline13' label-type='none' paired-id='refline12' scope='per-table' symmetric='false' value='1968' value-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' z-order='4' />
            <reference-line axis-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' enable-instant-analytics='true' formula='constant' id='refline4' label='Iraq War' label-type='custom' paired-id='refline5' scope='per-table' symmetric='false' value='2003' value-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' z-order='1' />
            <reference-line axis-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' enable-instant-analytics='true' formula='constant' id='refline5' label-type='none' paired-id='refline4' scope='per-table' symmetric='false' value='2011' value-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' z-order='1' />
            <reference-line axis-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' enable-instant-analytics='true' formula='constant' id='refline7' label='WWII' label-type='custom' paired-id='refline9' scope='per-table' symmetric='false' value='1939' value-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' z-order='2' />
            <reference-line axis-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' enable-instant-analytics='true' formula='constant' id='refline9' label-type='none' paired-id='refline7' scope='per-table' symmetric='false' value='1945' value-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1hki1ac1peadlu15imht81tndqec].[none:coo_continent:nk] * [federated.1hki1ac1peadlu15imht81tndqec].[usr:Calculation_538743166044520456:qk])</rows>
        <cols>[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]</cols>
        <show-full-range>
          <column>[federated.1hki1ac1peadlu15imht81tndqec].[Release Year (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{09BE3876-837A-40B5-B950-B7679E8C01EF}' />
    </worksheet>
    <worksheet name='Global events &amp; LGBTQ+'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Arial Black' fontsize='20'>Global events &amp; </run>
            <run fontalignment='1' fontname='Arial Black' fontsize='20' italic='true'>LGBTQ+</run>
            <run fontalignment='1' fontname='Arial Black' fontsize='20'>Æ </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='intermediate_predicted_full_dataset' name='federated.1hki1ac1peadlu15imht81tndqec' />
          </datasources>
          <datasource-dependencies datasource='federated.1hki1ac1peadlu15imht81tndqec'>
            <column caption='Percent of Total Movies' datatype='real' name='[Calculation_538743166044520456]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([film_id]) / SUM({FIXED [releaseYear]: COUNTD([film_id])}) * 100' />
            </column>
            <column datatype='string' name='[coo_continent]' role='dimension' type='nominal' />
            <column caption='Film Id' datatype='string' name='[film_id]' role='dimension' type='nominal' />
            <column caption='Issue Label' datatype='string' name='[issue_label]' role='dimension' type='nominal' />
            <column-instance column='[coo_continent]' derivation='None' name='[none:coo_continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[issue_label]' derivation='None' name='[none:issue_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[releaseYear]' derivation='None' name='[none:releaseYear:qk]' pivot='key' type='quantitative' />
            <column caption='Release Year' datatype='integer' name='[releaseYear]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_538743166044520456]' derivation='User' name='[usr:Calculation_538743166044520456:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hki1ac1peadlu15imht81tndqec].[none:coo_continent:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:coo_continent:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:coo_continent:nk]' member='&quot;Antarctica&quot;' />
                <groupfilter function='member' level='[none:coo_continent:nk]' member='&quot;None&quot;' />
                <groupfilter function='member' level='[none:coo_continent:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hki1ac1peadlu15imht81tndqec].[none:issue_label:nk]'>
            <groupfilter function='member' level='[none:issue_label:nk]' member='&quot;lgbtq&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1hki1ac1peadlu15imht81tndqec].[none:issue_label:nk]</column>
            <column>[federated.1hki1ac1peadlu15imht81tndqec].[none:coo_continent:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='font-family' field='[federated.1hki1ac1peadlu15imht81tndqec].[none:coo_continent:nk]' value='Arial Black' />
            <format attr='font-family' field='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' value='Tableau Bold' />
            <format attr='font-size' field='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' value='11' />
            <format attr='font-size' field='[federated.1hki1ac1peadlu15imht81tndqec].[none:coo_continent:nk]' value='11' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#000000a0' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='line-visibility' id='refline1' value='on' />
            <format attr='line-pattern-only' id='refline1' value='dashed' />
            <format attr='stroke-color' id='refline1' value='#000000a0' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='line-visibility' id='refline2' value='on' />
            <format attr='line-pattern-only' id='refline2' value='dashed' />
            <format attr='stroke-color' id='refline2' value='#00000072' />
            <format attr='fill-above' id='refline3' value='#00000000' />
            <format attr='fill-below' id='refline3' value='#00000000' />
            <format attr='line-visibility' id='refline3' value='on' />
            <format attr='line-pattern-only' id='refline3' value='dashed' />
            <format attr='stroke-color' id='refline3' value='#0000007e' />
            <format attr='text-align' id='refline3' value='left' />
            <format attr='vertical-align' id='refline3' value='top' />
            <format attr='text-align' id='refline1' value='center' />
            <format attr='vertical-align' id='refline1' value='center' />
            <format attr='font-family' id='refline3' value='Tableau Bold' />
            <format attr='font-size' id='refline3' value='18' />
            <format attr='font-size' id='refline0' value='18' />
            <format attr='font-family' id='refline0' value='Tableau Bold' />
            <format attr='vertical-align' id='refline0' value='top' />
            <format attr='font-size' id='refline2' value='18' />
            <format attr='font-family' id='refline2' value='Tableau Bold' />
            <format attr='font-size' id='refline4' value='18' />
            <format attr='font-family' id='refline4' value='Tableau Bold' />
            <format attr='text-align' id='refline4' value='right' />
            <format attr='vertical-align' id='refline4' value='top' />
            <format attr='text-align' id='refline0' value='right' />
            <format attr='vertical-align' id='refline2' value='center' />
            <format attr='text-align' id='refline2' value='right' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label='StoneWall Riots' label-type='custom' scope='per-table' value='1969' value-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' z-order='1' />
            <reference-line axis-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' enable-instant-analytics='true' formula='constant' id='refline3' label='First Gay uprising (LA)' label-type='custom' scope='per-table' value='1959' value-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' z-order='2' />
            <reference-line axis-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' enable-instant-analytics='true' formula='constant' id='refline4' label='Acceptence period' label-type='custom' paired-id='refline5' scope='per-table' symmetric='false' value='1998' value-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' z-order='3' />
            <reference-line axis-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' enable-instant-analytics='true' formula='constant' id='refline5' label-type='none' paired-id='refline4' scope='per-table' symmetric='false' value='2004' value-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' z-order='3' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1hki1ac1peadlu15imht81tndqec].[none:coo_continent:nk] * [federated.1hki1ac1peadlu15imht81tndqec].[usr:Calculation_538743166044520456:qk])</rows>
        <cols>[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]</cols>
      </table>
      <simple-id uuid='{799D9E81-7A9F-4DFB-9349-2A53EEA52FD5}' />
    </worksheet>
    <worksheet name='OriginTop20'>
      <table>
        <view>
          <datasources>
            <datasource caption='intermediate_predicted_full_dataset' name='federated.1hki1ac1peadlu15imht81tndqec' />
          </datasources>
          <datasource-dependencies datasource='federated.1hki1ac1peadlu15imht81tndqec'>
            <column datatype='string' name='[Issue Label (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[issue_label]' new-bin='true'>
                <bin default-name='false' value='&quot;Social Issues&quot;'>
                  <value>&quot;crime and corruption&quot;</value>
                  <value>&quot;disability&quot;</value>
                  <value>&quot;drugs and alcoholism&quot;</value>
                  <value>&quot;environmental issues&quot;</value>
                  <value>&quot;feminism&quot;</value>
                  <value>&quot;health and disease&quot;</value>
                  <value>&quot;immigration or refugee crisis&quot;</value>
                  <value>&quot;lgbtq&quot;</value>
                  <value>&quot;political issues&quot;</value>
                  <value>&quot;racism or discrimination&quot;</value>
                  <value>&quot;socioeconomic inequality&quot;</value>
                  <value>&quot;war or revolution&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[coo_continent]' role='dimension' type='nominal' />
            <column caption='Coo List' datatype='string' name='[coo_list]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Czechoslovakia&quot;' value='&quot;Slovakia&quot;' />
                <semantic-value key='&quot;East Germany&quot;' value='&quot;Germany&quot;' />
                <semantic-value key='&quot;North Vietnam&quot;' value='&quot;Viet Nam&quot;' />
                <semantic-value key='&quot;Occupied Palestinian Territory&quot;' value='&quot;Palestinian Territories&quot;' />
                <semantic-value key='&quot;Serbia and Montenegro&quot;' value='&quot;Serbia&quot;' />
                <semantic-value key='&quot;Soviet Union&quot;' value='&quot;Russia&quot;' />
                <semantic-value key='&quot;The Democratic Republic of Congo&quot;' value='&quot;Democratic Republic of Congo&quot;' />
                <semantic-value key='&quot;West Germany&quot;' value='&quot;Germany&quot;' />
                <semantic-value key='&quot;Yugoslavia&quot;' value='&quot;Serbia&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[film_id]' derivation='CountD' name='[ctd:film_id:qk]' pivot='key' type='quantitative' />
            <column caption='Decades' datatype='string' name='[decades]' role='dimension' type='nominal' />
            <column caption='Film Id' datatype='string' name='[film_id]' role='dimension' type='nominal' />
            <column caption='Issue Label' datatype='string' name='[issue_label]' role='dimension' type='nominal' />
            <column-instance column='[coo_continent]' derivation='None' name='[none:coo_continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[coo_list]' derivation='None' name='[none:coo_list:nk]' pivot='key' type='nominal' />
            <column-instance column='[decades]' derivation='None' name='[none:decades:nk]' pivot='key' type='nominal' />
            <column-instance column='[film_id]' derivation='CountD' name='[pcto:ctd:film_id:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hki1ac1peadlu15imht81tndqec].[Issue Label (group)]'>
            <groupfilter function='member' level='[Issue Label (group)]' member='&quot;Social Issues&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hki1ac1peadlu15imht81tndqec].[none:coo_continent:nk]'>
            <groupfilter function='member' level='[none:coo_continent:nk]' member='&quot;South America&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hki1ac1peadlu15imht81tndqec].[none:coo_list:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:coo_list:nk]' />
              <groupfilter function='member' level='[none:coo_list:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hki1ac1peadlu15imht81tndqec].[none:decades:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:decades:nk]' />
              <groupfilter function='member' level='[none:decades:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1hki1ac1peadlu15imht81tndqec].[none:coo_list:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1hki1ac1peadlu15imht81tndqec].[ctd:film_id:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1hki1ac1peadlu15imht81tndqec].[none:coo_list:nk]</column>
            <column>[federated.1hki1ac1peadlu15imht81tndqec].[Issue Label (group)]</column>
            <column>[federated.1hki1ac1peadlu15imht81tndqec].[none:decades:nk]</column>
            <column>[federated.1hki1ac1peadlu15imht81tndqec].[none:coo_continent:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1hki1ac1peadlu15imht81tndqec].[ctd:film_id:qk]' field-type='quantitative' scale='log' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-size' field='[federated.1hki1ac1peadlu15imht81tndqec].[ctd:film_id:qk]' value='12' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#ff1008d0' />
            <format attr='text-align' id='refline0' value='right' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='stroke-color' id='refline1' value='#ff1008d0' />
            <format attr='text-align' id='refline1' value='right' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-size' field='[federated.1hki1ac1peadlu15imht81tndqec].[ctd:film_id:qk]' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1hki1ac1peadlu15imht81tndqec].[Issue Label (group)]' />
              <text column='[federated.1hki1ac1peadlu15imht81tndqec].[pcto:ctd:film_id:qk]' />
            </encodings>
            <reference-line axis-column='[federated.1hki1ac1peadlu15imht81tndqec].[ctd:film_id:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label-type='automatic' scope='per-table' value='4000' value-column='[federated.1hki1ac1peadlu15imht81tndqec].[ctd:film_id:qk]' z-order='1' />
            <reference-line axis-column='[federated.1hki1ac1peadlu15imht81tndqec].[ctd:film_id:qk]' enable-instant-analytics='true' formula='constant' id='refline1' label-type='automatic' scope='per-table' value='2000' value-column='[federated.1hki1ac1peadlu15imht81tndqec].[ctd:film_id:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1hki1ac1peadlu15imht81tndqec].[ctd:film_id:qk]</rows>
        <cols>[federated.1hki1ac1peadlu15imht81tndqec].[none:coo_list:nk]</cols>
      </table>
      <simple-id uuid='{2957A092-A681-4F2F-8990-3F78744A37F7}' />
    </worksheet>
    <worksheet name='Sheet 28'>
      <table>
        <view>
          <datasources>
            <datasource caption='intermediate_predicted_full_dataset' name='federated.1hki1ac1peadlu15imht81tndqec' />
          </datasources>
          <datasource-dependencies datasource='federated.1hki1ac1peadlu15imht81tndqec'>
            <column caption='Percent of Total Movies' datatype='real' name='[Calculation_538743166044520456]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([film_id]) / SUM({FIXED [releaseYear]: COUNTD([film_id])}) * 100' />
            </column>
            <column datatype='string' name='[coo_continent]' role='dimension' type='nominal' />
            <column caption='Film Id' datatype='string' name='[film_id]' role='dimension' type='nominal' />
            <column caption='Issue Label' datatype='string' name='[issue_label]' role='dimension' type='nominal' />
            <column-instance column='[coo_continent]' derivation='None' name='[none:coo_continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[issue_label]' derivation='None' name='[none:issue_label:nk]' pivot='key' type='nominal' />
            <column caption='Release Year' datatype='integer' name='[releaseYear]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_538743166044520456]' derivation='User' name='[usr:Calculation_538743166044520456:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hki1ac1peadlu15imht81tndqec].[none:coo_continent:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:coo_continent:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:coo_continent:nk]' member='&quot;None&quot;' />
                <groupfilter function='member' level='[none:coo_continent:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hki1ac1peadlu15imht81tndqec].[none:issue_label:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:issue_label:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:issue_label:nk]' member='&quot;others&quot;' />
                <groupfilter function='member' level='[none:issue_label:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1hki1ac1peadlu15imht81tndqec].[none:issue_label:nk]</column>
            <column>[federated.1hki1ac1peadlu15imht81tndqec].[none:coo_continent:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1hki1ac1peadlu15imht81tndqec].[usr:Calculation_538743166044520456:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1hki1ac1peadlu15imht81tndqec].[none:issue_label:nk]</rows>
        <cols>[federated.1hki1ac1peadlu15imht81tndqec].[none:coo_continent:nk]</cols>
      </table>
      <simple-id uuid='{76E9A184-1872-48B0-89B4-6FB169FF5468}' />
    </worksheet>
    <worksheet name='Sheet 30'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Bold' fontsize='16'>Film distribution over time</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='intermediate_predicted_full_dataset' name='federated.1hki1ac1peadlu15imht81tndqec' />
          </datasources>
          <datasource-dependencies datasource='federated.1hki1ac1peadlu15imht81tndqec'>
            <column-instance column='[film_id]' derivation='CountD' name='[ctd:film_id:qk]' pivot='key' type='quantitative' />
            <column caption='Film Id' datatype='string' name='[film_id]' role='dimension' type='nominal' />
            <column-instance column='[releaseYear]' derivation='None' name='[none:releaseYear:qk]' pivot='key' type='quantitative' />
            <column caption='Release Year' datatype='integer' name='[releaseYear]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='252' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' value='11' />
            <format attr='font-family' field='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' value='Arial Black' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='font-family' id='refline0' value='Arial Black' />
            <format attr='text-align' id='refline0' value='right' />
            <format attr='vertical-align' id='refline0' value='top' />
            <format attr='font-family' id='refline2' value='Arial Black' />
            <format attr='vertical-align' id='refline2' value='center' />
            <format attr='text-align' id='refline2' value='center' />
            <format attr='font-family' id='refline4' value='Arial Black' />
            <format attr='vertical-align' id='refline4' value='top' />
            <format attr='text-align' id='refline4' value='right' />
            <format attr='font-family' id='refline6' value='Arial Black' />
            <format attr='text-align' id='refline6' value='right' />
            <format attr='vertical-align' id='refline6' value='top' />
            <format attr='font-family' id='refline8' value='Arial Black' />
            <format attr='vertical-align' id='refline8' value='top' />
            <format attr='fill-above' id='refline10' value='#e6e6e6' />
            <format attr='fill-below' id='refline10' value='#00000000' />
            <format attr='font-family' id='refline10' value='Arial Black' />
            <format attr='vertical-align' id='refline10' value='top' />
            <format attr='font-size' id='refline0' value='14' />
            <format attr='font-size' id='refline2' value='14' />
            <format attr='font-size' id='refline4' value='14' />
            <format attr='font-size' id='refline6' value='14' />
            <format attr='font-size' id='refline8' value='14' />
            <format attr='font-size' id='refline10' value='14' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='fill-color' id='refline0' value='#f5f5f5' />
            <format attr='fill-color' id='refline2' value='#e6e6e6' />
            <format attr='fill-color' id='refline4' value='#f5f5f5' />
            <format attr='line-visibility' id='refline2' value='on' />
            <format attr='line-pattern-only' id='refline2' value='solid' />
            <format attr='fill-color' id='refline6' value='#e6e6e6' />
            <format attr='fill-color' id='refline8' value='#f5f5f5' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <reference-line axis-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' enable-instant-analytics='true' formula='min' id='refline0' label='Silent Era' label-type='custom' paired-id='refline1' scope='per-table' symmetric='false' value-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' z-order='1' />
            <reference-line axis-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' enable-instant-analytics='true' formula='constant' id='refline1' label-type='none' paired-id='refline0' scope='per-table' symmetric='false' value='1920' value-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' z-order='1' />
            <reference-line axis-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' enable-instant-analytics='true' formula='constant' id='refline10' label='Streaming' label-type='custom' scope='per-table' value='2001' value-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' z-order='6' />
            <reference-line axis-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' enable-instant-analytics='true' formula='constant' id='refline2' label='Transition to Sound' label-type='custom' paired-id='refline3' scope='per-table' symmetric='false' value='1927' value-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' z-order='2' />
            <reference-line axis-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' enable-instant-analytics='true' formula='constant' id='refline3' label-type='none' paired-id='refline2' scope='per-table' symmetric='false' value='1934' value-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' z-order='2' />
            <reference-line axis-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' enable-instant-analytics='true' formula='constant' id='refline4' label='Golden Age' label-type='custom' paired-id='refline5' scope='per-table' symmetric='false' value='1930' value-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' z-order='3' />
            <reference-line axis-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' enable-instant-analytics='true' formula='constant' id='refline5' label-type='none' paired-id='refline4' scope='per-table' symmetric='false' value='1950' value-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' z-order='3' />
            <reference-line axis-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' enable-instant-analytics='true' formula='constant' id='refline6' label='New Hollywood' label-type='custom' paired-id='refline7' scope='per-table' symmetric='false' value='1951' value-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' z-order='4' />
            <reference-line axis-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' enable-instant-analytics='true' formula='constant' id='refline7' label-type='none' paired-id='refline6' scope='per-table' symmetric='false' value='1970' value-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' z-order='4' />
            <reference-line axis-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' enable-instant-analytics='true' formula='constant' id='refline8' label='Blockbuster' label-type='custom' paired-id='refline9' scope='per-table' symmetric='false' value='1971' value-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' z-order='5' />
            <reference-line axis-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' enable-instant-analytics='true' formula='constant' id='refline9' label-type='none' paired-id='refline8' scope='per-table' symmetric='false' value='2000' value-column='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' z-order='5' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1hki1ac1peadlu15imht81tndqec].[ctd:film_id:qk]</rows>
        <cols>[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]</cols>
      </table>
      <simple-id uuid='{16254F6F-C525-4FB3-8D4D-733F2BB6FF1E}' />
    </worksheet>
    <worksheet name='Sheet 31'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Bold' fontsize='20'>Social Issue evolution over film eras</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='intermediate_predicted_full_dataset' name='federated.1hki1ac1peadlu15imht81tndqec' />
          </datasources>
          <datasource-dependencies datasource='federated.1hki1ac1peadlu15imht81tndqec'>
            <column datatype='string' name='[Film Era]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[releaseYear]' new-bin='true'>
                <bin default-name='false' value='&quot;Blockbuster Era&quot;'>
                  <value>1981</value>
                  <value>1982</value>
                  <value>1983</value>
                  <value>1984</value>
                  <value>1985</value>
                  <value>1986</value>
                  <value>1987</value>
                  <value>1988</value>
                  <value>1989</value>
                  <value>1990</value>
                  <value>1991</value>
                  <value>1992</value>
                  <value>1993</value>
                  <value>1994</value>
                  <value>1995</value>
                  <value>1996</value>
                  <value>1997</value>
                  <value>1998</value>
                  <value>1999</value>
                  <value>2000</value>
                </bin>
                <bin default-name='false' value='&quot;Golden Age of Hollywood&quot;'>
                  <value>1931</value>
                  <value>1932</value>
                  <value>1933</value>
                  <value>1934</value>
                  <value>1935</value>
                  <value>1936</value>
                  <value>1937</value>
                  <value>1938</value>
                  <value>1939</value>
                  <value>1940</value>
                  <value>1941</value>
                  <value>1942</value>
                  <value>1943</value>
                  <value>1944</value>
                  <value>1945</value>
                  <value>1946</value>
                  <value>1947</value>
                  <value>1948</value>
                  <value>1949</value>
                  <value>1950</value>
                  <value>1951</value>
                  <value>1952</value>
                  <value>1953</value>
                  <value>1954</value>
                  <value>1955</value>
                  <value>1956</value>
                  <value>1957</value>
                  <value>1958</value>
                  <value>1959</value>
                  <value>1960</value>
                </bin>
                <bin default-name='false' value='&quot;New Hollywood Era&quot;'>
                  <value>1961</value>
                  <value>1962</value>
                  <value>1963</value>
                  <value>1964</value>
                  <value>1965</value>
                  <value>1966</value>
                  <value>1967</value>
                  <value>1968</value>
                  <value>1969</value>
                  <value>1970</value>
                  <value>1971</value>
                  <value>1972</value>
                  <value>1973</value>
                  <value>1974</value>
                  <value>1975</value>
                  <value>1976</value>
                  <value>1977</value>
                  <value>1978</value>
                  <value>1979</value>
                  <value>1980</value>
                </bin>
                <bin default-name='false' value='&quot;Silent Era&quot;'>
                  <value>1894</value>
                  <value>1897</value>
                  <value>1904</value>
                  <value>1906</value>
                  <value>1911</value>
                  <value>1912</value>
                  <value>1913</value>
                  <value>1914</value>
                  <value>1915</value>
                  <value>1916</value>
                  <value>1917</value>
                  <value>1918</value>
                  <value>1919</value>
                  <value>1920</value>
                </bin>
                <bin default-name='false' value='&quot;Streaming Era&quot;'>
                  <value>2001</value>
                  <value>2002</value>
                  <value>2003</value>
                  <value>2004</value>
                  <value>2005</value>
                  <value>2006</value>
                  <value>2007</value>
                  <value>2008</value>
                  <value>2009</value>
                  <value>2010</value>
                  <value>2011</value>
                  <value>2012</value>
                  <value>2013</value>
                  <value>2014</value>
                  <value>2015</value>
                  <value>2016</value>
                  <value>2017</value>
                  <value>2018</value>
                  <value>2019</value>
                  <value>2020</value>
                  <value>2021</value>
                  <value>2022</value>
                  <value>2023</value>
                  <value>2024</value>
                </bin>
                <bin default-name='false' value='&quot;Transition to Sound&quot;'>
                  <value>1921</value>
                  <value>1922</value>
                  <value>1923</value>
                  <value>1924</value>
                  <value>1925</value>
                  <value>1926</value>
                  <value>1927</value>
                  <value>1928</value>
                  <value>1929</value>
                  <value>1930</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Issue Strength]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[issue_label]' new-bin='true'>
                <bin default-name='false' value='&quot;Normal Issues&quot;'>
                  <value>&quot;crime and corruption&quot;</value>
                  <value>&quot;drugs and alcoholism&quot;</value>
                  <value>&quot;feminism&quot;</value>
                  <value>&quot;health and disease&quot;</value>
                  <value>&quot;racism or discrimination&quot;</value>
                  <value>&quot;socioeconomic inequality&quot;</value>
                  <value>&quot;war or revolution&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Others&quot;'>
                  <value>&quot;others&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Weak Issues&quot;'>
                  <value>&quot;disability&quot;</value>
                  <value>&quot;environmental issues&quot;</value>
                  <value>&quot;immigration or refugee crisis&quot;</value>
                  <value>&quot;lgbtq&quot;</value>
                  <value>&quot;political issues&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[film_id]' derivation='CountD' name='[ctd:film_id:qk]' pivot='key' type='quantitative' />
            <column caption='Film Id' datatype='string' name='[film_id]' role='dimension' type='nominal' />
            <column caption='Issue Label' datatype='string' name='[issue_label]' role='dimension' type='nominal' />
            <column-instance column='[issue_label]' derivation='None' name='[none:issue_label:nk]' pivot='key' type='nominal' />
            <column caption='Release Year' datatype='integer' name='[releaseYear]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1hki1ac1peadlu15imht81tndqec].[Film Era]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Streaming Era&quot;</bucket>
              <bucket>&quot;Blockbuster Era&quot;</bucket>
              <bucket>&quot;New Hollywood Era&quot;</bucket>
              <bucket>&quot;Golden Age of Hollywood&quot;</bucket>
              <bucket>&quot;Transition to Sound&quot;</bucket>
              <bucket>&quot;Silent Era&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1hki1ac1peadlu15imht81tndqec].[none:issue_label:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:issue_label:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:issue_label:nk]' member='&quot;others&quot;' />
                <groupfilter function='member' level='[none:issue_label:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1hki1ac1peadlu15imht81tndqec].[none:issue_label:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1hki1ac1peadlu15imht81tndqec].[none:issue_label:nk]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1hki1ac1peadlu15imht81tndqec].[Issue Strength]' />
              <text column='[federated.1hki1ac1peadlu15imht81tndqec].[ctd:film_id:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1hki1ac1peadlu15imht81tndqec].[Film Era] * [federated.1hki1ac1peadlu15imht81tndqec].[ctd:film_id:qk])</rows>
        <cols>[federated.1hki1ac1peadlu15imht81tndqec].[none:issue_label:nk]</cols>
      </table>
      <simple-id uuid='{B32685A2-41C7-4988-8C8A-0209E0CA7FF2}' />
    </worksheet>
    <worksheet name='Temporal trends'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Temporal trends [Full Data]</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='intermediate_predicted_full_dataset' name='federated.1hki1ac1peadlu15imht81tndqec' />
          </datasources>
          <datasource-dependencies datasource='federated.1hki1ac1peadlu15imht81tndqec'>
            <column caption='Percent of Total Movies' datatype='real' name='[Calculation_538743166044520456]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([film_id]) / SUM({FIXED [releaseYear]: COUNTD([film_id])}) * 100' />
            </column>
            <column datatype='string' name='[Film Era]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[releaseYear]' new-bin='true'>
                <bin default-name='false' value='&quot;Blockbuster Era&quot;'>
                  <value>1981</value>
                  <value>1982</value>
                  <value>1983</value>
                  <value>1984</value>
                  <value>1985</value>
                  <value>1986</value>
                  <value>1987</value>
                  <value>1988</value>
                  <value>1989</value>
                  <value>1990</value>
                  <value>1991</value>
                  <value>1992</value>
                  <value>1993</value>
                  <value>1994</value>
                  <value>1995</value>
                  <value>1996</value>
                  <value>1997</value>
                  <value>1998</value>
                  <value>1999</value>
                  <value>2000</value>
                </bin>
                <bin default-name='false' value='&quot;Golden Age of Hollywood&quot;'>
                  <value>1931</value>
                  <value>1932</value>
                  <value>1933</value>
                  <value>1934</value>
                  <value>1935</value>
                  <value>1936</value>
                  <value>1937</value>
                  <value>1938</value>
                  <value>1939</value>
                  <value>1940</value>
                  <value>1941</value>
                  <value>1942</value>
                  <value>1943</value>
                  <value>1944</value>
                  <value>1945</value>
                  <value>1946</value>
                  <value>1947</value>
                  <value>1948</value>
                  <value>1949</value>
                  <value>1950</value>
                  <value>1951</value>
                  <value>1952</value>
                  <value>1953</value>
                  <value>1954</value>
                  <value>1955</value>
                  <value>1956</value>
                  <value>1957</value>
                  <value>1958</value>
                  <value>1959</value>
                  <value>1960</value>
                </bin>
                <bin default-name='false' value='&quot;New Hollywood Era&quot;'>
                  <value>1961</value>
                  <value>1962</value>
                  <value>1963</value>
                  <value>1964</value>
                  <value>1965</value>
                  <value>1966</value>
                  <value>1967</value>
                  <value>1968</value>
                  <value>1969</value>
                  <value>1970</value>
                  <value>1971</value>
                  <value>1972</value>
                  <value>1973</value>
                  <value>1974</value>
                  <value>1975</value>
                  <value>1976</value>
                  <value>1977</value>
                  <value>1978</value>
                  <value>1979</value>
                  <value>1980</value>
                </bin>
                <bin default-name='false' value='&quot;Silent Era&quot;'>
                  <value>1894</value>
                  <value>1897</value>
                  <value>1904</value>
                  <value>1906</value>
                  <value>1911</value>
                  <value>1912</value>
                  <value>1913</value>
                  <value>1914</value>
                  <value>1915</value>
                  <value>1916</value>
                  <value>1917</value>
                  <value>1918</value>
                  <value>1919</value>
                  <value>1920</value>
                </bin>
                <bin default-name='false' value='&quot;Streaming Era&quot;'>
                  <value>2001</value>
                  <value>2002</value>
                  <value>2003</value>
                  <value>2004</value>
                  <value>2005</value>
                  <value>2006</value>
                  <value>2007</value>
                  <value>2008</value>
                  <value>2009</value>
                  <value>2010</value>
                  <value>2011</value>
                  <value>2012</value>
                  <value>2013</value>
                  <value>2014</value>
                  <value>2015</value>
                  <value>2016</value>
                  <value>2017</value>
                  <value>2018</value>
                  <value>2019</value>
                  <value>2020</value>
                  <value>2021</value>
                  <value>2022</value>
                  <value>2023</value>
                  <value>2024</value>
                </bin>
                <bin default-name='false' value='&quot;Transition to Sound&quot;'>
                  <value>1921</value>
                  <value>1922</value>
                  <value>1923</value>
                  <value>1924</value>
                  <value>1925</value>
                  <value>1926</value>
                  <value>1927</value>
                  <value>1928</value>
                  <value>1929</value>
                  <value>1930</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Issue Strength]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[issue_label]' new-bin='true'>
                <bin default-name='false' value='&quot;Normal Issues&quot;'>
                  <value>&quot;crime and corruption&quot;</value>
                  <value>&quot;drugs and alcoholism&quot;</value>
                  <value>&quot;feminism&quot;</value>
                  <value>&quot;health and disease&quot;</value>
                  <value>&quot;racism or discrimination&quot;</value>
                  <value>&quot;socioeconomic inequality&quot;</value>
                  <value>&quot;war or revolution&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Others&quot;'>
                  <value>&quot;others&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Weak Issues&quot;'>
                  <value>&quot;disability&quot;</value>
                  <value>&quot;environmental issues&quot;</value>
                  <value>&quot;immigration or refugee crisis&quot;</value>
                  <value>&quot;lgbtq&quot;</value>
                  <value>&quot;political issues&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[coo_continent]' role='dimension' type='nominal' />
            <column-instance column='[film_id]' derivation='CountD' name='[ctd:film_id:qk]' pivot='key' type='quantitative' />
            <column caption='Film Id' datatype='string' name='[film_id]' role='dimension' type='nominal' />
            <column caption='Issue Label' datatype='string' name='[issue_label]' role='dimension' type='nominal' />
            <column-instance column='[coo_continent]' derivation='None' name='[none:coo_continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[issue_label]' derivation='None' name='[none:issue_label:nk]' pivot='key' type='nominal' />
            <column caption='Release Year' datatype='integer' name='[releaseYear]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_538743166044520456]' derivation='User' name='[usr:Calculation_538743166044520456:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hki1ac1peadlu15imht81tndqec].[Exclusions (coo_continent,Film Era,Issue Label,Issue Strength)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:coo_continent:nk]' />
                <groupfilter function='level-members' level='[Film Era]' />
                <groupfilter function='level-members' level='[none:issue_label:nk]' />
                <groupfilter function='level-members' level='[Issue Strength]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[Film Era]' member='&quot;Silent Era&quot;' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Issue Strength]' member='&quot;Normal Issues&quot;' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:coo_continent:nk]' member='&quot;Oceania&quot;' />
                      <groupfilter function='member' level='[none:issue_label:nk]' member='&quot;crime and corruption&quot;' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:coo_continent:nk]' />
                  <hierarchy name='[Film Era]' />
                  <hierarchy name='[none:issue_label:nk]' />
                  <hierarchy name='[Issue Strength]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1hki1ac1peadlu15imht81tndqec].[Film Era]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Silent Era&quot;</bucket>
              <bucket>&quot;Transition to Sound&quot;</bucket>
              <bucket>&quot;Golden Age of Hollywood&quot;</bucket>
              <bucket>&quot;New Hollywood Era&quot;</bucket>
              <bucket>&quot;Blockbuster Era&quot;</bucket>
              <bucket>&quot;Streaming Era&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1hki1ac1peadlu15imht81tndqec].[none:coo_continent:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:coo_continent:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:coo_continent:nk]' member='&quot;None&quot;' />
                <groupfilter function='member' level='[none:coo_continent:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1hki1ac1peadlu15imht81tndqec].[none:coo_continent:nk]' direction='DESC' using='[federated.1hki1ac1peadlu15imht81tndqec].[ctd:film_id:qk]' />
          <filter class='categorical' column='[federated.1hki1ac1peadlu15imht81tndqec].[none:issue_label:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:issue_label:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:issue_label:nk]' member='&quot;others&quot;' />
                <groupfilter function='member' level='[none:issue_label:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1hki1ac1peadlu15imht81tndqec].[none:issue_label:nk]' direction='DESC' using='[federated.1hki1ac1peadlu15imht81tndqec].[ctd:film_id:qk]' />
          <slices>
            <column>[federated.1hki1ac1peadlu15imht81tndqec].[none:issue_label:nk]</column>
            <column>[federated.1hki1ac1peadlu15imht81tndqec].[none:coo_continent:nk]</column>
            <column>[federated.1hki1ac1peadlu15imht81tndqec].[Exclusions (coo_continent,Film Era,Issue Label,Issue Strength)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1hki1ac1peadlu15imht81tndqec].[Film Era]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1hki1ac1peadlu15imht81tndqec].[none:issue_label:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1hki1ac1peadlu15imht81tndqec].[Issue Strength] * [federated.1hki1ac1peadlu15imht81tndqec].[usr:Calculation_538743166044520456:qk])</rows>
        <cols>([federated.1hki1ac1peadlu15imht81tndqec].[none:coo_continent:nk] / [federated.1hki1ac1peadlu15imht81tndqec].[Film Era])</cols>
      </table>
      <simple-id uuid='{7AF64377-575B-40A1-9CC0-3621899A0685}' />
    </worksheet>
    <worksheet name='Top 10 COO vs shoot'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 15 Country of Origin vs Shooting Location </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='intermediate_predicted_full_dataset' name='federated.1hki1ac1peadlu15imht81tndqec' />
          </datasources>
          <datasource-dependencies datasource='federated.1hki1ac1peadlu15imht81tndqec'>
            <column datatype='string' name='[Issue Label (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[issue_label]' new-bin='true'>
                <bin default-name='false' value='&quot;Social Issues&quot;'>
                  <value>&quot;crime and corruption&quot;</value>
                  <value>&quot;disability&quot;</value>
                  <value>&quot;drugs and alcoholism&quot;</value>
                  <value>&quot;environmental issues&quot;</value>
                  <value>&quot;feminism&quot;</value>
                  <value>&quot;health and disease&quot;</value>
                  <value>&quot;immigration or refugee crisis&quot;</value>
                  <value>&quot;lgbtq&quot;</value>
                  <value>&quot;political issues&quot;</value>
                  <value>&quot;racism or discrimination&quot;</value>
                  <value>&quot;socioeconomic inequality&quot;</value>
                  <value>&quot;war or revolution&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Coo List' datatype='string' name='[coo_list]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Czechoslovakia&quot;' value='&quot;Slovakia&quot;' />
                <semantic-value key='&quot;East Germany&quot;' value='&quot;Germany&quot;' />
                <semantic-value key='&quot;North Vietnam&quot;' value='&quot;Viet Nam&quot;' />
                <semantic-value key='&quot;Occupied Palestinian Territory&quot;' value='&quot;Palestinian Territories&quot;' />
                <semantic-value key='&quot;Serbia and Montenegro&quot;' value='&quot;Serbia&quot;' />
                <semantic-value key='&quot;Soviet Union&quot;' value='&quot;Russia&quot;' />
                <semantic-value key='&quot;The Democratic Republic of Congo&quot;' value='&quot;Democratic Republic of Congo&quot;' />
                <semantic-value key='&quot;West Germany&quot;' value='&quot;Germany&quot;' />
                <semantic-value key='&quot;Yugoslavia&quot;' value='&quot;Serbia&quot;' />
              </semantic-values>
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Democratic Federation of Northern Syria&quot;' value='&quot;Syria&quot;' />
                <semantic-value key='&quot;USSR&quot;' value='&quot;Russia&quot;' />
                <semantic-value key='&quot;Yugoslavia&quot;' value='&quot;Serbia&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[film_id]' derivation='CountD' name='[ctd:film_id:qk]' pivot='key' type='quantitative' />
            <column caption='Film Id' datatype='string' name='[film_id]' role='dimension' type='nominal' />
            <column caption='Issue Label' datatype='string' name='[issue_label]' role='dimension' type='nominal' />
            <column-instance column='[coo_list]' derivation='None' name='[none:coo_list:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[film_id]' derivation='CountD' name='[pcto:ctd:film_id:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hki1ac1peadlu15imht81tndqec].[Issue Label (group)]'>
            <groupfilter function='member' level='[Issue Label (group)]' member='&quot;Social Issues&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hki1ac1peadlu15imht81tndqec].[none:coo_list:nk]'>
            <groupfilter count='15' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNTD([film_id])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:coo_list:nk]' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:coo_list:nk]' member='&quot;Burma&quot;' />
                    <groupfilter function='member' level='[none:coo_list:nk]' member='&quot;Cocos Islands&quot;' />
                    <groupfilter function='member' level='[none:coo_list:nk]' member='&quot;Guinea&quot;' />
                    <groupfilter function='member' level='[none:coo_list:nk]' member='&quot;Marshall Islands&quot;' />
                    <groupfilter function='member' level='[none:coo_list:nk]' member='&quot;Micronesia&quot;' />
                    <groupfilter function='member' level='[none:coo_list:nk]' member='&quot;North Vietnam&quot;' />
                    <groupfilter function='member' level='[none:coo_list:nk]' member='&quot;Reunion&quot;' />
                    <groupfilter function='member' level='[none:coo_list:nk]' member='&quot;Solomon Islands&quot;' />
                    <groupfilter function='member' level='[none:coo_list:nk]' member='&quot;Togo&quot;' />
                    <groupfilter function='member' level='[none:coo_list:nk]' member='%null%' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1hki1ac1peadlu15imht81tndqec].[none:coo_list:nk]' direction='DESC' using='[federated.1hki1ac1peadlu15imht81tndqec].[ctd:film_id:qk]' />
          <filter class='categorical' column='[federated.1hki1ac1peadlu15imht81tndqec].[none:country:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country:nk]' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;None&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1hki1ac1peadlu15imht81tndqec].[none:country:nk]' direction='DESC' using='[federated.1hki1ac1peadlu15imht81tndqec].[ctd:film_id:qk]' />
          <slices>
            <column>[federated.1hki1ac1peadlu15imht81tndqec].[none:country:nk]</column>
            <column>[federated.1hki1ac1peadlu15imht81tndqec].[none:coo_list:nk]</column>
            <column>[federated.1hki1ac1peadlu15imht81tndqec].[Issue Label (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1hki1ac1peadlu15imht81tndqec].[ctd:film_id:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='size-bar' field='[federated.1hki1ac1peadlu15imht81tndqec].[pcto:ctd:film_id:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.1hki1ac1peadlu15imht81tndqec].[pcto:ctd:film_id:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#ffffff</color>
                <color>#f8f8f8</color>
                <color>#f2f2f2</color>
                <color>#ececec</color>
                <color>#e5e5e5</color>
                <color>#dfdfdf</color>
                <color>#d9d9d9</color>
                <color>#abc6b6</color>
                <color>#83b496</color>
                <color>#60a279</color>
                <color>#419060</color>
                <color>#287e49</color>
                <color>#146c36</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1hki1ac1peadlu15imht81tndqec].[pcto:ctd:film_id:qk]' />
              <text column='[federated.1hki1ac1peadlu15imht81tndqec].[pcto:ctd:film_id:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1hki1ac1peadlu15imht81tndqec].[none:coo_list:nk]</rows>
        <cols>[federated.1hki1ac1peadlu15imht81tndqec].[none:country:nk]</cols>
      </table>
      <simple-id uuid='{A982F46E-6024-42C6-86BE-B4EAB2501214}' />
    </worksheet>
    <worksheet name='genre relationship'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Arial Black' fontsize='16'>Genre and Social themes relationship</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='intermediate_predicted_full_dataset' name='federated.1hki1ac1peadlu15imht81tndqec' />
          </datasources>
          <datasource-dependencies datasource='federated.1hki1ac1peadlu15imht81tndqec'>
            <column caption='count_interval' datatype='string' name='[Calculation_1693916478540742656]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF COUNTD([film_id]) &lt;= 500 THEN &apos;Film Count: &lt; 500&apos;&#13;&#10;ELSEIF COUNTD([film_id]) &lt;= 1000 THEN &apos;Film Count: 500 - 1000&apos;&#13;&#10;ELSEIF COUNTD([film_id]) &lt;= 1500 THEN &apos;Film Count: 1000 - 1500&apos;&#13;&#10;ELSEIF COUNTD([film_id]) &gt; 1500 THEN &apos;Film Count: &gt; 1500&apos;&#13;&#10;END' />
            </column>
            <column caption='distinct_film_count' datatype='integer' name='[Calculation_538743166061293577]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([film_id])' />
            </column>
            <column datatype='string' name='[coo_continent]' role='dimension' type='nominal' />
            <column caption='Film Id' datatype='string' name='[film_id]' role='dimension' type='nominal' />
            <column caption='Genre List' datatype='string' name='[genre_list]' role='dimension' type='nominal' />
            <column caption='Issue Label' datatype='string' name='[issue_label]' role='dimension' type='nominal' />
            <column-instance column='[coo_continent]' derivation='None' name='[none:coo_continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[genre_list]' derivation='None' name='[none:genre_list:nk]' pivot='key' type='nominal' />
            <column-instance column='[issue_label]' derivation='None' name='[none:issue_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[film_id]' derivation='CountD' name='[pcto:ctd:film_id:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_1693916478540742656]' derivation='User' name='[usr:Calculation_1693916478540742656:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_538743166061293577]' derivation='User' name='[usr:Calculation_538743166061293577:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hki1ac1peadlu15imht81tndqec].[none:coo_continent:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:coo_continent:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:coo_continent:nk]' member='&quot;Antarctica&quot;' />
                <groupfilter function='member' level='[none:coo_continent:nk]' member='&quot;None&quot;' />
                <groupfilter function='member' level='[none:coo_continent:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hki1ac1peadlu15imht81tndqec].[none:genre_list:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:genre_list:nk]' />
              <groupfilter function='member' level='[none:genre_list:nk]' member='&quot;\\N&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hki1ac1peadlu15imht81tndqec].[none:issue_label:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:issue_label:nk]' />
              <groupfilter function='member' level='[none:issue_label:nk]' member='&quot;others&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1hki1ac1peadlu15imht81tndqec].[usr:Calculation_1693916478540742656:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Film Count: &lt; 500&quot;</bucket>
              <bucket>&quot;Film Count: 500 - 1000&quot;</bucket>
              <bucket>&quot;Film Count: 1000 - 1500&quot;</bucket>
              <bucket>&quot;Film Count: &gt; 1500&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1hki1ac1peadlu15imht81tndqec].[none:genre_list:nk]</column>
            <column>[federated.1hki1ac1peadlu15imht81tndqec].[none:issue_label:nk]</column>
            <column>[federated.1hki1ac1peadlu15imht81tndqec].[none:coo_continent:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='wrap' field='[federated.1hki1ac1peadlu15imht81tndqec].[none:genre_list:nk]' value='off' />
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1hki1ac1peadlu15imht81tndqec].[none:genre_list:nk]' value='-90' />
            <format attr='font-size' field='[federated.1hki1ac1peadlu15imht81tndqec].[none:genre_list:nk]' value='10' />
            <format attr='font-size' field='[federated.1hki1ac1peadlu15imht81tndqec].[none:issue_label:nk]' value='10' />
            <format attr='font-family' field='[federated.1hki1ac1peadlu15imht81tndqec].[none:issue_label:nk]' value='Tableau Bold' />
            <format attr='font-family' field='[federated.1hki1ac1peadlu15imht81tndqec].[none:genre_list:nk]' value='Tableau Bold' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1hki1ac1peadlu15imht81tndqec].[pcto:ctd:film_id:qk]' num-steps='4' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='size' field='[federated.1hki1ac1peadlu15imht81tndqec].[pcto:ctd:film_id:qk]' value='% of Films Addressing Issue' />
            <format attr='color' field='[federated.1hki1ac1peadlu15imht81tndqec].[usr:Calculation_1693916478540742656:nk]' value='Film Count Range' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.1hki1ac1peadlu15imht81tndqec].[usr:Calculation_1693916478540742656:nk]' />
              <size column='[federated.1hki1ac1peadlu15imht81tndqec].[pcto:ctd:film_id:qk]' />
              <tooltip column='[federated.1hki1ac1peadlu15imht81tndqec].[usr:Calculation_538743166061293577:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Genre List:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1hki1ac1peadlu15imht81tndqec].[none:genre_list:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Issue Label:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1hki1ac1peadlu15imht81tndqec].[none:issue_label:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[Film Count:         <[federated.1hki1ac1peadlu15imht81tndqec].[usr:Calculation_538743166061293577:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% of Film addressing Issues:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1hki1ac1peadlu15imht81tndqec].[pcto:ctd:film_id:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7999999523162842' />
                <format attr='shape' value=':filled/plus' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1hki1ac1peadlu15imht81tndqec].[none:issue_label:nk]</rows>
        <cols>[federated.1hki1ac1peadlu15imht81tndqec].[none:genre_list:nk]</cols>
      </table>
      <simple-id uuid='{7441C789-02AB-4373-8CE6-97959E54212E}' />
    </worksheet>
    <worksheet name='origin_map'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Arial Black' fontsize='16'>Social Issue movies distribution as per Country of Origin</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='intermediate_predicted_full_dataset' name='federated.1hki1ac1peadlu15imht81tndqec' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1hki1ac1peadlu15imht81tndqec'>
            <column caption='log interval' datatype='string' name='[Calculation_1734448864551047170]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF LOG(COUNTD([film_id])) &lt;= 0.88 THEN &apos;film count &lt; 8&apos;&#13;&#10;ELSEIF LOG(COUNTD([film_id])) &lt;= 1.76 THEN &apos;film count: 8 - 55&apos;&#13;&#10;ELSEIF LOG(COUNTD([film_id])) &lt;= 2.64 THEN &apos;film count: 55 - 435&apos;&#13;&#10;ELSEIF LOG(COUNTD([film_id])) &lt;= 3.52 THEN &apos;film count: 435 - 5000&apos;&#13;&#10;ELSEIF LOG(COUNTD([film_id])) &gt; 3.52 THEN &apos;film count &gt; 5000&apos;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Film Era]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[releaseYear]' new-bin='true'>
                <bin default-name='false' value='&quot;Blockbuster Era&quot;'>
                  <value>1981</value>
                  <value>1982</value>
                  <value>1983</value>
                  <value>1984</value>
                  <value>1985</value>
                  <value>1986</value>
                  <value>1987</value>
                  <value>1988</value>
                  <value>1989</value>
                  <value>1990</value>
                  <value>1991</value>
                  <value>1992</value>
                  <value>1993</value>
                  <value>1994</value>
                  <value>1995</value>
                  <value>1996</value>
                  <value>1997</value>
                  <value>1998</value>
                  <value>1999</value>
                  <value>2000</value>
                </bin>
                <bin default-name='false' value='&quot;Golden Age of Hollywood&quot;'>
                  <value>1931</value>
                  <value>1932</value>
                  <value>1933</value>
                  <value>1934</value>
                  <value>1935</value>
                  <value>1936</value>
                  <value>1937</value>
                  <value>1938</value>
                  <value>1939</value>
                  <value>1940</value>
                  <value>1941</value>
                  <value>1942</value>
                  <value>1943</value>
                  <value>1944</value>
                  <value>1945</value>
                  <value>1946</value>
                  <value>1947</value>
                  <value>1948</value>
                  <value>1949</value>
                  <value>1950</value>
                  <value>1951</value>
                  <value>1952</value>
                  <value>1953</value>
                  <value>1954</value>
                  <value>1955</value>
                  <value>1956</value>
                  <value>1957</value>
                  <value>1958</value>
                  <value>1959</value>
                  <value>1960</value>
                </bin>
                <bin default-name='false' value='&quot;New Hollywood Era&quot;'>
                  <value>1961</value>
                  <value>1962</value>
                  <value>1963</value>
                  <value>1964</value>
                  <value>1965</value>
                  <value>1966</value>
                  <value>1967</value>
                  <value>1968</value>
                  <value>1969</value>
                  <value>1970</value>
                  <value>1971</value>
                  <value>1972</value>
                  <value>1973</value>
                  <value>1974</value>
                  <value>1975</value>
                  <value>1976</value>
                  <value>1977</value>
                  <value>1978</value>
                  <value>1979</value>
                  <value>1980</value>
                </bin>
                <bin default-name='false' value='&quot;Silent Era&quot;'>
                  <value>1894</value>
                  <value>1897</value>
                  <value>1904</value>
                  <value>1906</value>
                  <value>1911</value>
                  <value>1912</value>
                  <value>1913</value>
                  <value>1914</value>
                  <value>1915</value>
                  <value>1916</value>
                  <value>1917</value>
                  <value>1918</value>
                  <value>1919</value>
                  <value>1920</value>
                </bin>
                <bin default-name='false' value='&quot;Streaming Era&quot;'>
                  <value>2001</value>
                  <value>2002</value>
                  <value>2003</value>
                  <value>2004</value>
                  <value>2005</value>
                  <value>2006</value>
                  <value>2007</value>
                  <value>2008</value>
                  <value>2009</value>
                  <value>2010</value>
                  <value>2011</value>
                  <value>2012</value>
                  <value>2013</value>
                  <value>2014</value>
                  <value>2015</value>
                  <value>2016</value>
                  <value>2017</value>
                  <value>2018</value>
                  <value>2019</value>
                  <value>2020</value>
                  <value>2021</value>
                  <value>2022</value>
                  <value>2023</value>
                  <value>2024</value>
                </bin>
                <bin default-name='false' value='&quot;Transition to Sound&quot;'>
                  <value>1921</value>
                  <value>1922</value>
                  <value>1923</value>
                  <value>1924</value>
                  <value>1925</value>
                  <value>1926</value>
                  <value>1927</value>
                  <value>1928</value>
                  <value>1929</value>
                  <value>1930</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Issue Label (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[issue_label]' new-bin='true'>
                <bin default-name='false' value='&quot;Social Issues&quot;'>
                  <value>&quot;crime and corruption&quot;</value>
                  <value>&quot;disability&quot;</value>
                  <value>&quot;drugs and alcoholism&quot;</value>
                  <value>&quot;environmental issues&quot;</value>
                  <value>&quot;feminism&quot;</value>
                  <value>&quot;health and disease&quot;</value>
                  <value>&quot;immigration or refugee crisis&quot;</value>
                  <value>&quot;lgbtq&quot;</value>
                  <value>&quot;political issues&quot;</value>
                  <value>&quot;racism or discrimination&quot;</value>
                  <value>&quot;socioeconomic inequality&quot;</value>
                  <value>&quot;war or revolution&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[coo_continent]' role='dimension' type='nominal' />
            <column caption='Coo List' datatype='string' name='[coo_list]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Czechoslovakia&quot;' value='&quot;Slovakia&quot;' />
                <semantic-value key='&quot;East Germany&quot;' value='&quot;Germany&quot;' />
                <semantic-value key='&quot;North Vietnam&quot;' value='&quot;Viet Nam&quot;' />
                <semantic-value key='&quot;Occupied Palestinian Territory&quot;' value='&quot;Palestinian Territories&quot;' />
                <semantic-value key='&quot;Serbia and Montenegro&quot;' value='&quot;Serbia&quot;' />
                <semantic-value key='&quot;Soviet Union&quot;' value='&quot;Russia&quot;' />
                <semantic-value key='&quot;The Democratic Republic of Congo&quot;' value='&quot;Democratic Republic of Congo&quot;' />
                <semantic-value key='&quot;West Germany&quot;' value='&quot;Germany&quot;' />
                <semantic-value key='&quot;Yugoslavia&quot;' value='&quot;Serbia&quot;' />
              </semantic-values>
            </column>
            <column caption='Film Id' datatype='string' name='[film_id]' role='dimension' type='nominal' />
            <column caption='Issue Label' datatype='string' name='[issue_label]' role='dimension' type='nominal' />
            <column-instance column='[coo_continent]' derivation='None' name='[none:coo_continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[coo_list]' derivation='None' name='[none:coo_list:nk]' pivot='key' type='nominal' />
            <column-instance column='[releaseYear]' derivation='None' name='[none:releaseYear:ok]' pivot='key' type='ordinal' />
            <column caption='Release Year' datatype='integer' name='[releaseYear]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_1734448864551047170]' derivation='User' name='[usr:Calculation_1734448864551047170:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hki1ac1peadlu15imht81tndqec].[Action (Issue Label,Release Year)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_35302FDE8CC246DABF66CD6F31DE6D08]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[issue_label]' />
              <groupfilter function='level-members' level='[none:releaseYear:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hki1ac1peadlu15imht81tndqec].[Film Era]' filter-group='5'>
            <groupfilter function='level-members' level='[Film Era]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hki1ac1peadlu15imht81tndqec].[Issue Label (group)]'>
            <groupfilter function='level-members' level='[Issue Label (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hki1ac1peadlu15imht81tndqec].[none:coo_continent:nk]'>
            <groupfilter function='level-members' level='[none:coo_continent:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hki1ac1peadlu15imht81tndqec].[usr:Calculation_1734448864551047170:nk]'>
            <groupfilter function='level-members' level='[usr:Calculation_1734448864551047170:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1hki1ac1peadlu15imht81tndqec].[usr:Calculation_1734448864551047170:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;film count &lt; 8&quot;</bucket>
              <bucket>&quot;film count: 8 - 55&quot;</bucket>
              <bucket>&quot;film count: 55 - 435&quot;</bucket>
              <bucket>&quot;film count: 435 - 5000&quot;</bucket>
              <bucket>&quot;film count &gt; 5000&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1hki1ac1peadlu15imht81tndqec].[Issue Label (group)]</column>
            <column>[federated.1hki1ac1peadlu15imht81tndqec].[none:coo_continent:nk]</column>
            <column>[federated.1hki1ac1peadlu15imht81tndqec].[Action (Issue Label,Release Year)]</column>
            <column>[federated.1hki1ac1peadlu15imht81tndqec].[Film Era]</column>
            <column>[federated.1hki1ac1peadlu15imht81tndqec].[usr:Calculation_1734448864551047170:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1hki1ac1peadlu15imht81tndqec].[Longitude (generated)]' field-type='quantitative' max='73611787.063663259' min='16632514.943931371' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1hki1ac1peadlu15imht81tndqec].[Latitude (generated)]' field-type='quantitative' max='18759860.86139591' min='-13716238.554529358' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-family' value='Tableau Bold' />
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-family' value='Arial Black' />
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1hki1ac1peadlu15imht81tndqec].[usr:Calculation_1734448864551047170:nk]' value='Distinct Film Count'>
              <formatted-text>
                <run>Distinct Film Count</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1hki1ac1peadlu15imht81tndqec].[usr:Calculation_1734448864551047170:nk]' />
              <lod column='[federated.1hki1ac1peadlu15imht81tndqec].[none:coo_list:nk]' />
              <geometry column='[federated.1hki1ac1peadlu15imht81tndqec].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1hki1ac1peadlu15imht81tndqec].[Latitude (generated)]</rows>
        <cols>[federated.1hki1ac1peadlu15imht81tndqec].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{5CA91179-A27D-45B5-8FC1-BF6C3FD3725E}' />
    </worksheet>
    <worksheet name='shooting_map'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Social issue movies distribution per shooting location</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='intermediate_predicted_full_dataset' name='federated.1hki1ac1peadlu15imht81tndqec' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1hki1ac1peadlu15imht81tndqec'>
            <column caption='log interval' datatype='string' name='[Calculation_1734448864551047170]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF LOG(COUNTD([film_id])) &lt;= 0.88 THEN &apos;film count &lt; 8&apos;&#13;&#10;ELSEIF LOG(COUNTD([film_id])) &lt;= 1.76 THEN &apos;film count: 8 - 55&apos;&#13;&#10;ELSEIF LOG(COUNTD([film_id])) &lt;= 2.64 THEN &apos;film count: 55 - 435&apos;&#13;&#10;ELSEIF LOG(COUNTD([film_id])) &lt;= 3.52 THEN &apos;film count: 435 - 5000&apos;&#13;&#10;ELSEIF LOG(COUNTD([film_id])) &gt; 3.52 THEN &apos;film count &gt; 5000&apos;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Film Era]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[releaseYear]' new-bin='true'>
                <bin default-name='false' value='&quot;Blockbuster Era&quot;'>
                  <value>1981</value>
                  <value>1982</value>
                  <value>1983</value>
                  <value>1984</value>
                  <value>1985</value>
                  <value>1986</value>
                  <value>1987</value>
                  <value>1988</value>
                  <value>1989</value>
                  <value>1990</value>
                  <value>1991</value>
                  <value>1992</value>
                  <value>1993</value>
                  <value>1994</value>
                  <value>1995</value>
                  <value>1996</value>
                  <value>1997</value>
                  <value>1998</value>
                  <value>1999</value>
                  <value>2000</value>
                </bin>
                <bin default-name='false' value='&quot;Golden Age of Hollywood&quot;'>
                  <value>1931</value>
                  <value>1932</value>
                  <value>1933</value>
                  <value>1934</value>
                  <value>1935</value>
                  <value>1936</value>
                  <value>1937</value>
                  <value>1938</value>
                  <value>1939</value>
                  <value>1940</value>
                  <value>1941</value>
                  <value>1942</value>
                  <value>1943</value>
                  <value>1944</value>
                  <value>1945</value>
                  <value>1946</value>
                  <value>1947</value>
                  <value>1948</value>
                  <value>1949</value>
                  <value>1950</value>
                  <value>1951</value>
                  <value>1952</value>
                  <value>1953</value>
                  <value>1954</value>
                  <value>1955</value>
                  <value>1956</value>
                  <value>1957</value>
                  <value>1958</value>
                  <value>1959</value>
                  <value>1960</value>
                </bin>
                <bin default-name='false' value='&quot;New Hollywood Era&quot;'>
                  <value>1961</value>
                  <value>1962</value>
                  <value>1963</value>
                  <value>1964</value>
                  <value>1965</value>
                  <value>1966</value>
                  <value>1967</value>
                  <value>1968</value>
                  <value>1969</value>
                  <value>1970</value>
                  <value>1971</value>
                  <value>1972</value>
                  <value>1973</value>
                  <value>1974</value>
                  <value>1975</value>
                  <value>1976</value>
                  <value>1977</value>
                  <value>1978</value>
                  <value>1979</value>
                  <value>1980</value>
                </bin>
                <bin default-name='false' value='&quot;Silent Era&quot;'>
                  <value>1894</value>
                  <value>1897</value>
                  <value>1904</value>
                  <value>1906</value>
                  <value>1911</value>
                  <value>1912</value>
                  <value>1913</value>
                  <value>1914</value>
                  <value>1915</value>
                  <value>1916</value>
                  <value>1917</value>
                  <value>1918</value>
                  <value>1919</value>
                  <value>1920</value>
                </bin>
                <bin default-name='false' value='&quot;Streaming Era&quot;'>
                  <value>2001</value>
                  <value>2002</value>
                  <value>2003</value>
                  <value>2004</value>
                  <value>2005</value>
                  <value>2006</value>
                  <value>2007</value>
                  <value>2008</value>
                  <value>2009</value>
                  <value>2010</value>
                  <value>2011</value>
                  <value>2012</value>
                  <value>2013</value>
                  <value>2014</value>
                  <value>2015</value>
                  <value>2016</value>
                  <value>2017</value>
                  <value>2018</value>
                  <value>2019</value>
                  <value>2020</value>
                  <value>2021</value>
                  <value>2022</value>
                  <value>2023</value>
                  <value>2024</value>
                </bin>
                <bin default-name='false' value='&quot;Transition to Sound&quot;'>
                  <value>1921</value>
                  <value>1922</value>
                  <value>1923</value>
                  <value>1924</value>
                  <value>1925</value>
                  <value>1926</value>
                  <value>1927</value>
                  <value>1928</value>
                  <value>1929</value>
                  <value>1930</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Issue Label (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[issue_label]' new-bin='true'>
                <bin default-name='false' value='&quot;Social Issues&quot;'>
                  <value>&quot;crime and corruption&quot;</value>
                  <value>&quot;disability&quot;</value>
                  <value>&quot;drugs and alcoholism&quot;</value>
                  <value>&quot;environmental issues&quot;</value>
                  <value>&quot;feminism&quot;</value>
                  <value>&quot;health and disease&quot;</value>
                  <value>&quot;immigration or refugee crisis&quot;</value>
                  <value>&quot;lgbtq&quot;</value>
                  <value>&quot;political issues&quot;</value>
                  <value>&quot;racism or discrimination&quot;</value>
                  <value>&quot;socioeconomic inequality&quot;</value>
                  <value>&quot;war or revolution&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Democratic Federation of Northern Syria&quot;' value='&quot;Syria&quot;' />
                <semantic-value key='&quot;USSR&quot;' value='&quot;Russia&quot;' />
                <semantic-value key='&quot;Yugoslavia&quot;' value='&quot;Serbia&quot;' />
              </semantic-values>
            </column>
            <column caption='Film Id' datatype='string' name='[film_id]' role='dimension' type='nominal' />
            <column caption='Issue Label' datatype='string' name='[issue_label]' role='dimension' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column caption='Release Year' datatype='integer' name='[releaseYear]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_1734448864551047170]' derivation='User' name='[usr:Calculation_1734448864551047170:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hki1ac1peadlu15imht81tndqec].[Film Era]' filter-group='5'>
            <groupfilter function='level-members' level='[Film Era]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hki1ac1peadlu15imht81tndqec].[Issue Label (group)]'>
            <groupfilter function='member' level='[Issue Label (group)]' member='&quot;Social Issues&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1hki1ac1peadlu15imht81tndqec].[usr:Calculation_1734448864551047170:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;film count &lt; 8&quot;</bucket>
              <bucket>&quot;film count: 8 - 55&quot;</bucket>
              <bucket>&quot;film count: 55 - 435&quot;</bucket>
              <bucket>&quot;film count: 435 - 5000&quot;</bucket>
              <bucket>&quot;film count &gt; 5000&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1hki1ac1peadlu15imht81tndqec].[Issue Label (group)]</column>
            <column>[federated.1hki1ac1peadlu15imht81tndqec].[Film Era]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1hki1ac1peadlu15imht81tndqec].[Longitude (generated)]' field-type='quantitative' max='102483297.69311807' min='60737530.176744349' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1hki1ac1peadlu15imht81tndqec].[Latitude (generated)]' field-type='quantitative' max='13136732.791128431' min='-10717992.570331544' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1hki1ac1peadlu15imht81tndqec].[usr:Calculation_1734448864551047170:nk]' />
              <lod column='[federated.1hki1ac1peadlu15imht81tndqec].[none:country:nk]' />
              <geometry column='[federated.1hki1ac1peadlu15imht81tndqec].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1hki1ac1peadlu15imht81tndqec].[Latitude (generated)]</rows>
        <cols>[federated.1hki1ac1peadlu15imht81tndqec].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{C6FF027E-3EA9-4C4F-BB52-A6DFFD328D4F}' />
    </worksheet>
    <worksheet name='temporal_issues'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Temporal distribution of social issues</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='intermediate_predicted_full_dataset' name='federated.1hki1ac1peadlu15imht81tndqec' />
          </datasources>
          <datasource-dependencies datasource='federated.1hki1ac1peadlu15imht81tndqec'>
            <column datatype='string' name='[Issue Label (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[issue_label]' new-bin='true'>
                <bin default-name='false' value='&quot;Social Issues&quot;'>
                  <value>&quot;crime and corruption&quot;</value>
                  <value>&quot;disability&quot;</value>
                  <value>&quot;drugs and alcoholism&quot;</value>
                  <value>&quot;environmental issues&quot;</value>
                  <value>&quot;feminism&quot;</value>
                  <value>&quot;health and disease&quot;</value>
                  <value>&quot;immigration or refugee crisis&quot;</value>
                  <value>&quot;lgbtq&quot;</value>
                  <value>&quot;political issues&quot;</value>
                  <value>&quot;racism or discrimination&quot;</value>
                  <value>&quot;socioeconomic inequality&quot;</value>
                  <value>&quot;war or revolution&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Coo List' datatype='string' name='[coo_list]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Czechoslovakia&quot;' value='&quot;Slovakia&quot;' />
                <semantic-value key='&quot;East Germany&quot;' value='&quot;Germany&quot;' />
                <semantic-value key='&quot;North Vietnam&quot;' value='&quot;Viet Nam&quot;' />
                <semantic-value key='&quot;Occupied Palestinian Territory&quot;' value='&quot;Palestinian Territories&quot;' />
                <semantic-value key='&quot;Serbia and Montenegro&quot;' value='&quot;Serbia&quot;' />
                <semantic-value key='&quot;Soviet Union&quot;' value='&quot;Russia&quot;' />
                <semantic-value key='&quot;The Democratic Republic of Congo&quot;' value='&quot;Democratic Republic of Congo&quot;' />
                <semantic-value key='&quot;West Germany&quot;' value='&quot;Germany&quot;' />
                <semantic-value key='&quot;Yugoslavia&quot;' value='&quot;Serbia&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[film_id]' derivation='CountD' name='[ctd:film_id:qk]' pivot='key' type='quantitative' />
            <column caption='Decades' datatype='string' name='[decades]' role='dimension' type='nominal' />
            <column caption='Film Id' datatype='string' name='[film_id]' role='dimension' type='nominal' />
            <column caption='Issue Label' datatype='string' name='[issue_label]' role='dimension' type='nominal' />
            <column-instance column='[coo_list]' derivation='None' name='[none:coo_list:nk]' pivot='key' type='nominal' />
            <column-instance column='[decades]' derivation='None' name='[none:decades:nk]' pivot='key' type='nominal' />
            <column-instance column='[issue_label]' derivation='None' name='[none:issue_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[releaseYear]' derivation='None' name='[none:releaseYear:qk]' pivot='key' type='quantitative' />
            <column caption='Release Year' datatype='integer' name='[releaseYear]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hki1ac1peadlu15imht81tndqec].[Action (Coo List)]'>
            <groupfilter function='level-members' level='[coo_list]' user:ui-action-filter='[Action1_952AF86DD50B4ADEAAF3AB3B749E9D21]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hki1ac1peadlu15imht81tndqec].[Issue Label (group)]'>
            <groupfilter function='member' level='[Issue Label (group)]' member='&quot;Social Issues&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hki1ac1peadlu15imht81tndqec].[none:coo_list:nk]'>
            <groupfilter function='level-members' level='[none:coo_list:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hki1ac1peadlu15imht81tndqec].[none:decades:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:decades:nk]' />
              <groupfilter function='member' level='[none:decades:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1hki1ac1peadlu15imht81tndqec].[Issue Label (group)]</column>
            <column>[federated.1hki1ac1peadlu15imht81tndqec].[none:coo_list:nk]</column>
            <column>[federated.1hki1ac1peadlu15imht81tndqec].[none:decades:nk]</column>
            <column>[federated.1hki1ac1peadlu15imht81tndqec].[Action (Coo List)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='17' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1hki1ac1peadlu15imht81tndqec].[none:issue_label:nk]' />
              <size column='[federated.1hki1ac1peadlu15imht81tndqec].[ctd:film_id:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]</rows>
        <cols>[federated.1hki1ac1peadlu15imht81tndqec].[none:issue_label:nk]</cols>
      </table>
      <simple-id uuid='{E58CF859-3484-4265-BEB9-2ABD962D7520}' />
    </worksheet>
  </worksheets>
  <windows source-height='72'>
    <window class='worksheet' maximized='true' name='origin_map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1hki1ac1peadlu15imht81tndqec].[Film Era]' type='filter' />
            <card param='[federated.1hki1ac1peadlu15imht81tndqec].[Issue Label (group)]' type='filter' />
            <card pane-specification-id='0' param='[federated.1hki1ac1peadlu15imht81tndqec].[usr:Calculation_1734448864551047170:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.1hki1ac1peadlu15imht81tndqec].[usr:Calculation_1734448864551047170:nk]'>
          <bucket-selection />
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{67051BC0-C9D2-4F41-A3C5-B7BAB058F165}' />
    </window>
    <window class='worksheet' name='shooting_map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1hki1ac1peadlu15imht81tndqec].[Issue Label (group)]' type='filter' />
            <card pane-specification-id='0' param='[federated.1hki1ac1peadlu15imht81tndqec].[usr:Calculation_1734448864551047170:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{6B11C3AA-7873-4940-A469-867D1EFF541D}' />
    </window>
    <window class='worksheet' name='OriginTop20'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1hki1ac1peadlu15imht81tndqec].[none:coo_continent:nk]' type='filter' />
            <card param='[federated.1hki1ac1peadlu15imht81tndqec].[Issue Label (group)]' type='filter' />
            <card pane-specification-id='0' param='[federated.1hki1ac1peadlu15imht81tndqec].[Issue Label (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{0C6D0C10-AB78-4E7A-A489-B6C73AA38481}' />
    </window>
    <window class='worksheet' name='temporal_issues'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1hki1ac1peadlu15imht81tndqec].[none:coo_list:nk]' type='filter' />
            <card param='[federated.1hki1ac1peadlu15imht81tndqec].[Issue Label (group)]' type='filter' />
            <card pane-specification-id='1' param='[federated.1hki1ac1peadlu15imht81tndqec].[none:issue_label:nk]' type='color' />
            <card pane-specification-id='1' param='[federated.1hki1ac1peadlu15imht81tndqec].[ctd:film_id:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D2477D3A-925E-44D8-87F5-53B9282A18FC}' />
    </window>
    <window class='worksheet' name='Temporal trends'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1hki1ac1peadlu15imht81tndqec].[none:coo_continent:nk]' type='filter' />
            <card param='[federated.1hki1ac1peadlu15imht81tndqec].[none:issue_label:nk]' type='filter' />
            <card pane-specification-id='3' param='[federated.1hki1ac1peadlu15imht81tndqec].[none:issue_label:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{9C7FB905-9857-4A55-ADEA-09D5F28053EC}' />
    </window>
    <window class='worksheet' name='genre relationship'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='271'>
            <card param='[federated.1hki1ac1peadlu15imht81tndqec].[none:coo_continent:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1hki1ac1peadlu15imht81tndqec].[pcto:ctd:film_id:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.1hki1ac1peadlu15imht81tndqec].[usr:Calculation_1693916478540742656:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hki1ac1peadlu15imht81tndqec].[ctd:film_id:qk]</field>
            <field>[federated.1hki1ac1peadlu15imht81tndqec].[none:continent:nk]</field>
            <field>[federated.1hki1ac1peadlu15imht81tndqec].[usr:Calculation_1693916478540742656:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B182E39C-028E-433F-A43E-5BB702292C8F}' />
    </window>
    <window class='worksheet' name='COOvsShoot Locations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1hki1ac1peadlu15imht81tndqec].[pcto:ctd:film_id:qk]' type='color' />
            <card param='[federated.1hki1ac1peadlu15imht81tndqec].[none:country:nk]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{B481F1FA-F584-4BEB-9D1B-62213A22C84B}' />
    </window>
    <window class='worksheet' name='Top 10 COO vs shoot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1hki1ac1peadlu15imht81tndqec].[Issue Label (group)]' type='filter' />
            <card pane-specification-id='0' param='[federated.1hki1ac1peadlu15imht81tndqec].[pcto:ctd:film_id:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{BE088901-E4AD-4B0F-8CE7-06B26A16FA3A}' />
    </window>
    <window class='worksheet' name='Global event &amp; War'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1hki1ac1peadlu15imht81tndqec].[none:coo_continent:nk]' type='filter' />
            <card param='[federated.1hki1ac1peadlu15imht81tndqec].[none:issue_label:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{04BD430E-015E-48F5-8075-4EEF2970DF0A}' />
    </window>
    <window class='worksheet' name='Global events &amp; LGBTQ+'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1hki1ac1peadlu15imht81tndqec].[none:coo_continent:nk]' type='filter' />
            <card param='[federated.1hki1ac1peadlu15imht81tndqec].[none:issue_label:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{EF858B4D-FFE1-42BF-BDD7-79CCFD900548}' />
    </window>
    <window class='worksheet' name='Global Events &amp; Racism'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.1hki1ac1peadlu15imht81tndqec].[none:coo_continent:nk]' type='filter' />
            <card param='[federated.1hki1ac1peadlu15imht81tndqec].[none:issue_label:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{33CFDEB0-AD97-4D5C-A8D4-2D9EC1E43FAB}' />
    </window>
    <window class='worksheet' name='GE &amp; Immigration'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1hki1ac1peadlu15imht81tndqec].[Coo List (group)]' type='filter' />
            <card param='[federated.1hki1ac1peadlu15imht81tndqec].[none:issue_label:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hki1ac1peadlu15imht81tndqec].[none:coo_continent:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{04278364-AC22-4623-B082-8A286C47E916}' />
    </window>
    <window class='worksheet' name='GE &amp; Env Issues'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1hki1ac1peadlu15imht81tndqec].[Coo List (group)]' type='filter' />
            <card param='[federated.1hki1ac1peadlu15imht81tndqec].[none:issue_label:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hki1ac1peadlu15imht81tndqec].[none:coo_continent:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6D4D16FA-1C36-42BB-8624-76EA9CA94D9E}' />
    </window>
    <window class='worksheet' name='Sheet 28'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1hki1ac1peadlu15imht81tndqec].[none:coo_continent:nk]' type='filter' />
            <card param='[federated.1hki1ac1peadlu15imht81tndqec].[none:issue_label:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{B90D625C-C8A2-4732-B114-821E065A11A6}' />
    </window>
    <window class='worksheet' name='Sheet 30'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hki1ac1peadlu15imht81tndqec].[Film Era]</field>
            <field>[federated.1hki1ac1peadlu15imht81tndqec].[none:releaseYear:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{79E4C5C5-831D-4A60-9DA5-0990230C8C8D}' />
    </window>
    <window class='worksheet' name='Sheet 31'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1hki1ac1peadlu15imht81tndqec].[none:issue_label:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1hki1ac1peadlu15imht81tndqec].[Issue Strength]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hki1ac1peadlu15imht81tndqec].[Issue Strength]</field>
            <field>[federated.1hki1ac1peadlu15imht81tndqec].[none:film_id:nk]</field>
            <field>[federated.1hki1ac1peadlu15imht81tndqec].[none:issue_label:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{48310AB5-DC42-41E6-A90A-8B2DED1721EF}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='COOvsShoot Locations' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9V4xcWZrn97s2vE1vyaTJpCu6cqxidfdM9/TMds9K0Kwg7M6sVoA00Jv0
      KggCVjuLFRZaCDKjRz3JYBfbszszve1ddRXLsWgyyTRM78J7e8PduE4PyWIxmTe7qlhtpmfq
      DwTIjIj//c69x33/73znhOA4jsMX+AJ/RyH+pgvwBb7AbxJfdIAv8HcaX3SAL/BbC8vocf/e
      PVpd48hnjmPS0rqfeA3hCw3wBX5bsb/8AcL4dYziJqlKh8mxQQTbIpXcR/GKpLMCFy4PIfQF
      VNXL3NzskWt8MQN8gd9aDE6cZHdlgZrWxTQMKsUshWqd2PA4gVCU4biPmZOTdMopPLFx12t8
      MQN8gb/1SCaTTE1NIQjCkc++6ABf4O80fqUu0Nb6Bs1qjly1BUB+f51Hq+uUNP3jL3VK3F7a
      OsJN7mzTbFRJZEsAaOU0iyurpAv1j79kdLh9f9HVdrdZ4bvf+S6do/roCW5/ePvYz9756fe4
      u7TxC+7uF8My22xu7rO7u/f4HYd3br3zqbiNYopcrf3k73JylVvv3iZX67jbMnr87Iff5dF2
      6rnLC1BIbvG9H7+FaR8eE+/Pz/9C3u7qAt/61r8j/1SZzWaWu6v7v5C3fP99ctX2ofe6zRKZ
      YuPQex/eeof79+dxr0qHjfXNX2jHDaX0DsubCeTPzPwMeHD3Hq+8eIo7K2kePVrl3LlZKqUC
      8tAMxaV3OHv5FVK7a8y88k1eu3yYu/bwAbNXL3D3/gr/z+oqZ8+do1IpUzf8BHoJguPn0LI7
      RM9c57WXrhyx/dPvfo8Lv/v3WH7vB3z7g00uT3hJNeBsHPLEsfI7OLEJHr7zPUav/yf80e+9
      fIh/+4N3efF1hf/pf/4hl07FWS9aDAlVukoUj9FiaHSUWx884L/7p/+MsajviH2r3+StH/6I
      jVSS/+j3X+PnC/vMjcf49rf/GlX18o1vfoOjE/IBSskNFjNdlhbmOXfhEpsr9xibuoRpd/lf
      fvBz/tk//+dEvNKT7z/68OcU2w5ido9/+3/9b1y+/jIb+R6jngbZosbQiVk82i7+ky+wd/ce
      46fOEPArjMy9ypeunnpynY3VJbb3Nf7Dt/5fNjI1rp8d5+5OjXPTcZbu3qItD/Lf/tf/xZHy
      Tpw8xU8/WOb+rZ+hSiLFTo0xv5e/urVC46vX+d6b93j1xsuEAyrf/MY3EAUBHIv3br1JLNsh
      INgIRpV3b73HuRdeIN/z4WunuXjlGj959x6XT59GDnqpZjdZSPb47/+b//Ip6w73797j4fs/
      oumZoJlcZGTuRfKL7zL38pd484dv8j/8r3/OsO/w005vrvF+pvWrnQFOTcf41vdvMzU2xBs3
      X8Ox4eqLL+OVBXz+EJFwANUbIBTwsvHgAQv3F9AMC4DTp8f5i7/8PuMT49y4eRPJsZm7dJV4
      0IPXGyAWDSGrXiKhIJntNRbuLxwaTebOn+bH3/0uu5kifq+H+NgM52ZGKdWaqJKAKMnEAhIN
      Q8Xp946U/czF67z4whyvffl36GpNvKrM5JlLTA+H8XjUA/7AIJLo3owFUWby7EXOTA6SL5bw
      eVXCkTARqU1k/NyxjR9A8frx+zzcvPk6lmkSCEUIBLxUigWCAT+mdXiEnjx1lvTWCuVak0Aw
      QjgU5Gu/9zWmTl3g1RuvMjMSpK7ZiLbOtZtvEItPkknsc/XCiUPXiUTj6K0mWktDUX2UyhW8
      HgWP6mHi1EVOjERcy+vx+hkdGSGkmiys7OKLjPDlm69wamKYtm4yODjA9bNDlHTvQeMHOuUk
      Uuw0/XadzO4jmrrA6OgQ4ydniQZU5q7cwEePQMCLL3jwzIvlKl5VOmR7beF9bG+ISrODLNi0
      Wi28GHTlAFbf4MWLJ+m7TB0ef5C41AfnC/z6YNvOj7/3XUe37N9oMYxWyfnBzz9w7GOKsbhw
      39GtX67Ne+/+zMlU27/ciz4Dy+g7Cw8WPxPniQjWNA3nl6iHv/99g3rdfi7uV74iMzHxfJPT
      57kHQRBcIwVf4G8vnmiAUChEu1ZAswP0tDInT56Evsb9tX0GY4OcnB57Qrp37x7Xr1zinXfe
      Y/bSJRC8TIzEDl04meyQyx00RtkD0+Mi+/s2Q8MChYJDZFCgX3fAJ+CVwadCTXPoduCNN1RC
      ocNTHThsbm4xOzvL/tYjNNNHUOoi+CI0Gi1OTI0SjUSx7aOdzjK63J9/xIs3XiKxvky62mM8
      oiAGB2nWqpyamSYUjiCJIqJ4uONZps5eIsuZ0zPUihkSpQ5jEYlGX0HXKkydOIk/HEF1cYUc
      x2Jra5fZ2bP0tTLv3N/kpeuz7CZK+AWdkcmTeINhfIro0vEc1pbmGTpxgZjX4b3b84xPjJBM
      5RgfHWJgZByfz0fI73WpVofs3iahiTmCis2Du3eYu/YK2f0dgl4R2xsn4FGIRkIuXChn9xBC
      4wyEFHY3t5mcOcnSg4dMTIzStRXiYT/RiLs7VC2kyDVMLp49ydbaEnJ4lGZ+l9GpGSpNnfHh
      CNFI1JXbrpfYTJa5evk8ye01dCmE0cgTGhyj1mhxYnLkWK7RbbKwssvLL18ln9giWzOJeQxU
      fxCtLz2x++wAeUgEV9Ob7JhTVLZv8df/5l8zcWqWZrvK8naJG7MDlKwgAb1KgxCzkxF+fusD
      qtU8S/s9rk0LVIUx/qt/+IdHCheOiYSiAuOjArGoSKFg0bEFBnwO6ohI1OsgiAKROOxsWq43
      WMkmWEtkmZ2dJZVIMXLyNAvza8ydn2Fzr0ijnOPKK68T8ipHuNsryzR1A9NyODV3ic6jR3hU
      iVRqg/18j1ajwtzllxmJuzUIka5+sKSeTqfZ3UnQOnWOAC3S2QKFUp3Zi5eYHht0LXdPP9AX
      pUQKx+thaX4BNTqGVt5hN1fnzNmzzM5MuNRog740QDqxjTIcQesZTJ44Q7/Xp17JkkhlGZmc
      4drFM652g1KPUgd89h7K8Bkezd9mJ1/n/NQAhcoWoYFJXnvxBdwmvIDikGzpDIQUBLNHJpdi
      MB7nw4er+BQBXyDKG6+/iuTCTRVq2M5BHQ4MDpHJbiEET3P39ntI/jD5lIebX/kyHhfyXipP
      QLbQdId0KkVf9qPXayjlMtWOQ72Y5dqNm4R96hHu9k6CE3GBVMMin0jhHz5BKrWH4Ytgdtrk
      Ux7e+MqXUZ5xLA79GR+d4sMf/1vkyBhnL19D6veIjp3kxFAEXdcRRZG+YREKBRBlHwNRL8HB
      SeIBiVS6QK9V5/7CAvcfLh0yIghg2RD0C/jDAkEfDMQEBkdF/B4wug7ZnI3jEQj5XeuTar1O
      rZAlX64yMjZKMp1nZDhG01B49co5sDqUqk1X7sDQEPSq7KTLNApJBidOUW/W6QshfueVi6iq
      RKFYcOWaeofVpUX20lmGhkcJRofxmE0ausJrL79MKKhQKLhzHdtk89EKu/v7EBvGLCTxxEfI
      53Nce+kNhqJe8oW8+w1LPkrJdURRQRcUvI5OJpfBExrgxRdfYWIwRCp3DBfY3dljZ2cLzZTZ
      X7lLzxTQtQqTZy4wMzpAKpfHPsZbTCeTrG1s0qhX2dpcp1Busrq2xsuvvMrZE5PUiynax4SX
      JbNLudah0azz7jvvIPlipLfmmb3yGufPnsWoJah23Qc5n2yzm66gd5o4OFj9Ho4kEYhP8Mrl
      c2BolGqaKzcaUFlYTyMaGiPjoyQTCRwHxqZnOXf2LEY1QaV71Dv4lS2E/at/9bEL9Fnxp3+q
      cvHisy7Qp4ObC/RpIQjCERfo14UvtMevB882919ZB8jlevT7z9cYUykDTXMfJT4J5875mJ4+
      OkV+WvymGuLnsfsrqsJPxOcJGnzeMv+y7Ep/9md/9mcf/dFplKn3HGrlIuFw+EAEr2xh2xAO
      BZ6QHjx4wGAsRL5QJpvaodi0GIqHD11YUUwCAQgEBDxKj3qzhFdsspNOMHd2hFpxC0ex2d1Y
      ALlPt98iHpWJxz2k0wbVqk2/76DrJpvrS7Tbbda31vAHxinldqk0TTB08uUGuVwWx5GxbZXh
      YYWBAeVJ5Ry8YH9/n1gsxu7GMo92Mhit0oGvmUzi93lRPJ4nMepnkU3towbC2D2NxdVtRoai
      JFIZsukUXp8XQVGRXLiObXD/wzuEBkbwyCJ7+3sIZpfNZIFGKYvi8WKLCork1pAcUvt7+EMx
      sHoszD8gEPCxvp1A1ypYoortOCiy20zpsL+5SkMXiAS8PLh/n0AkSj5fpK9V0AwR2zLxeNwH
      isTWKiWtTyyg8sEH79OzRJqNOqLZJV/rImLj8XhcO0CjlGU/X2MwHsHoNMiWm2yuPERWVTKF
      Gqos4PF4XO32Ok0KlSbhYICVB3dIFppEfVCotUhl8nhV+Qn3Wbum3ubB8gZjYyMUUrus7+UZ
      ifkoZxOkKx1USThU5o9ehzpAfmuejarC1tJbvPn9H5EpaaSSm/zlD27RKe7w3uIWK7ffZjVR
      5sqZQf7p//gvOX/5Msntdf7yr79NYOQ04wMHQtI0zY8LZxjkSiUq+TSeYJyRwTj76Rwtrcn5
      M5MkM2Uy2QzVSpWRiUkKOYt223n8QLdJFctMnXgB22gTjg6R3HtIvpRDMJtUGjVKhSy63iAQ
      HmFq0ks8fniBu9ss89PbD3jh/CyxgWGa9Sp+RSKT3mFlp4jZqhCIjeB3EdBmT+P927cZmjzL
      +sPb6Hgw23US2QzZTJJSuYk/FCEcOLoajONQyCTRBS9+ocfbdx+i2DqJXJlePclutoXq8RCP
      hlw7QCmbQI2OITsGvbbG+n6G4SA82k2Sz+YxHZmRwdhRuxy4gqVyjaGwwN37G0iqF93o0agW
      2d3dodWDidEhVxHcadbYz5aYOXmCWFCla0lozTrdVp3t3V1qjQ6Tk+OILh1gY3uXfq/N6Ogo
      j1ZW0LoakmWwtZOkUi9TLtWYnJ7Cbf3QMEwKxQJDg4MMDQ1SqzeppLfYL9dJpHJ06hUGRidQ
      ZemI3c31dQZ8FnVlmOTqA0IDI5RzaYzKFtu5+hO7zw5Uhxze6PA47//gX0NgiOm5Cxj1Gt7Y
      GBOxIOVSgabWoqF18Pk8CILIzTdusrezTavV4oUXLrKzvsjdu3dJPpPL0W9rLC8+JBAdYWd3
      h7rWpF0toFsSqUKDV199iYtzZzGaafK1w6uyHl8YVehQKmUQ1Si9rsbgwAShQJCmVqeji8ye
      OY9ttqnWK66NoVgs0W2U2c8WaRSSxMdP0mg26TpBvv76CyBBJpNx5darZZqNBulsllB0gHoh
      TSJXJJ2rcfPGDXxegXQ67cq1+z0a3S6tRpnddJ52rUhF0zGMPi+9+hXiIYlU+rj8HZu9zU12
      dnfIpve4/2iTiE9hc7/IGzdvMhbzsZNyt4vj8O7bbyOqKrVqBUcWaTerLD2Y5+S5K5wcirCd
      TB0rghvNJt1el0ajQTpfY2IowNryIpGxU5yeGqeY3kE7RgQLRodSvU2jUaFSLpBMpGh0egxP
      n+b82bN0C5sU2+7ubataYmFxmVK1RjqZZGJimGK1Ts/2c+PKOYxOlVyl4coN+RQWN9M4fY2x
      yXG2t7aolAtIsZOcO3uWbmGDUufXKIJ7vd5z+3l37/YoFJ5PA1y96ufMGbfY+N9s/KZ86c+D
      30YNcOQ6v6oO0O/3n/smu114yoP6TPD7Jbze54vktFptmk33MNsnwePxEDlmYemTIAgCsvz8
      eYmfJ/L1eSCKbgt4nw5/UzrAIQ3Qbze4e3+B8MAoXuX5wpAf4aNKEQQBxzLIFcoo9NnJlBmK
      R8gmtqn3HBSrTb3TJ5cv43kscjweCZ9PwucTn7xsvcLyxianzkyilfdpmxbxgEmr16VaKxKN
      eIhEvMjy0VFJb9WZX1pnfGyUUmaPRKFJZneVQqNLrVzC7/MiKwq9Xo92u4Nl2ViWzerSAl1L
      plGv4ff56bQarG7sEouFyWTzFHMZZEXFdERUWcLv/0gHOJRzaQRvmN31ZfzRQURbZ2FxjYFo
      gHK9RTmXRPH6MG0JVRaRJOmIcN/deIQciKGKFg8Xl4nHI6ysbGDqGo7sxbYPRLBbY9peW6LS
      MolHQ6TTGcI+kbffuYOqQM+Wccw+quougtN7myQKdYYifm7ffp+e6bC7tY1HEalofSRsVFV1
      nQG6Wo16xyDgU0nubGJIfkytiKabZApVPLJ4iPv0q99psLmXY2gwTmp3g3RRo5TeBdlLJls4
      SMx7LGSfhWX2yeVLhENBmpUcqVKLXj1Pr9cjW27hkQXX+z007DSym3znR7eoVMpYiofKzjrj
      Z+ZYfrjE9VdvsLGdYCIi0pLi/ON/8I3jW/8zMPo61WadSlHHcGxgikAozG46T62bIlULYzst
      cpkQN16/gdclFp/a2UD0DyEBuzs79MQQmqdLoS+SL7Yo5zNcfeU1Ah6XkVQS0TIJGpevIooi
      yWSSP/jdV1h5cI/318vUSnnOXb/B4S5vk9hP8PLkKTLZImOjo1gWyHaX/b190qUSeqVCJl/m
      1Ow5IsHDIthpF8hIAfqWl83NLQa9NsXUDtnJE+j1CsW9R6zt5Dl7bpazJ1226xlNmn2VxuY6
      J0dCJPeS5PNZ/LExtN0E7c0EUydOc3H2xFEuDttbm1x5/euASbFYxt8t0FJD5DJJKo014sMn
      eenKOVcRvL21wYmLryIqXq5cnCPbNDG0OvcXGziORSQyzI1XrrmmEhuGSaVWZzDip9LqUW6s
      IdS22XFm8JhVsoEwN2++huyigjd3EohYtPoOWxubnLn6Ku1uhZWHdyk0LUq5MNdv3MSvHh2c
      DV2n0qgxMT7KTiqPY1tookKpXaWv1ckEwnzpjRu/WAQjCJw+dwn6Ji9fnWVxZYXd3T1On50l
      sZPAsG32ttdJZt1XPo+D0e2w9GCBdrdDvtSg3mjy7ltvIQl9soUGYjDGpbkz9Co7pCtHU5MB
      BsamKO2uka3UMUyDTqtCoVylZXj50rVzdFtlUvmyK7ejaehml3ypSlPTaLc19ja2OHX5db7x
      xmUMx2R/P3GYZFuMjI6ytbXF7uYayWyB5PYaiXKbWqVEMVvhpVdeRJYh7SJk08kkO/sZ0nsb
      yJJAVevh2H0q5SLzD5a5duPLhIMSu/t7R7gASCqF5BYIArVGE9sx8fjDNMtJzr7wGiNhmbWd
      Y7iOw8TkFGtrqzTqNbbWVyg5QdTiBiNzL3JiIMTazi7WMV7IxMQUa6urNBoNEpkS4zE/bb3D
      idmLnJ4YJbO3RrPvzm2U88wvrdLUNGqFDO1WnWylQzA+yvkzZ2imVsi33PWdKpjsZ8p02k0m
      pydZXV6m2WmjhEd5/do5Os0CqYJ7oMPotllcWCBVqODobYr1Llolx8yps5w7cxotuUSu9WsU
      wYZhPLef93l8S3h+/7DRaFKruUcZPgk+n5eBAfeQ5CdBEAQU5WgI9tPAcZzfSg3wNwW/sh1h
      lmU9d8XIsvzcD/bzRCb8ft9zi1FJev7G8HlXgUul0nPzBwcHf+uF7OfBIREMkNzdpG0IhNwW
      dj4DDOPjQLFjmxRLFZxei+WtBOOjwyR3Nyg1dIrJbXQbKjUNjyKhKIprI86ldlle32F0bIx6
      MU2poeNXbGpah3yhhEdVjuUC5PN5gsEg1UKatd0s5cwuZU2nWavi9XqRZBlREJBlCVmWn7z6
      nQbzDxaJDo0jWx3SxQYeehQbPbR6hVAogOTxosjPitjHK9Bb64j+CB5FYHnpEapokizU6dQr
      +PxeTEFGFt1zkBLbG8j+KIpgsbyyhk8VWN/N4OgayB5sx0YSRer1OpZlHbxMg3yhSL2Upeco
      KE6PD+/eB1lhb2cPGYNG18Y2D5Ibg8Hg0edlG+RLNfweibt37mAKMplUCp8qHIhgwT72Weud
      Js2Ogdcj8/D+bZqtDmtraweuXLOLRxFQlAMx+izX6GrspAoMxCLkU7u0LZlWOUOzd9B+vB75
      CfdZ2Gaf9c1dhgYHaJTzZMoaWilNR9cp1zuH7D6NQx0gvfoBf/XmA8Di3R9/j2a3x3d+/Db7
      qwu8+fY77GQrB6vF+wXe/PF3SeaKFAoFKprB+Ej80IWfXgnW2xrJfJFCNkEwOsxQPMK9D99n
      YmaWxYU7hP1B1rd3aTaajE6MI7uMpoFQmGatwtDoCH1dJ53JouV22c4VWNtOY3YaDIyOo7hw
      jU6N7/z0Pa5cPM/D+3eIDk8wN3uS/N4q7y0moNcgPDiGRz7aCGXVC/0OnnCc7dWHbKxvMDx9
      imJqk43NDSr1DqFojIDvaHTC6JT56dsPODt7huTqPNmWw0gsyKONbWq5NXZyOoGAn0jIf7QD
      mE12Ug0qlSIeocvS4jqeSJTM9iaFap5EuoAgeRmIhtC0j0O3xcw+K3spqvkcmXKNmZMzBBWb
      bDpPvpgmU+lRzifp9mF4ME4odHQVem9zne1ckZmpaSJ+mb3dXRJ7+6wmcjQqebS2ycT4iGsH
      aDVqFGoNBmMxBgciFKpdzkxEebSVJJtLU6tpTByziry6uobZ0wgMjDF/5z32U/vsbicJB2Xu
      r2zTbzcZGj1oH89ia3UF2WrT8Y+RWFsglatQySewTZu9VJJaTWNycvyIzUNX8gWjlDM7rCwv
      c2/+AZlMitNzl5F8YSYmJlDtBvfvzLO+vs7A6AQtw2H5w1uMTrnksz8FyzTYWl8lGh/j0eoj
      mlqLiYlJVlcXmRidoN6H82dmaBU3SZbdj7Mzu02UYJxuq8XD+7cRJYFMsULL9HHzylm0WoFE
      tujKTSVTdLUqyXyZiakpHq2skNze4dTVL/ON1y/RM3rs7Oy6cgUcmj0bn2AwOXUSfyDM5uJd
      HN8QX3r9BiI6Ozs77lxJIRxUWFt7hK0Gsap7bBU02p0OL7/2VYJqn63tbfeHJshUCgfiutFs
      YWNRqzfR+z2uvniToYDA8sZRbq5QoJgrMjk9QTAYoNXpkK+2GY75ERybU3MXmB70s7K5i3WM
      C5PJZUinsmitFqlchWvXrxGP+HntxmvMjA2T3FqiobtS6Wp1VtYPsgN2txPMzp0mVdL46u+8
      weypGWp7D8gek+ioCBa5Up1uR+P0qRnC4RjRaIiiZnHj8izNSoZEzl0Ee1SZvXQRU29hmgY9
      vcvE5BTqyGnOzMxQ3V0g+8ki2MEwDARRwrEtBPFxzsVTX7Ft+6m4bZ3v/uQ2/9k/+PtHwmnd
      bveJj2hbFrphoMgytnPgLzuWCaKMbRnIsgo42JaF9Nj1eHZEdBwbEHAcB9M0cBDwKMrj5XwH
      27YQJdl1V9dH5f7oOrb92GcXRRzbxrFtECUEnKN+reNgP37Pse0De87Bv4oiH3yO4Dpr4Rw8
      T0mWABHDMJAlAcsBWTqwZ9k8cbuehWH0kST58f8NZFnCtGxURcZxwLJsRFE4ksZh2zaWZSJJ
      CnBQdkEQ6PcNVFV5zDWRZYXx8bFf+LwOuNA3TFRFwXEcLMtCVhTXUdw0+hiWg0c9EPWiIGA7
      DqIoPi6X9UTjPct1bBvDspAlCcsyESUZx/qoHR60I/Gxq/osHMfBMExkWcJxbCwbBGxESUaA
      Q3afxq8sCtTpdLCs50tnUFUVSXq+hbiFBZOtrecT33NzEteuPX9c4Dch3B3Hodv95ENgj4PX
      6/2tTAH/ZeEZEeyQSydB9uFR3BvC9tYW0YGBX3isBxxOhbCtPtu7CSJBH812D69HpVrM0uo7
      FNJ7KF4f5WoD5fFIKEmSy8qoQLVawe8PUC/nafZsqvkknb5DU9PwqDKKorC0ZLG8bFGtOtQa
      DoosUCnbGAakMzZ9ExzTIVe00TvQ6ToUizblskM8LnDmjHzIJo7Nzs4O4WgMo6uRKzXwSha6
      JVDO5/B6PSDKSI+F7CEuUK1WCQQC4NjUak1Ep0+u1KCr1fF6vViihHzMJpxcah/JF0QWbLa3
      d/F7ZdY2d8E2EKSDdGhZElEU5cir12og+yJ4VZlCNonX52djYxufT8GRfSiig8/nc12R1WoH
      qeIBn0p6fxfZ42NrYw1RkujoNpJ4WAQ//dLbDYr1DuGgn2a1guj1k97bQlY9lOstVFl4wn0W
      lqEfJFt6PTQqBVp9qBczmEhUqjVURUKW3cPFtmWwn8wQi0aoV/LsZ8pUiyn6lkOzraPKgiv3
      UAfIrt/lO++uEvfBX/zFt2m36/zgx2/hEXR+8OaHVDIbfO/Nu3jsOncepbgwO3NsB3h6HaDT
      0iild+jIIRrVKkMDMbRmg0Qqi91rsfJojWypTLvVZmR0FMXFBWpV8/zk/Xkuzp1l4e6H5MoN
      MvtbREJe3ptfx9bbDIyMsb9rk81+PAPIXoHREZFQRMTp2LR6EB+QGBqW0HswO3fQ0Xodh7Fx
      kdOnD3d8o9ehnE3RU8IkNpZYX9sgGvFT1rrM37tNrdEjEh/A73GpVMdkcXmVqclJulqTvXSG
      cjbFViJLNbPCbr5POBwmFHBJ3jM1VreyVGs1PE6H+/MrVMt5+mqEcvIRu8kisuonHgm6PH2H
      yt5Dap5pwnaBH769xIDYZrMlYtSy7Ozs0Hc8DA/GEDg6Eq88WqVSrTA5EuGd9+7SqJRJVpo4
      eoudvR3aPYex0SHXQXB55RGVaoWpyXEK6w/pxUYxqlXu3rtHsVymqXUZHx917QAtrUkym2Vk
      aIiV1VWqlRIBr5eV5Xke7eSwem0GR8ZcV5G31x/RbZYxwxNsP/wQX3SI8ZEBVpfuk8gVaDbd
      7R5qZYrHR1ersbe1wdLDeVYTJUbDfhYePuTBw0XWd/bx+zwsLz1kcWXF5fbd0a4WyHdFAoJO
      IplG63RZW1khHo/Rt2wGJk5yZnqSWmb1WBG8n9inXilRrjexbIu+3mF0dIxsVeeVizNUi0n2
      0s+sUDvgV2F338J0Du5WUAQ6DZu+4TA0KLC5Y+PxwPCw+yjcbzfYztUJSDbT0zPIiopj9Ejm
      a9x85SUss8XGxvFH8zUqRfLFIj3TJp3cp62b6IbO9Ze/glfqsrq25k4URDpaHWaOXVwAACAA
      SURBVByHVqcDgo0nOkwtscrpS68S81o8eLR+rN1uu002l6PT0/F5RHarPTylDQZOX2Y0pDC/
      soZ1jKdo9bv0TZuW1sQRBAxRIiJ08cQnmBiMs706f6wIxjbo6gbtTodOp0U2k2FxZY0bb3yF
      E5OTFDfvkjlGBDuWSSKZoqG1MPUufdNiafkRsy+8yksXZqjk99jPuq/2y5JItd7C0LuMjo+z
      trpGJZ/jymu/x4mJSYobdz6NCIZ2S0OSlQPRpaiIHAhH03aQJTAtkAQHR5Dw+45PO26320+E
      lKH3aLbaeL0eerpBKBSk12mBqOBYBv5gBAGbvq7j9fvxejyuotA0zQMRZvaxkHGMHqoviCg4
      GH0d1evnpz8xuHfv4xCsKILtgEcFwziQhM6B5kUSDu5HFAEHXn5F5vd///BuJcvsU6s3CQSD
      iDgYNgiWgW45hIMBsE1MJLyq4iLcLarlKt5AAEkQ0FotQqEQfdMi4PUADrph4/e575BqtzQ8
      Xh+O49ButwkG/LS7fULBg/d6unFMHTg06zUcScXv9aB3O3j9AbRWm2gkiGUL9LpdAsGA6wzQ
      73WxBBlZhF63jccXpNNuEQ6HsR3nMTfoOgOYho5uOKiKRKelIcgKRq+HLxRBlUX0Xg9/IOA6
      A+jdDs1Oj3AoCLaJI8h0WxqKz49XVZ7UsdtpfI5to7UP3CfHMujbAl5VQZZlTNM81u6vTATr
      uv65VoKfd3N6Pu9QrT6f3Xgchoaei0q1arG19Xw53MGgxLVrxxyH8QlwHJfI1WfA50mj+Ein
      /Tbj0DBr9nv0+haIEkG/F7DY2tzn7Ozpz3xhtzyRbqtB2xAYjIVxrD5a16TTrBKND9Dq9AkH
      vaiq+17TXkej3OgyMTaMVivjKAEEo40tejCMPpFwEFX1MDYmMD5+OILkOBZNrU0kHKbX0ai3
      DUYGwjRbPfReh2g0gqKoT1ZTP4LWbOD3B8hks4xPTiFYfcq1Fn4VupaEaPeJRKMIkkKrZZFI
      9J8qbw0TBVNvEoqMIToGhVIGvz9Ap6cT9Pnw+SM4SAwPKa4doFLME4wN4VEkWs0GHr+fblfH
      MXp4AmFEUTx2T3Apn8UTGiCows5+iuHRMRq1OvFoAJQAquSgqh7XDtBqVOmjEo8EMXptDBRq
      5RLxWBjdlvB7JFTV4xqp63c1ml2bwXgErV7BELzoWpXY4OChOnaD2e9RabQZGRpAq1foo2L1
      NEKxAVpa++As2WO4jm2SK1QYHxvBcRyazSayYGMDuikea/dQB6gllvnLn90n2bD5/WtTdNQo
      5e0NKvUKkhLg5WsXXY1/Wiw+XCDX6PNHf/j7bK6tUe3WKSbrCIqA6PUzMTLKlcsXXdNse+0W
      D+/NM/CHf5/79+6gCypWu8PpM1PcX8/xwulxLly+guqySthraWzuJnn56mW0psb65h6twRDp
      YoqNVJ9XLkwxd+kqh7NsbXY3Vpg+f53k5gqGGsasJGhoLSKDw+zu79GvNxgYP8GFF14Anoow
      OBYb67cZnTxDan+H2GiHUbVDtu5wLhyjUt6mapQwpVGmT5xnGJckOrPF2lYCf6jC1fOn+flP
      vsOVN75JpZSjXdyjK0SYnTvPiXGXA7kcqBYLFBMFbr54CbNVZj8tY5Z3WNpW8Dh9pk6eZ+70
      pGs9LT2YpycG+eqXb7By923avlFq6RT4/HgUibHxE1w6734g16PVdVq6xZdee4V337nFxevX
      WLj9EGQBNRBgdGiMa1cvusbyN9bXaLbahKI30bQmu3t7lKttREFHM31cODXBpcuXUVzqeHdj
      jXqtihgeQqztcXc1gWpoROIxKi2dkaExrl05avfIlaZOnGYgGmHt0TIPl5aQPGHW7ryFJ+J+
      8tlnwamZg6hRr9chkdgnm8rgyApjUzNMjY6QXb9DuuGeZ2taJqII7U6X0zMz4DhIski+0ef6
      3CSFzA47Kfc0bUmS0WplGq0OhWyC+Mg4e/u75GoOv3P9NNV6hfXNo6uqjmVSqdaQZJlOu41l
      O9j2wUKQ7ai89NIVdL3N2tpRMSpKEsVKlXgkgICN6R1E0nZoGzbRgZNMTV9HEnWSqeNEMDiW
      hWNbpPa2qDVa1LUetUqZ8y9cJyz3ubd4XCDCwXJsbMuib9mYcpDpMDTEEF+6/gJDPpEPHywd
      K4Jtx6FvGrRqeZL5CtlcHlESOHl6luFoiPWlu8eLYA4WDnu9HrIss7m2giMrTJ48xfjICJnV
      948VwQcLgw49XSed3Gf05BynJweIjZ7iytlJCskNdjPuIlgALNtG7+ts7+xSKOaRJAkxepKx
      4VEyK+99sgi2DJ2+JdBpa0iigCArSLbOv//rH/En/+Qfo7qdhXcM3NKh21odExWPKuL1eOn3
      dRq1KuGBYQTHptPSCEdjyJJ0RAP02hr1tk40HKTX0VD8EayehuQJoUjQ67TxhSKuuUD9bots
      oUxscBhHb6P1LCbHR+kbfQTA1LuIngCyyFMukE02lUYNBNG7PQYGBxAFaLa6eESbPjJhvw/H
      NtAtkUZN5sMPP24VvW4dR/Sgd5uEQ3FM26bdbhIORhAkBccyEQSbrm4yNRnmm988euZlrVLC
      H4qAICJh0ev2KNcajI2NIgrQaveIRkKuq9flUh5PIIby0Q45s0+uWGZsYgJBEGk1m8TiMSyX
      vaetZg0TFa9HwqPIGJZDtVxmcHgY23ZoaU1i8TiqSzy/32vT1h18HhlT7+IoPrrNKtHBUbBN
      2q0WkVjMdQawDJ2a1iXo96I1qpiCiuSYB/VmmYfq+Fk4tkmp0iAcCuD1HrQtU+8iKD4kUaDV
      ahGLxX59Ivjz7gd4XnzefarPKwo7HYdi8flWvjVN4OHD57tnrxf+0T/6zewn/tuwJ/jQk7PM
      PqYt4lEP3u42K+RKdfzxUUZjAdcLfJZCNhs1On2L0aEBWs0GkidAp1nF6w9iOQI+r4IiH+Sb
      PMttt5o02z2Gh4Ywem0sQcHSO6i+ALquHxxupbhzHduiXK0zODiAqXfpGg4eyUG3DvYrBwJ+
      JEl23ZzuOA6dbpeA349l9tHaOkGfgtY1ELEJBvwgyYTDAuGwcpTb6RAIBHAcm25Xx+uRqTXa
      KJJw8L4okUo4vPvux66f4gHRAdULZh+6PQgGodMFnwcMC2zzILwbCMAf//HRFc62dvB8VdEm
      XywTDofpdHXCAQ/IXiTBQVEUVyHb67SwBAW/R6ZQLOIPBNF7B+HJg/3P4rEbeIzHzzcc9KE1
      6sjeAO1GjXA0Sq9v4fMox3Jty0Q3LHxeD22tjm6JCFYfXzCErvef1LEbHNui1tCIx6J02xq6
      JWD2Wnh8ARxBOtbu4dOh9xZ5Z61GNb/PS6/e4NYP/4rh01eYPtHgO8sr/PF//ieE3Pbcfkro
      vQ4Pltb5xu99lQ/ffxdffIJyapPJk6fIV5tMT0xx8cKs6/Ro6D0WHyzw1a//ActLi/QdAa1c
      RlSg2Ja5OneCcxcuoLi4aZ1mnc2Hd3BufpPMoyUaXQu7U+PEzCQ/u7PLa5dPMXfhEh6XgwBM
      vcODpRXeuPEqG6srlKoapm0wOjrGo5UlJqbPceXqJYIuh2o5jsm9+QV+58tfottssLKTQDZa
      OP5BKnv3EKLnefHaReBwdOLsrIjiQL7mEPVCqgwXzgs4BjiPcxMtE9IJG91t0nEsFh8+RPJH
      eOmFOXJ7a+Si0+RXFxAHR1Fsk5kzFzl1YtQ1lr+0+JA+KjdfuUY1n2DP8tMtJGih4vHITE+d
      5tzsSVfuyvIS9a7J777xGrffewf/wDiy3iBTaeMLBZgcm+SFi3MuTNAaNXbSBa5fvsT8nduM
      nb5Eu5QkWypT1xVemD3B+QsXXFeC9zdXyeYLnH31axilPPOrCa6em+LhgzsYUoCJ0QO7v3Al
      GKDXLBGLD/Dmj34Mvgg9rcbW1jarCwuUWu77dT8twj6V07MXMUwDQQDLaBOLD2KgMjIwQGL5
      vWNFcCjoZ/rUHIJtIsoKsmCDJOOPjXNpZpTM/hrbSffTkvvdFvLAFCGxD6KEqkhYlsVmusEb
      l6cplHI8Wj/6Q30AkqwiCzbtbhfTAZ9HwbQsNvczvHj5Em2txNLyI1euIIj4PDLtdhtB9eIY
      XfS+yc72FucvvYJg1Fh48NCVK4oOogB7CQdFAcuCatlBkCGVtNFtuHDuOLfJQVa9iDjYgowS
      HubciUGCPpWZM3NEVZt3780fK4IlWUGWRUwbJDXAC3MzeH1eZs6cIR7wsTT/3vEiWJRQFflA
      X4kCVr+H5Aswc+oUg7EB9hdvkT5GBHt9fvq9Dnq/T3xggO3NTURFJT4yzfmTI6R3VthJu+9+
      s2yHoN9LT+8/vgcJ0bG4duNrDEQH2Hv4NplPEsGm3qXV1RFEEQGBZqN+sOInCLS0NsNjY6gu
      m0bc8PSOsI+gd3soPi+9Tod2o4ocjKOVc4xMzeBYBo1ajcGRESS3NNt+H0eUMPo6Vr+DIfro
      a2X80RFUWaDTrBOIDeFVjgroTrPGbirL+OQJArJFvevglwx6eAn5VfrtJpI/SsB7VNQZeput
      rT0GxyYI+z1UGm3iQZVaxyQeCeL0u/RQibmc6+7YBhurG8SGh1FlmUw2y8mTJ6k2WowMxhAd
      k3rHpNUI8S/+xccd3x88mJq7OhgmeBQIRwWaTYeAF2pNkEQI+A/coD//86OrwdVSDiUQR8JC
      EERkwWI3XeDsqSn6pkCtUmZ0zH0G0OplDMGHRwFRkFBlgZ39FDMzJ7Esm1q1eixXbzeodx2C
      foV2vYoSjFHJZ5icOQO2Sb1aZXjUndusFEkWa0xPTWB2NGwlQLtWJD46hSJBu1EjFB9GlY9q
      D8cySOdKxOMR9HaTrqUQjwTx+bz0dP2J3We9i1+ZCP4obeF58HkEzucVZp/ncTwvV9Pg/v3n
      s6mq8KUvPX/Q4NYtnefMWue11zwEAr/+n7KCX95JevLhD2263R5en+9QT8lnUkSHxz/zYVlu
      YrT7OH+lr/cQZRXbMlFkCd2wUGTpiShzu8F+/+AwJ6OvYyOCbSJKCpZloSjysdyPNkuoqoJl
      GhiWg1eV6ZsWlmmhPpXHc7RiHLqdLh6vD1EU6Pf7Bxt6EDGNPqqqgCAiuHAdx6HX7eDx+RGF
      x1xRoG/aiDgoj7nBoMjXv35UQ+i97oErIxzMqIoi0+n0UGQRSVZBONhw4taY+noPRBlFlui0
      2/j8Prq9Ph5FxBEURMFBkiQWFvpPTuETJZAf504JHMw+snzgfknSwb+icPC548DVqyqBZ2Ij
      T56vR6XX7YAog20iyQrW44O8jkuhsG0LvW/i83qwTANECUPvIcnqkTp+Fo5j0+3p+H0+jL6O
      btiosoAgilg2h9rW03hmT/Bt/uX/+X8zGAvxo5/8HI8i8t2f3MLqdykW0tz6YIFz588d+9Og
      h2/mqL+1eP8OlZbByFCc2+/dolhrsrezia13uLe8hm3B4EDMPRVCq/Lvv/8zLl88x/tvv8le
      pojZqrO4NM/91QReCeIDA667lHqtGvMr60xPjLM4f5f13TRSv8nC0n3eurNBQIX4wCAHm98O
      N6ZGMc179x4xMT2J2a7x7R+8ybDfIlnr8v6tN2n3BAaHB12FmaXX+eH338RSAwyGFf7Nv/tr
      0DUeru2S3r5HquIwODSA161irQ5vv/0+za7BYMTHnXuLmK0KW+kyia0H7GWqBCMxAi4/FwQO
      OxurbOznmB6L8eF7t3i4skNuf5ONTIlsKoHsDRMJ+fnwwz4fVZUvIDBzUsYwYXJcolK1GRmX
      GBmSCMdERodFwmERAYduF65fV/H7D88Ai/N3Wd9JcXpmmrd+8kNUv5/b796l1WqwurWN+VQd
      P4v15QesrG0yPj1Dbv0hFcdDcX+Thw/nWVhPokowMDDgyk1sPmJ5cZHQ5BnW7h1olG6twN1H
      6ySTSUzzwO6zOLwnODpCXOmyMD+P1qzz9vvzLM/Ps53Osp/MIDo92q5hh0+HTqfD1vYWtm3j
      D0eRBYfhoUHGpk4SD4fZfvAWqWNE8PrqCprWpNU7GIFtx6JvOdx442vMTQ2wv7XEZsJdBHv8
      YYI+BcO0QFaJBDysbmxQ1uDGhXEymQSLq+4pzUa/h94qs50us/ZoBa3VIBAZwBFVLp+fo1HL
      8nBx2ZXrWAaS14dl9tlYWaant2nqNrZjM3vuKlavxP35B+4PyzGJDIziWH0kxUs04qPVblPK
      7TE8eQ7VavLOh8f4TQ7ohsnF8+cwTZtAJMbJk5P0O01On5klJPZ564O7R0Rwt+tQKdt0dIdC
      zkIQwXoceWq3HBo1m57hMD4p4z/uN0hkD+GgF8uyiMai7G6v0dX7GI5IOBhm6/5PjxXBliMx
      FAthWDaDw8NYlkHfhNe//DXOTgywt/6ArZS7CO6bNuMjA3T7FtFolL3dHXTD4PWrVwj5Q2zd
      ++mnEMH9Ltt7KYzKDhnhBDcvjFIoNwmHAwcukQDR6ADyp1gRNl1WGPudJolCg9HBKJ1mFU90
      kL1HKwyeOMNg2E+lVGRscvpgFdqll3+UYq236vTwUMunCA5NMDIQQauWCQ+P41ePZpK262WW
      N3aYPj1LTLUptR2mxwYPojOiSK9ZRQ4NEfTKR2cux2Frc5OR8TF8/hD9XodqIUO543Du9DS2
      3qaDl8FIwNUF2lp/xPjUNKIaxDG7YHTJVntMjg4gOQbllsnEyIBrjDq1t0N8ZAy922Z7a4dT
      c+col8qcPjmJZTuUynUmJ0ZdV4LXVh4iBwcZiQfY201w6swpMoUaczPj9Ewo5vNMn5jm//jf
      tUMuEPaB12IaoHogFBZpN2x8AZF63UaSwB8QaDYc/vRPgwwOHp65us0qpbZFLOilVsoSGJyi
      VUoxMHEa0TEoFwtMTp9wD3X3WqQKDYbiYcq5JC1LxulqhEemGI6HaVZKREcmXF1x2+qzs5dh
      dGQQq9eirgvo9Tzh0ZNEAp4ndp+1+itNh37eS0suqRCfFp93hfB5y/x5f5/4efdAf97qu3u3
      j33cDwV8Aq5cOeoCfVp8nnKn030qlefzRE6dOvwTvEdWtQ4KJrgemvpZYFnWk5t8+mYdB0RR
      OHTKgyAIHFj9uDG4NeQn333qugd/H5xccFzj/yi6I4giOM5jW84h++C+Of0JVxAA57Et4ZB9
      cI8+fVTOj8r8bPmftuuGJydwcJCg9hH34Ou/mPtRPX50KoQbBEHg1VePpgh/XD6w7aftCoe4
      x9l1OCzO3er4+DLziXWczRpsbX20EOEculdBEHEc+1A9PV3m4WGZcPjjZn+kA3zr3/x/zEyP
      0xRiCPVdpIEzmOUt4tMX2F1bZPbaG1yZczuR+Hj0WjUW1vYI0CNZ6fIf/72vceunP0IKDeAx
      22TKGmoozNypU5w55X7tfrvOt773Jv/kH/6nJB49oB8dZfv+XSRVoNRRePXqOc6eOeXKbdVL
      /OzHP+Mrf/QnbN27Rall46eNKDtsZE2+8uolZmfPusam+12ND269zYnrX8HTK/L2+/PcfPEc
      mhhmbeEOM7NXuHLlPKoL2XFM3vz5O3z9976GVi3wox+9xfiZaRQlQiO1gDp0hVdefgG/4kK2
      uvzkRz9n+MRZTg/7+HBpj+GwQiJbQvWALzjM5atXGAi5neDnsH3vJ0izf8BM2OBnP3ufL71+
      lTtLm/jpofX/f/beK0iyLL3v+6X33lT6zMqybarduN2Z2dkxawARi10CKwICGZAYetELHxQI
      hqSQIhTSg4JvCuqJUgSpCAokKACCIGAJ7I5v76vL+8qs9N57d68eal1P3Zyd7V6gMUF+TxVd
      8fW5dc4995z/Z/5/keULV/C5pEWn79/6mK7MyLtfucBf/MUHmK0Weq0WglqLVqtmYeEckYBH
      0nft4R3yzTG//o232Ln5AZZrX+H+D94HlQK91cJ8ZI6FOek1blQKHCQLvHrtMrnEAeuxLF6D
      hkypQGOo5ZXLSyzMPb3G42GT7Z1VLCYTzXaV8NK7DOpHHJ4cEg1EyFXryOTgdYXxzITOjPnU
      +dWsFihUWqTTKe7cuUM8nWdr7R6pZIa7N64jKtSsb08p3/0c05nsuO1mlErlT8mY5EoFgiCg
      M9uYnZvFqtVysH6DWLEr+X9sbazR7rTpDsf4gyFUcgGFRoPR4SPqtXC4/Yjdk5ykr1KjwWU1
      MxhNUCpPvxAKpRJB6+alRTeJk0PWtvalH14UcUWWibjNeLx+rrz0CpFQCLXWxPnFOSrFBI8e
      r0u6yuUqQuHTmnuVVoPTYkStMZFMnhBduMSgnePO3ftTxh3hDswhjvv0u02atSKJUhOVEiKz
      i8gHNT6+eW/KjMsIz0ZOf5KrCUd8aI02PC4rc3Nz6MQeP/r0NuMpmWCNyY5Fr0SYTFBptAwH
      HeYXFvD6A2jlMu7d+JD6tEyw2oDLbgRkRGbDMB6h0BkIz4bRqXVs3/1rUk3pzjmr04PFpAUE
      Nje3qVYrqHRGvv7Ot4jMmDnYuM9+6mnyM2HcpddrMpKpGPWqDMcCDvsMkdmXkCvUnIteQKtU
      kz25TrF1NsDymRNAxve+/58iHzS5+oaOT/76/+W3f+t36TYK6HRGlGo1Ar/8XbVdLZDL5plf
      mGPB0KfeahGdjSDTOyimjpk9dwUVY8oFN16HdJ/xta++zfzFFqNeh0w6TX2kYi7ix+KNolfJ
      qJU82H1uSV9xPEbpDKCdtJmLzqFvjjHK+6B3YTdp6NbLKC3SXzRRmFDJZ8lYLdjMRuZnI8Ri
      O1Q6IpeXLxAKteiK0jyqwmRAOZ1FpdJg1OsxeEMsBlwYDWZ8fheBUJhCY4rYltKEVSvg9EdB
      Jmd5aUwkHOQwkWd+NkwkFCRXqE6ZcZH9RI2J4ZC6aCGfySIKkM1lcb/8Cpe+8i6OVFpS6R0g
      5HGc6i/0RaJBD57ZRbKJOFcuLDMYRPF4/VimRIEWIz7yzQmNRp2TfBV5V8lcyEnk3AqyyZCC
      x4HPJP0OldInZPMV7A433/7Ob9Fq1tjd3CJXqnP5yhWqRQ/OGQebuZ+V5Kh0HkLBeSxWL2q1
      Eb28z3iiwuu2kk3kaWudRGdXaNScOIxnAw2fC4IFQXhmMNrv95+51FalOttg/svYi+hTfd4x
      v+y9tb+sra6OqFSeDQgbjRO02mfznZvTYDZ/Dgj+efu8l7BcLiMIE9zuGcnfy2QvTnX9eezL
      +MxfRnv4cMLe3rNFcr7/fTVXrz6bnsJn7TPF7yP+p3/6B/zuP/lvUIz79Ho99rb36dRSOOau
      omWMUadgqLKROlrH5XSiFkbMLL7M+bnpBLm9ZpUne3HmvDbubR3z3V/7BvdufYIzECUf2yFd
      GWG2W1mKRpibAoLj24+J1eHrr79EfPcJx9kGboOcQq1OfaDh1UuLzM1JE3W1ayVu37jO1W99
      n+LufYZqK4NqGqfbwfXHCd569Tzz8/NTY9O3Hq7zztfeYH9rlaNkhZeuLHJ/bYtRp83swiVW
      Li2jlsgEjwd1fvjDG8xfehkLTXbSDey6CX2MtHObaF2XuHbtAga11KYTuHfjI86/9k0m9QQ3
      7m5y7bWXuX7jFhGXFkHr5sLFFRxmaRB8+PADVAvfIqgp85fv3+P85avcvfkJ5+dDdMcyFpZX
      PhcE92RG3v7KJd7/4FOWF+Z5tL2Px2mhPxKYm1skPAUErz+6Q64x5tfee4vYzhPSbYFa8gC3
      L0xzMGIuHDkT6DDaZCxE5VRyAk6PnM21CZFFBWpEGj2wWWTo1JBMCeQL0l/+9NEu6zuHvP7t
      75wGOrpwadZJLrZJXe0jGp5lPvoLQHA5vklboePuJx/y4QcfcPP2He7ff4DG5MRuVJKqdCll
      E3zy6acAlHJpjmNHXL8zBcj92HRmO067CblSxdVLlwGo1eqcpLK4vWF+8zvvYdIoOdi4Rbwk
      DYLVOiPtSob+SESnNaDTadEbzThmgoRceg52VjlISvcEy2QyghdexqWFar3GyUmcWq1GLN9k
      JWIjHjtkY0e6HFqlNeLznPZDDwUFcwE7dx6uUmt0mY+GKBVOWH0inQkWRl3CCyv0uy2q9Tr9
      coKmoCObTROaXabTyHL/wbQqODnhSAiR0z6K5eUF7t+7Tb3ZwuWNIHQrXL/7YIqvjHAkjACI
      /Raz56+yde9jau0uJrsH5ajNRzfvTi2H1hgdmPVKGPeotXocJZMYZCPURhtKccKD258wJWGP
      qDwFwaIwYn1zh2I+jdFoQaZUo1Go2Ln/AZnW0yBYJjutOxIFGAxAJgdBOP338RiODydUmyIu
      rwKfS/qq2O6PuLQUpDUQkCtkCMKY1Y1NzI4ZVAoVO/feJyMhzfTUCSA3zPA//s//C/VCkkq5
      islmp3DlGucXw2TyVX59/hy9Wp75K1pMOhUg0KhWMDokRN5+/uEqBTLpLCOXk0prgNmk5dq1
      q/RkBuxGDXqdkStXLlPKOfDapEGwxWYjNLvIuNdkOBzg9wfoVLOEIksY1HJqxRx2t13Sdzjo
      U0wnsFgsvHTtJWL5Jm6jnC56nBY9nXoJlcUr6TvoNMgm06h1JsKhAMl8nb//3ZdoNBoo5XLC
      nwOCVQYPstE683NRBFmQnqBhNuAiYzYTCMzgD0YoNqeAYMakEnlMAyU+T4D8cZzvffe3aLea
      GLQq/IEg2UJtiq/I/kmVseGQTsCNrHPM3/v+P6TXaWExamn7/dhSGUm1dgCfy0xfbqLRl/Hy
      yjwGh490PMbF5QVGwzDpVArTlBtINOgm35zQbHX53j/4z2g2G8QODpi/eBnGfXIuK26DAvjZ
      Jmg3RFqm06+9rCGgVEG5LKCRgdYsw6iXkU4K6IwivYb0CbCwOM/mXpyI2EYXjqBrC1xYeA9G
      HfwDkazLyoxE0u5vtCf4We1FaU89L0vz8479IsZ9nrE/+ECg2XzWMSfAswVJrlxREo0+n4zv
      T+wX9zcKYxqdARbTL9cT/DzCz/AfXlTky2h/+IciyeSz+f6zf6bktddeWGNaywAAIABJREFU
      /Bo/9ZYm9p/wz/+PP+Q73/1dogEH3cmYUS3H48Mib7/xCvv7x0TCAbRaFR5/BK3ql4uYFDMn
      5JsjLi3Ps7l6l1qzTbUNRp2MiULLQiRMdPYsUAE43l1nP1Hg3W9+k+2Ht9A5AvTKKSrNFrWB
      mlcuzhONSoPgXPyA1a093vj2dxiUkhSbQ5zaCTvxE1LFEW+8fJ65uehUEHzn0QZff/N1DnfW
      OExWeOXKIvfXtxl1O8zOX+T8hUWkkrmCMOLT67d59523aVYL3Lp+D0tgBoVMT7e4i9Z1kcuX
      z0mDYKHPBz/6GHdkiXORGe4/3uKrr6zwp3/5PiGnFnRuls6dx26S5gY9fPQR6oVvENS1+OEH
      tzl3fokHt29iD0bQq1XMzp+bCoIf3vmUrszI11+7zL3bN0CmI1er43VZGYwhMhsl7H8aBAfn
      IOCBTv20kX/nEOaWwWECnfH0Li8bQDLP1E1ztLPGYarMu994j+z2Y8SZeYTsBscNaLWHXLsw
      91Nuqc9aNrbHk+1D3vz2b9BI7bMdy7NsHxGbeBH7DaLBoOS79dTMh5eucuXqNWgk+fiDj7h7
      /y4ak50bH3/A5qM73Lx9m4ODff7yo/uovmBr5M+b2xs4bcgA9HoTarMTj0WBqFChlsvYeXSd
      zBQB2t5YxkLITX8kUqlWSSQSGE0mzA4vXouag+0nHKalJZIanQEvnw9R7Qq4fSE0SpH7jx5T
      rPdZ9JuIHx+wtSctc6TSGvHMOADoT2TM+21cv/uAUrVJOOAhn42zti7dEyyXq/AHTrGFQq4g
      cnEFj0lPoZjHF4jSrKZ59HhVerImfVyhZYRhB7XOyIzbxubqfUrVGlaXj0GzyK0Hj6fMtIxw
      OMhEBKFXodoTaPYFzl++yuX5IGKvzvW7D6eCYLXBjlmnQESOyWRGplJgkI9Q6sww6vP47s0z
      ILhSBq1Jht8NHv/pi9XrwngA5RowgZEMZpdl+KT3Hf2xnGjAwXAM/mAQcdRidXOP1gBcJjX7
      m485nsIO3eiOuHYuSL0noNZouHDxAuFICLfHj1wU2X7wMblfBIIB3nzjdWx6JYr9NP6wj5DH
      xX//3/1TZHIFRpsXu1GGYJiZmkX8PEufHJPK1fC4HPT6XTyeCJX0kDeuvsKo1yaXMuPUS1+d
      omE/B8kyrkGLq1cuU+mIdBsFgqFFjBoF1UIGh116ZucXojzZOmLB2SZ1nCNTaPDd7/8etXod
      hVxOp16amgkedBpkTpKodSaCfh8nuRq//fd/m1qthkohJ9Rt0kOa2FaYDMgnkqhUGmSiSCGT
      ZH4uSjisJRjy4A32KU3LBKssaIUYrmCUUjFPKpHk0qtv8A+Xr2LUqfH7g2QK9SkzLbJ/Umak
      l+MIurk85yIYnEEciVjN6tMoz+eAYLdNfwqCGzV6gxHB8ByIcH5pgdEgRCqZ5LNJVWECuSOR
      ZAFCM6A3nXIWFQpgdMLqQ1BowDEjUmlJjzsb9nGUrjLpN4mnUtQmWv7B7/0+1a6AQhxRyWdw
      2cySvvPzEdZ34sy72hQbDSq9Bi266Dx2XrqyQiZpwqH7FYDgXqeNSquXVOp7akKeU7z5y4gB
      ngeQPmsC7nn7mJ9nnv/VvxKpSGvW/UL7/vdlRKMvfo1/qQ3Q6XRO5X6+gD2rPthP7HkW5kVs
      nueNxryoDfA89jxRs78r9lRPcO7oCf/8f/836ExWBu0qtUabWrVAPFulXUryx3/5IVaNQLM/
      YXfzCUO5HrtFekNILcrmk/sk8nX8Xhc3P/oRw4mMjdU7PNk+IlssIxdFrFYLcPYlHg86/Nm/
      f5/zy4skdtaoThRsP7hLu9vk5qNdtCoZNqtV0rfXrPJoc4+gz0s6fsCd1W0KyX06nSbv31jD
      oFVgtVqlRRu6TW59/CFyixehW2XvOEU5E6NYbfDg/l2GYzk2p13ySihMBty9cYO2oEI2qPMX
      /98P8IaD/PCjmxTjaxSbMqwOB2qFxIskDPjoRx/QmSgxKgZ8eucxMnHI+x98RKmYplhpozNa
      0E0hKsseb7F2UiLscfHwgz8m1lByuP6YVKlIIZdHrjZISzMBhztrrO3GiYaD7D74iP1sjZ2N
      LdL5LOlcAWRKLGaj5AbYfvKA9YMEc2E/n3zw15QabeK7W2zvH5HKl0EQsP14jT9rsb0N7q9u
      E5qNENtZZ+swydH2I9qdNneeHKBV8dM1/qzlTw64cfsentkF8vE97jzeZtgssn18zEkqN3Xc
      pzbAeNBne+0xwnjEzYcPWd2IkTna4DhVIna0j0qr5NGtOzTabfKlIulSkysXFiUfSGoDtOsV
      krkKi9EIxVyW1kiGx2Hn4sVlCvkCudg2xsASJs3ZhpjHd6+znyhwceUiVp2a1rBH/DABKg1a
      +YRiNoFM78Ru1p/xVWl0dDtNnA4ng14Hs8PNuNek3hexaqBUKtIXlLglmqYRJnTHcsIBD0aT
      mVajSiGbptoZ4bEbyReLtHsjvDPS7NmtdpfIbASzxQYyGSd7GyQLNZYWIhSKRaqNFiG/9+wG
      GLdoTcwIoyYqsUciVcQVmsNmMuG2GSjks5wUaixEgmfnXhjz/vs/ojWEWYeSjz69hd67xLi4
      h9a7yLieYS9ZZGkuKokDRt02lfaQgFPH+x98AgY3ulENDHbEfpuT2BG+6Dm0yrMbIF+qotcq
      mZlxEzs6RK4yYtIr0erNDPo9ckebmEMXMEpEvjK5Ii6bDq1lBmHQwTnjof1jjQGVOKKQiSM3
      zWCT6IFIpXMs+M00FC7M8gG5ShOf0wo6M71mg9zRBubw2XGf+nyodQYWV17mjTdeYz5dgNEI
      t1XNXqqBUz+hKzdhunKBodKMzWJgLP5yyQijyYTPp6XRbGIyG9HafZi1CqxWB1cvr5BJGLBq
      pb9or3ztm8yeLzPqdUgnE5SHKi6ej6KyejHrVFTzKRxWKcG400x0Ip5EZ3LQq1ap9EScRhNm
      4wxOi452rYDS7JD0HXTbFPM5LHY78mGXZDrPuXMXqLTHRLxOAt0GfXEKCB73KeQKGC0W7E4n
      /uAsKysrXKyU0aqU+Px9StMywSoryuERrsAcapUCn6eNw6BGYZ1Fq5hgdXpI56VBsEyu5Pu/
      848o1eqMVCp+/x//l9QGCo4VV/jKxQj1pot4MjcVBDfbbdwuJ92Rgt/7/f+CantA7EjFlWtX
      6LbbJBMJpsQq8LnMp5ngZguv14PW7CSXSbJw4QIq2YTMiQGrVnrgcMDNQbKKq9+kXCoiaoeY
      TBYcwXn0ahnlbBLHlBvHXDTI460Yy/Y2zVYLt8tFq9PEG14i7HGTjhuwaf8WM8FSTfFf1J73
      bvmsvuPx+JmfWy6fThj7Rf2fxV4UmRe8uIz9r9I+N107GY8QOJXhGY8GIFf9wujPT+xFRSae
      x4bDIe12+5l81Wo1Fov03fY/2t9de5odOrnF//ov/4Q33vtNXLoJelmbzMSDUaijEnoMjQHC
      LhPCeEi2UEapVHH5yuUvnBOIHWyzupfg+7/56+zfu4H13Aqr99YwGzWMZGpmAx7CobN3WoDJ
      qMdf/uhTvvcbv87R7gbZeh/loI3N7eQwVefycphwWLqUutessnGU4rVrl0kd77FzUuLako/d
      kyS58ohXLy8SjnzGVxzz5OFDZGodjWabl159jU4lw4PVLS6vLDKQGcgc7eIJzDI7F0UtyU8l
      snH7r9AtfQNTL8WjjWOuXLtAvdmjntlB71xm6dyCdCZYHPLJBx/jnj1H1KHlo/vrzIU8JNJF
      jHoZOqObyNz8lEww5OO7xBrwlYthPvrwJsFggGQijsbmwqhR4Q1Gp2aCH927gcbqZ2UxxKP7
      9xGVWkq5JHKDHYvZTMDvJ+iT7gPZXX9EtjnmvTdf5frHH2BwhtB3YmTkQdTigIhvhnBYOtt/
      crDFfrLEu+++TbuYYi2WxSIXaA16NIdqLi2Gpq5xMXnEo61D3vrWr5HZfUJXbkTslGj2+8hU
      FiI+t+S4T+sDDHqIchXxtVt8nC1y9cICJ5l1TPoxeqOb9jhJ3KhFzoRypYYglzO7fBmbdDHk
      GYvMztKbaAAZwYCXqsKAWSun3e2iUo3ZXbuP1ubBaznLVPD47k2S2Tzd4RiD0cSsycLjBzkE
      rR6jasL+zgaC2sis9+xdXme2YzWdEiqZzWYEily/eYuR2oTXZuHoaJ/+REbY9/MSkQpMRj2Z
      YpXhaEy+1GDOH2B+fkAo4OUo08FuNZHNphhMJrxy5eKZcXv1DI/W94iYLzOj6POVJQ99awBV
      Zx+b3U0qn6A/6vP6y5fPTtaojSN0kXG/iijXoRJGpModLs65STcm1EoZSs0u337r1TOuojDm
      xp27YAkihDWUenJk6TST8QiDyUIrHydVavKdb70tqcemVaupVKsgi2Kx2XD6ZjHo1DgdNrZ3
      D1hfzWB1fQeJZWIs1+K0ThARmYxHtMsJtvZ2MJ6bwSbrsLN6F63Tz4zhLH5sD2Eh6KA3Erh+
      4yZtuY7QpWW8pgg7u3vsba0has1EZs4GK8rNPl+5EKDUFiiUSrSFJq9fjFBpjTlJZ9hevYPO
      FcD9mYrQp6JAMrmCSqXGG+9+C6NywtLFy/jdZn7wg/d57ze+x/lZH83+mEsXL7CwME90dhaX
      04lUVYRUIqzbaGD3++m2msRjx6e124Mul197kxmHFQQBj9+HWnk2CuQPzxEJ+ZGLAulEjM5Y
      ic9lwOoOEQn6UCvA7vKik1Bsb1cKbGzvoTZa6TUroNTxjW98E7fLgc/nx6RTorc40aoVDIc/
      zvELI+KpNMHZeRgPsTvsyEQBk9VBMZskU6yztDiPzWpErtThtFvQap/+Gqt0Zi5dXMaoU2M2
      GthJ1bDLO+wnC6ycO4fbbUeUqXHZJUKwCi2Fkx3cvggTUaDZ7nJ+MUyi0OXahXnsDjuTiQyP
      ++yGl8nkXLh4Cafdgqg0ohjUCYSjdIcjLl+6gN3uZDyaEPBKf8XbjRpqgxWNfMj+QRytyYjd
      YsfpcmKx2BiPJ/j9PpRSBGajNu2R6qcSSXb/Iu9+7VWc3hB+lw1REPAF/KgkELhGPiZV7mM3
      67jy0it4nCbihydozE6i4eApNaLbi0599uZu1itZOyoTcptwWo2MUGOyWAkEg1gtZoTJBF8g
      cGbcXwiC+50m6WKdaCQoWSw2zYbD4QvRCX4eGwwG9PvPpoGgUqnQ659N6xf+Iwj+27JMZkK3
      +7P38gtHgcaTCcpfgr2s2+0+8wbQarXPXE79IkswvmwvAzxfxv7LuAH+7b/tEIv97G9+Wic4
      tcsffbJLRFvFcf5d9AxwOSyIyHm89oSXLy4jqIxUy0WWp0jVSFmvVWUnnsOsHJNvjvnaa9d4
      eOcmcpMdoV2jPwFRpWc2MEMwIK1d2yjnOSnUuXxhmcTuOjjCnGzcwTHjI1HosLIYJBSSBlet
      aoF79x7yynu/QTt7wH6ygkMvUqrVaI10vHRxjmAoNLUc+uHGHq+/+jLHe5vEM1UCPjv5Uo1h
      v0sovEh0YVayJ1gQRty+84CvvfkGxXSMB+tHzM/5afVlDGtxjM5F5pfmpoDgEdc/+hj37Hnm
      fDZWN/bx2LXEMzW06jF6k5tAeFa6J1gUuH/rU9S2AJfnnfzwk8d4PC4Sh3s4QrOYdTrcvtBU
      ELz64CYqs4+V5Sgf//AH+CILpE9O0JgtaLV6vF7P1OvT/uYq2caId954lc0nDxhMJlRqAyxm
      HSOZhrDXSWhKoCN5uMNessQ777xFbGeNcnvIqNVEY9BQ7yu5MB+YusbldIwHm4e8/a1vUT7Z
      5yhTRSfrozSYGIyVhDxnx1VrZU9joHG/TaFQpFAocfuHf86/+5M/ZXt7iz/54S2q1Rz/z5/9
      gI3b73Pn7k3ubCYkH0TKdCY7Zr0anVZHKpMCYDAa0OuPMJv0aLUGJv02+9tr5OrSVxCL04P2
      x/RrPp8fQRihVmnoDseo6bO/s0liCk+OwWJFPhERRAGDwUgoFGBuNsj8+WtYNQKHh/scxtOS
      viqtEYfNBMBoMGDQ72I2WRiLcswGLYnEEbt7ZzWG4bQc2v3jDHGx0eXNZQ8bJwVKpQJGk4Vs
      Js7mlnQpNaMW9uAKo14dtc6I3WZEp9PTKKUQ1SaK2SRPNqboBIsT9I4ACvpMJiPGwyFas5O5
      5fPMui1Uixker28ymXL2a1RqGo0GiGPUKj31apn+cIhKo6VVK7G5tkp7Sv5uKNPgsJ5uSqvN
      hi8wi04F1VqVQafOztoDSl3pU6c5EFkM2ekOwWq2MBqPGIyGTFChFHrsbW+QLEon/wr1Hm+u
      +Mk3BYxGE8FQCJ1WR2NioN/+ybhP3w6GffHpE0Dv8POdd2TIZAp0ej2PHtzD7PDypnMGuVzG
      oJZDZpyhNjzgyuJ0FojPWrtaIBY7YX5+lnPL56m3WthtNtDqqVXK+GaXiKpl5BLH6KdkgsuZ
      BMfxFDa7m1o6TrEvx6DTY3UHiIYjlLIJDFqJsATQqFZQms0MOk2quSyNoRKL3kvE78asVdGs
      FlBNKfIbdBqcHB2j1pkwWGxYOgL1egWr1c58wE27Xaf/OeXQycNjVCoNHreLx3snvHtlgf1U
      mehciBl/l/K0TLDaxrh+C1doiVIxT+zomPnFRWZmz3PtfJRG00Oy0JD2lStRjhqobQE6fRGr
      xYDdokdm1OF2GtEaLBye5Kcyh6o1WsxaA416HbVBi8PlYzSaMD8/D0M/seM46im3YadJTa4p
      0GjWSSSS2P2zqOXw1a9/k0m3QfJoT5oKEvC7zewmKljdTSrVClabg5FCht0fwaJXUcycTF3j
      udAMd9eOuHy5TTaboTVRY9OqecnvYSK4SRzuYZAIVf+NZYKfhxhLrVY/M1sy/Gr6ZH9Ze1HE
      WM/7t74oneAXZR9+2Ceb/dkJ9De2Ab6MYPRFlha/yH6AL9tL/Ku0p/IA9cw+/9u/+D9RWWbo
      Nqqktm6SGhhp1yrIxCG5fAWVbMIf/Zs/YuHSNST5nH5sUouSjh/wcHOfaDjA/oPbiBYnD29/
      wt7BCflqE7k4xmw+7fj57KI0ynkOE1lmXA7WHt7hJFchebhNoVxmYz+FVsVU31ouwSe3HuCP
      ziEfNvjwxkNGrTKxRJxHGzH0GgUms1la9bDb4Nb1G2htHkbtCsepAtXcCQ+ebJBMxJkICkxW
      CwopzavJgLs3bzFU6FD2a9xe22fYLnGULJI+ekKjK8NgsUqXQ4tjbn7yIX20GFUTbnx6i+Fk
      wsbaGrl8hkarj0JjmFoOXU4fspWs4nOauHP7EQ6zhpufXqfYaFKr1RFkKkwGreQG2Hx8j5N8
      nYDLxCef3KDX6XB/dY1ut0U6X0EURcwm6cLDw+01to7SRAJeHt+/xQAFu09WSaRTpIt1ZMLP
      1vizlo7t8WBtl1AkTHJnjbZCR3zrIYJCxd3HO2iUImazdLlJJXvC9dsPCczOkY/v8WTnGLEW
      47g65iSRRiaMJMd9avZG3SblWpvd+x/RHQmMej0Ci3puf/wR5y/OUam10avUz/zFsVos9I9y
      gIyg10VFriPk9aG12Nne2WNnPYHGNoPLcLaozOL0oK6d3nl73S7dSYcZ/xL9RgL5eMDe9gai
      2kjQfTayka22efuKn3R9QuLeJ+TaI1YWX0YvyGnUDzg42GUgyJkPn+U30uiNqBEZCyIel5dS
      bZ/I3BxoLFQLCWKxQ/rjCSvLc2d8ZXIVTrcTh9VM/HATZb9Kve+h3W7h1OtJJmN0B31euXLh
      7GSNmtgCKww7ZbThGZSyCRq9EZc3gGLSIp2KU6y3eeer1864isKY67fuIbcGePXiAi63Fb3F
      CsMxao2GUjZBqlDD/c4bKCV2vUxrQi9OEMQJ/V6PZqeHRj5hLMioV7KU8hmszm8jsUwMUGE3
      y0GckC0UmejsmA0qWmMN7WaF7VwcncOLQ3f2ilvvTVgIWOkMRHw+L5mxgN/nZqDQwbDF7tYG
      aM0EnGc3Qb7W4c0VH9nmBIfZglemJ2zpUSrr6DQTbOeO0Tl8Z9oinzoBRFFg4fJXef2l8xwe
      JXj99VfRqJQo1DpWLl1kMRrF4zTTEzWsXFj+3BogqU2STScYCgosJh3Hh/s0+yIOmwWv14fZ
      ZGTUa+P2h9FI6MCWswk29mNYbXbEYQ+FwQGdPPbAOUL+GeTCELNjBoNWfcbXpJFxZzNN1G9j
      cfEcdouJdDyGoDaxMBdBrwK1wYbFeBbMdhtVUsUKNpuVdrXE3tEJVosNTzCI1WjCZNSAUodD
      old1Mmzx+PEOJrMeh8NJodLA47IzGIucW5jHajUznMiYcdnPngByDanDJ9hnQnQ7Dcq1FuJ4
      SLXZ4tzSMjarmd5ggt8rxYgtIzo3h8loAKHP5voWw9GE3njEhUuXsJlMtDsDQgGfpKhgq5Jj
      pDChVcloNVtYnQ4GvQGL5y/itlvpdTr4gyHJCoBhp0a9J8Oo16CWiahUKsqNNqHoIgGvi1G3
      hScQQS3x8igmPY5zbVw2A+n4Iblqm3o+w1htYT7iRz4ZYnF6MGjPolmjWuT+To6Iz0o6fkSz
      N6JVKaG2eokG3Ay7bTzB8Jlx/8YwwPMkWF5UMupF9tc+DwZ4XiD7ouzvAgnZ87FXfY4JgvBc
      QtnPOjnPw0r9IjfA89jzPPNkMnmuuf6yA+inrkCN3CF/9tEqrWoBvUbJYDjk/fc/5WB3HbXJ
      jlIY0O5P6LXqfPz+X6EyO2m3OwjDHrVm5/TI/bFJfZUOd9Y5TJYIeN1srN6jOxFYf/CYUq1M
      MldFwQSTySQ5seXMCWt7J/j9Hg62Vik1hwiNNDuJHLsHSbQqTjlsJHx7zSqbB3G8My5Sx3us
      7caoZI9ptFo8eLKHXqPEaDJJTtCo2+DG7Ye4fX7KqSMebhzQqRU4TmY4PthHQIHBYkYhMe5P
      QPBYpWfQKPBgdRu5bMjq5j7F1B7tvgKd2SwNghF48uAOFneIUafMx5/cRqNVk8wUKCT2qLaG
      KDQ6dGqlpLj3xqP7dCYqLNoJH31yh063w8M7t6h0urSaLSYoMepPi/c+O/bG6j2KjQEzTjuJ
      nYfkOhA7OkLoNYhlSiCKmIwGybkupmNka10cFiP3b1+n2u6z++Qh5XqLZL78FAj+rG/25ICH
      6/sEw0H2Nx9RbvU4WF+nWCmxe5xFo2QqgO42K2wdJvC6XYz7Ta7fXaVdyVCulomly0+B4Kkn
      wLBdZ39nm2bdwo/+7E8JrlylkCwQDln44//73yL2GmjcCyibCSwuH3trD/nw03ssLoVpNvr8
      13/wTz73SJHJZJwkYnzl2kVSmSweuZJ2r4tSr6M/KLNdTKC1unFIoKtEKk2/P6E/nJDKZNCY
      BhxlY4gWHxoEdrc2EdVGAhLpfZ3ZjkF7Wg5ttVrpxosY9ALd/gClOGB/b4eBIGc2cDa9Xypk
      GfS7VBtdGt0RCx4jB7kKE0GGQQFHRwf0RhMuLJ5lLJPJVbg9biwmA6NWh34hRn9xiV4vhdWi
      Ih4/pN3v8fKlcxKzJcfjcTISoFstcfHCeboyNWplF0GtInVyRKHW4uuvXTnrKoxJZ/K41RZC
      DifdTg+VwUZ4fgGjVk78JE6qUMX91lcl2yLFyYRut8u43+TR2iau8xZmLAZUKiXVYoxiLo3F
      +U1JEOz2+Kkls4hAp9NmLMRwzb9BJXGXgaBmKxdHZ/dglwDB1c6IOZ+JzkAklc5gcExo9zoI
      KhXjXp+drRIyrQmv/ezHSm92oNeUAZHbt25T6gzp1wRsvllazSJbuRh6h/dMW+RTJ4AwGROM
      zNLti8z6bPjmL2GS9/HNn2NxNsiM04HO4mLlwgUiAS/j0RCNwcb5ixeZD3rJF/KkcjkCPp/k
      CTDotVHprRh0alRyAblKhzCeEPgxQBp2mjj9IbSqs+XQeo2CYq2FxWLBqFEwRMOl80voLS4i
      AQ+ySR+TfQajTiNZDv14bROd2U67VmAgKDDrVMi0VhaiIbQKAaXOgsV0FgTrdDqKxSJmiwWD
      CmKFDh6LFpQGzi1E0etUoNDitFnOjDsZNnnwYAuL1YhSraU+UuDUCvRGIheWljCZDQzHpyXN
      Z0+AMWsPHjEQ5VgsFrZ39nBb9GzvH7GychmLyUC7Nyboc589AWRyJqMuqPVolTJqzTYenweD
      zkgw6DstEWj3CAf9kuqarXqNsUyFQa8j4POgUCg53tvFG13CbbfSabXwh8KoJMqhU7EDdk/y
      zDgsdJoNjM4wjfQW85fewOO0MmjXcQdm0Ug01MtGHY6yLdx2I3qVjBFKVIDDF2Y25INRD9MU
      ENwq53m8voXe4mQ2HESlUuO0GrF6wgTcDvqtOu7gLJrPnLZ/o+zQXzYM8KJwCzwfCH6RAYcX
      lbB8HvtbAcGfHeiX9Xse32e1L6s80n9o+mS/yud96grUzMf4F//yD1GZ3ehkY5DLqVaqyGQy
      arU6/X4PuVxGuVJHJhNpljLcerSN1zODSvX0XpK6AsUOtrn9eIvFuQiP792kM1ZwvL+LRimy
      eZj6XBBcTB7wcPuEQMBHbG+Do3SBbHyPar3JzmEKrUo21bfXrLJ9mMDjdnK8t8Hd1R3G7Qrp
      XJb1nWP0WhUGo1FyYkf9Nk82d/F5PSRje2zuJxh2qmSKVfZ3NhFlKvRmk3QmWBhx/8FjAgE/
      xcwJ95/soGDAwUme7PEG3ZESncmESjITPOHezU8YyI0YVWNu3nnIeNRjey9GtZSk1R0jV2nR
      SoLg077ezkiJ3aLj9vVP0Wg03H+8zaBXpVJvMxHlU0Hw4c46x+ky/hkbj+7do9busre5TrlW
      p1Rtgihi/HHA4ywIjpNv9LGbjWw+eUChVGNne4N4IkOx1v7pGkv51ss54pkSLoeNnbWHpMsd
      5J0ce6kS+0fJn66xlDVLaa7fWSUwG0E2anP7/hrtSpZKtUw8U0EuTiR9n3prB60KS9fe4tFH
      f8IfHia5dPUq2UyWGfcM2XwBUZhw5bU3+OCv/oqrV5bwBOb5wZ/IPi5WAAAgAElEQVT9Keev
      XkP/BfqCZ+cX6Y5Ov7LDwYh+f4DdYQOZnFatyFY+gdb6bez6s+hq0B8yGfeYCCIOpwuxXmeg
      n6VXizHojtnZqoDagE8iS6gz29FpTkFwdPEc3fERVoOCWK6EOOqxu7tNX1AQlQDBKq0Rk/H0
      RREmAuXUMeWyEYfDDuKE/f1deqMJ5+bPNmvL5Sps9tPnEYQJg/wRd7s9nAYdFpWMo8N9Wr0e
      1y4unZ2sUQOj5zzdRoHyUKTVHVBrdqgVYkw8YUrH++SrTb72yiWJmRYZDYb0Bn0mjSTJOjRX
      NzAYVDS7WtrVI5K5Ct/42muSINhqNpNOlEGmZMbjRmm008qlGE1EarkkhWwayzvvoZO4P7g9
      PmrJ7OnPMzP00WPWyBC1Jo6OjtnIxdHZ/hOsEhw9VqeXQu1Ur3mi0qEc1VnfPGFk8iIfDdje
      KCHTGPFIgOBUscFXz7tINyaUNh9Q7Q5plbo4/BGajTK1TAz9N/4eFs3nEGNpzA4O/vqvePPd
      38RkukVoYZGVlcu0GnWuXLvGeDSi0+uzcukS80sLXFm5iFro06o3wPaL2wE71TKB6AKNRhOj
      yYiMCbG9feavvMbF8+dJHk6pbwe0RhNKGjSbDY73dlFbPQitODb/EsGIjGI6NtW3XSmwt7uP
      zuTALBsQWVgivnUfncnOQnSOWjk71XfQaXCws4daZ0KnM+AIzhFwaMnWR5ybn6VSLTONSUiY
      DDje2UOl0mDQGVDPzPFm1MNBssTi0gr2ep16d0oSS2Whnb+OK7SA2qjBoi1jMZvpzkR59coy
      pUKRZKkj7SuKGE1mEEXaMhsRuwLnTJRsLs384iL9qoX9ZGnq31yuVtDptDRqBbZ2DolEZxnI
      FSzMRqHv5uhYmkoeIBU/5uCkhMdhZXt7B2/0PEa9hWAwiFatJrEvracGpzrBewdx7A43inGP
      vsLE8vkL1AQTbpOKQmr6uEG3lXvrR1x5uYV5cQlSOSwa0DjDhPxeTvY2JP3+ToLg5ymz/bLe
      h58HED5PJvjLOl/PY3/nM8FfxjrzF2UymeyF9k68iEjOrzJb/xQIbhVPOC70iR1snTLpyuR0
      2m1EmYJet42InPTxLvvHx8i1ZsTJBFEY0+0PkCHQ7vbRaNTIeLoWqNesshdPI3brPN6JEQl4
      2Vl/SLk9JhE7QK+Ss36QQCUXMRqNkhugkkvx8MkmvkCI/c1HpIpNiqlDWt0+W3sn6NQKjEbp
      El1RFLlz5w6hUIjsySGH6TLF5CG1Vof1zX30OjV6g3Rmc9Rvs7a1j88zQ7WQ5MneCa1KlrWd
      fXLpBDKFGp3ROBUEP3z0BL/fRzmX5OOPPmUgCJykChROdugLKjQG4xQQLPDg9qeMFCbUdLl5
      8z5W9wyPHz2kVcnS6gunY2skslGiyMbju9R64DCruX3zNnKdhc31xwy7DcrNLpOJDINemlQr
      fbhBS2bCrFORPdwg2xqx8+QR9WaTUr0FgojRcHrl/exzJ4922I3nCXjdbD55QKk5ol88IF4Z
      kMoUUMgmU9epXs6RyFVw2q0c7a5TqHU42t3kJJkmkS2jVcm+0BpPRl3uP1qnXcmSKZVJF6oo
      EDAazzJaP3UC9Bsl/vW/fh+3Q8+tm7fx+Nwkj2OY7G46jRrBi68xr2vw764f8GuvJNk4ymLW
      aSg12ridRvKFHv/t//AHfDZNoTPb0RTLWKwW2nunPcGi2oQwbGGz2REEgVa1yFY5jer193Bb
      JHhfbHbs9iYyGTTqdfpik3qlRVCmpNNqsLVRRnzpdUmAVEgeEMuVeWU84SgeB60N9agDai2D
      foed7U36EzkR/9nKSpXWiPHHvXRHR3FGEwWR81cQFSlKhTQ7O9t0BmOW5yT0p+QqLNbT53F6
      goTmGmjEIVvxOHMeE/u7OzTbXa5cWDi7oqM6evcyrVoOi8JEu9lkZ+MJmUoTo9pCZn+HnMPP
      my+vnPUVx8j1Tka9OigC+P0eWsU4x5kSFpOefHKPhM7Be2++KtkDEfC62G+NEUZd9g6PMM9d
      Qy1O6AyGdEsFcuk0b73zDlqJg6c5EDFoTr/QHq+XZndAfP+Ihk2Ldlimmomhf+/XManPjvzz
      IPg4Fsfmm2dxLkSlM+H4+ITN9SKyV9/EJUGQm0/sc5Kv8spYYPvJE5q9MYuz8+TKDUq5HNVM
      nK+892tYNE8/9NP06MMegaVXcBhlyEZ9QgsXiEbnMBv05FPHGD3zzAdniIRmEOQaukO4sLxM
      NOKDyYj9RJFvfePryHn6BGhXCjx4soFcqaY7nOCwm6nnU6CxkD7eRWP34/e4GLarmFxBTLqz
      Jc2x3U1y9S4Ws4leuw4aE06zGrXZTTToRRy20VndmCW+auPJhGajhsFkxapXUW31sZl0DOUG
      lqJBFEyQa4zYLaYz4w46De7fe4DaaMFmNlCpNdFptXiCERxmIyqlnIlMJUmtLkwGPLh1B6VW
      h1KjQUSFUSNnItdxcXkBtUZNbyTgm3FJlEOrONp6iMXpQxQFGq0OTo+Xcb/LyqUVdBoV9faQ
      SEBK31hOOraL0uBALTS5+3gPt9eLMOxzYeUSRrWKUqNDNByU3ACHOxvEi20cRg3CeERvOGE4
      7BNZPI/LYqRRq+ILR1HJz54A7WqeSnuCxaRl9dEjNAYzeo0Co2eOqNdOr1bAHphDJ9GIUEqf
      8Hj7EKfTiVYB3YkMrUbHbDSKQa9l0m+it3kw6c72BY/HYxqNOkazBb1aSa3RoZxN4Z1dZsZh
      pVvL4wjOo1M9fbv4QiBYGHb4ix/8iK++8y1mbNJH0PbqHSpjA2+9ekrzNxgMnvmu9qKIseDL
      B4Kf176sGOBXhS+/cBRIFAXGExGV8osBrueJAj3PBnhRPb3w5YyIvCh7nnV63gDLz79bT122
      i/Et/q8//4Tf/p3foVrI4/O6kQOr925gdnvZ3E/yve/+JpXYBrvJAldf/SrNag2vy0J/LNKo
      lAhHQuwfpbh06fwZ4tWd9UdUejLefO0aTx7cpjEYMWoP0Zq0oDIS8bsJBaeQJh3tsHtS4J13
      32b/yX0UlhmG1TztQZ9aX8mlpTDhKaRJ7VqJB/fvc/nt32BcSVDrCrRKCVAqOcn3eeXSPKFw
      eDox1vour7/2Coc766RLHUxa6A4ndDstwpEl5hajksRYk1GHj97/lIUrr2GRtXlyXGA55GTr
      KI2eJkbXEovL81OJsT798CPcs+cJObR8ev0GF197m/XVhwTsWuR6N6HZqDQxFiKHq9fRL7yN
      zzDk5s1HvPrSOdb2E5gUQwaiGk8gMpUYa+3BbboyA6+/dIH7d+8gVxsp5ZMo9DYsFgsBn4/A
      FHbovY3HZBsj3n3ztVNiLLmRUmqPGf8s7aFI2Oeauk71co5EocHlC8sc7qxTbE0ImMacNKHd
      GbGyMJ38rJ5LsHpU4K2vvUo5FacxlFPJHKM0mBhOFIQ8LklCrqcwwHDQZXtjndjhEYVCkttP
      juhW8tSaTWwuN9lEjHxjiFmo8aOHB+iHFfZ291nf3kUctfjzf/8R/f6ATz98n9CF17B/pl62
      226wfRBj5cI5NPIxFqeXdDqDyWRh2O9SSB5h8s9j1p4luE1li/gdOuQGF4c7a3SGIh6XDdeM
      j3qlQDmfRmFyYTWefSFk4oTuREXQ68RkslCrlpAptSgUIBsNqFRKjFDjtEtoSCnVdHttnA4n
      w16bg71dZBotwwnYDWoKpRK9gSBZ0TnuFhD0YfqdCs16lX6jhMYZxGqxoJKNyOZLNNpdaarx
      UYOWaEcY1giGZxkOJzTyR6wfppibDVMq5slWWsyFpfiZZJiUA2oyJ3adgsGwy4w3QKfTwKTX
      kk2niOeqLEQjkpngUq2JWgnuGS+tWgn0dhxmI7NBD9lMmlQqiW92UZIbKPcTiST3DIN+B6vT
      Ra1YRKXT0+20KSQOsASXMUhwA2n1JhqNyulc93vo9VpuXb9OX2nGrJxQyqdQWWYw689igKPD
      Q7qdKkZHiBmHlVq9hlwY0cDMuFOjcHKAJbSMUS2fHgVSKJXYvSHeeut17t5b5d2vz/F464R3
      3rvG0UmB9775LUSFBqtqwn8VOkdvOGaoSrCyNEsgHKLb6hGKhBBFGfbPCskCGo2aCxdXaDQb
      TFQmfA4LKZuZYHQBrUIgHT+S1I4CCHps7MRLWNwtlpcWqXQnpBMZZqJLXL1yhXI2gWlKWK9W
      LlMuFyiUZ5g0CiQyFSJuAzKTn4B/9pQYa0qNySkxVuw0E6xQE1q+hEMzoTZSMed30ek06IvS
      dSAqg4/G+k2iyyso5C7qnRHDRol6d8yVpXO4/V3K03SC1TYmzV1cwUWanQ5ubwD3pUsEFwvY
      TXp8Pj/JKRJJILJ3nKNvkGMXLZwcxxAFiMVjfOXNr7FisHKUyElSo8NpD3VPZqVeLdHo9PG6
      DOiUZlxOK0qNnngsjmbKTdhl0ZFrTGg066RSaWweGTq9ieDsIlFGJI/3MUpEgOAUBMcSGewO
      N9lMBrnRyT/6z/8x+dYYlTiimDnBKAGAARb/f/be7EeSLDvz+/m+77vHlpGZkftW+95d3U2K
      jZkBJAwIAYII6X/Qq94E6EXQCCNAD6KgkWamxRnONClSFMludndV5b5GZOzhHhG+77ubme+r
      6SGqkhkV5sVmRZWyi80PsIdM4MQ1t3uP2f3uOec7l1YQ1kfIky6ZRIFMSWTeZeDWXJDp1E8m
      fqA47rfaIunr/mmNRvOPHODXxDfxe19VWvLXxTcp5vWtOcCrOl34bcN32QF+E+b42BZIyEXZ
      K00IeO3o5QFaq5u+UMHg8BP2u089WKWQotFTcencEpVsnHSzw0RoMlKrQGfjTNjLwgwSnEtE
      2UuW+cEPvk8qskFF7DMZ9rHZLZSEMddW5mfangZdocrdh6u8+dHHjOpZErUet1ZCPN6IMh32
      WVxaYfn8mRkkuMunv/qMC7fexaUf8ejROr7FIO3OFO2wgs27wtmVszNJ8N1PPsV/9ipnvCYe
      rO7w3ntv89mde4TdRrRmP+HFpRktkmRi6/ewrHyPoLHHgwdP0BqMdNtd7B47eq0Rb3B+Jgne
      Wn1EV2Xh3devcP/2Hc5df4vUzkN0jhAyakJB/0x16EouQXOk4+LyPA9v/wr/mWtMqzuU1HNo
      piMWg+6Z85SNRY7UoT/+HrnIOprAMpXYLsPpBGmo58q5uW98jo89+VGvRTK6wc/vrfP04R1+
      8sd/zM9+9jP+6i9/8Y0M5g/Oo5LHyPKEz+7cI5PJ4fF7WJpfoN9usre5RnWG7LDQm3D5jIfW
      YIrD4WA4nWLQaSiUK2gmHaJ7R/13v2k0RYE3b16h3OyQLZboizX+8mefkC2WsBi1JFOHRPeV
      sxTHvRqLl95DEirYHE6mkxF6rYFsNoXZbCWXTbCzu6c88KiFe/EGo26TRq1Avz/gFz//aw5T
      OdAaKOZTbMxSlkbF4nyA3hjQGPB63YQDAaZSjsbQQK2UZX1rZ6Y6tNpkx2IA+k2K4oDI+l2e
      b0URe2PEeontjfWZ6tD+4BzIR/mxWq2OevGAh083KDfa9Fp19jZWqc1QhxYHUy4suOgMZcLh
      MGNZxmEzIWtMqEZtortbZKszBIG/Jo6rQ7tDXLumxx5Y5HD1E95YmiPosjMank7n8wvkkjHi
      mSpBn4ff/y/+gFIxwc5mksuvv8GtG9fJxvcx6pT3/nM+O7uJKle9LWr1Gg6HC02/yc03P8DA
      iGohhcmg1KnudAgEQtx/tMa1m9dh+RzRRI7/7Pc/plouYTHqabUEBiiTYL01TH39Ducu3yBb
      KGO02bGajVy8dJVzC178c13qM/sEuxg27uFbuIjJrMNpbXD5ow95Q2rid9lohkQyJWnGXctE
      YwW6VjWuoZ5EpszlS1Y0/gv88M0ValU3B6myYhQYwKyZ0FXZEIc6Lsy7sAeWef21N1CZ3Qzb
      AvFYYqY6dDYVJ5FtEvS4MBgNGN0L/MF/dYnyxIV+JJKJRTDNUIcOe2xE0nXsfolEKkV1qEE/
      7eMLL7Ny9gyVXFI59+kU+I0Ux31VejPfRQJ92nt+lTpIvwlz/K3WBP824VURwtMuotFoxhfo
      14BOdzJe813DsUAYyPwf/8u/ZO7iDRrVKuNxn2pdYjrq0B1NaZQLdAd9fvHzTyjkEujMdkRR
      Yjrs0GwNsL2kram0ICbDNp/ce8q5pQU2Vh/SHQx5/nwLQWyQyFXQMMFuVxa3EmslDjNFAl4P
      O8+fkCrUySajRA9jxDIVDLrZoklCKcNn958yv3yO+O5zDrNVbJoBG3t7rO8kMBu02Ow2xS3B
      qN9mdWOX+XCI6XjArz67x6jT5OnGNtnMkTq01elQ1En9QhhrpDWjGQg8WI8y6tTZiiYpZ/aQ
      eirMdsdMdej7tz+hrzJhM6hY29zDqB7x6PEa1Uoeqd1HozfPTIdefXyXWnuCxyzz6f2nmGxu
      Ht2/zagnUaoJTDhSh345abFZK5LMVRhJRWo9PS6bnq3VRxgdPjY2N1AN2xxmSkfCWDYrGs1J
      +ZrY3iY78TxL8yGiTx+CJ8jGg3tkC/kjdWhZWaUZIJ/c59nmPotLi8QjGxwm82SS++wfxonn
      ap+rQyvbNotp7jxcZX75LAxEPnv4HKGUolSrksrXZ4577AvQrcbZ2I3ivnuH7WgGt6lPf6Bh
      2MnjOnOZUbWK2uyk1RSYn3OTzv0ljUaHK5eCPNjM8d//t/+N4s19gQd37lIUBkyBXKFIQG1A
      o4ZiIY/eaGG3ksbgDOBTCKK9rA4tGyyY5Sn+wAJd2cB+JHqkHDxDGCtfb/H9m2GywgSNRk06
      naSaGTDRGzDrzOzv79Gfqjm/eDKzUme04nQcOfb6kwdkimXee/s1ZL2dRjlNPH5AfzxbGMsX
      8OGyW0nGdtAMmhTqVtqdPk63gXQ6TnfQ582bV04+rJGEc+4ag3YN/ZkwTrsJu8PJaDBE57GS
      SycoN5XVoZHHGB0h5EkXldqLign3/ub/piBN8Pv91CspsuUmgY/fP2bm8oaoCgeE54IcFCeA
      mlDQy1RjxO10oNfrEetZquUCdvePcCn4Xl/W4rKqOFIA9yLIOuwWHdJIT1uosVtMYnaHFIWx
      mt0x5+fsdAYyTpcbjVWHBQd9tZFoJEpku4bKYGfOe3IhFxptPrgWIi9NSD+5S7kzInDpMi2V
      hXYpxm4xjtkTxmX4ioKYSiHP2//Jf4quL3D51hsgZNlKNfnd77+F1RXi6pUrhINz2AxTPOEl
      FpaWObc4x3jcx+md58qFs387BwpfAH8ohNVsRqfTolfLaMxO5K7I1be/R9DjZNiT8M8Qxqrl
      02xG4rjcbibtJiOtFaPRxPz8HHabFfVkgM0TxGpSVg5+sJ3j7LwL9WSIwebhzddvYTLbOLu0
      iFErozc7FYWxBh2RtdV1tGYrC2fO4bJb0Ks1BOYXcdmsWMwG0BhnqENLrK7uYndYcLs9VOoC
      fp+HCWquXLiAw2k9EsbyKQhjqQ2kD57j8i8wGnTY3tpmgprRZMLVq9dw2i10++MZOTlqyrkY
      BlsAnV5No1Thze/9LnMBFxdWzmGzWJDafZYWwkynf/sFqOZSbB+kkIc9chURl9PEwc4endGE
      XPIQz8I5Qj43vU6b0PwiBoV5GrQbNLtgNes53I8gtbtI7Q6LZ1eYD/kZdiQCC2cwKHwy1ePu
      kTq020IsusdYpcNssTI/dzTHqnEPuzekKIxl0U55vFdgOexiefksFrMJuS+xMBck4PUyaIsE
      Fk6qUn8lCU7sbzPSubh4Vrlz41dhPJ5VKv5341WWRL4qIvyqfu9pIvan4QCv8sDhZXxrp0Cd
      TueV9Qg7DU5Th/BdJ4RfB1/3N5+2hdbXxZf55bEt0KjT5Cf/9ifk04dUR1a6hR3qIyPDbguN
      akpNaGG1mGeeH7+Ml+sB2s0qjx8/YSTD1t4hZxbDpHef0DOH2Xn0KQ2xTSpfRqOeYrPaFHOB
      CukYt+8/ZunseQ6218hURZr5GLLWwJP1PYza2aJJjXKOTz/5BO+Zi7TKGUqNDrpxi63oAVu7
      ccwG3ZFMiwL5HnQlHt27h9EVpJGPs72fZtCpU6g0j7rSoMVin6EOPR3x+MkaC/Nz1IoZfvnL
      TxhMx6QyZQqJbdpDDWabHZ1ip5EJa48eIQ3Bohvz2Z2HaDQq1tc3qVYLtLsj1HrjjHNxmdjm
      I8a2BSx6mcjTT6j2dGw/f0pdaiGKEhM0L4SxvozcwQaCbMOmm/LwwR3K5QZbO7v0ex2K1Sby
      5+rQcNIBEvvb7CUKLM6FqOcTHOTL7G88oyF1SBdrqOUxNptN8QtQK2R48nyLuYUl+mKF9cgh
      5UyCYrnIfrKIQcvMOW41Kjx6+BD3/DlSkXUShQbNYopas0YiV38x7lc6QHzjHprFdwhrm/zN
      Lz+h2uyTzyW5f/se3WGH/+vf/ZSPPv7RzCDIy3jZATQaDb3+kEDQx2Sqwu9149T2KI016GU3
      bTFDt9enVspj9S9iN+tPOIDN4WQ4HBIOBag0muiYEPZa6amtlLMpGtUiRocfm0KqrMliYzAa
      szQXxGJzUK+V2Nndpd3roJrKCI0q6Cy4HCfV4TRqNb3+AI/PR09qkDiIUmv3QaVCPR1SqlSZ
      yBp8HudJsVeV5kUqtdlqZzieYFaPabQHmLQTcoUqveGY8Oe9hI9DxXg8wGx10pcq+PzztMcT
      zHojGtWYfC5HozVgaT6oaGvVdKnhxTwsc//uXVpqF+NWDaPTQ6OQptjocHZpHqUXuN0gU+pp
      8TksaKdjrC43tXIBg9lKo1qkVCozN6MkMl+uYdCB3+vhzt379FpZgis/RChF6PX6lHMZPIvn
      MSp1iFFDfyTj93t4cO8uUrfPnNeB2B3Ta0vUKwVMM0oitRo13d4QfyBAs1pkP56m3xbQmJxI
      Qo1yNo13ceVESeSxU6CzN97l2X/4E9RLy/z4x7+HKHbQG03cunyJhlTnxs2bX9kWaRaq+TSl
      RpNer0tX1iBIEqV4npoe9K08c+dvoleNKKT2FfPT4YiMBheWkUQR3XRAT23h4CCFPmzi1o1r
      VPJJ1DOMp9MhHm8QSRSRakVi6RJv3HqdUkMk6HEj1IuoZmx9Wo0yqVwRi9uHwWTGt3ieOY+J
      ojjk4soyTaHOaIbtdDIgEdlHpzPg8/vx+EIwaKIRBS5cuIZHFGl2ZmwFpkOie4csX9bhtLrY
      3I4QcNuptge8dfMqLldttjAWMpGDDG2rGuecgzfffpem7EScNrlw/jx9t43oVwhjHcZSZHsm
      guZlpjozPpcVs9HMwpmzhP1eYvG4ouMA2PQqipIKsdXitddfpyZJNFJPWLnxAepxl/T+tmLh
      EUAmmaAmDmgKAjduvka+VKIudXD7Fzi3bKCcjc+0LWdTlOoN3I0mVquFc+dXsKh6GLyLLM2F
      Ph/3pN23xgG63e7XVi1+VRzgVXY8+a7yh+8iBzj2799UZbjvGhk97WN8VSIA/xBSmv8++PLv
      PS6MVU7yv/3rPwK9A6tRx3g0oD+a0pGaCLU8d3/1CYLGzZxXmYi8DCUPTx3ssRvLsjgf5PmT
      +7THOnbW7tPtj0jmKzPFi+BIGOvp+hah+SX2t56RLYsUkns0pDZ7hxmMevUL0SQldei9WIag
      30s2HmX7IEO7nidfLrH1d6hDH5Hg+5jcITr1PM/W9xgNJQrlBgeRHVDpMNtsMyPBj+/dRzba
      GEpVnq5HmA4lDlIlSqk9emMdRussYawJT+7fZqSxopt0+OyzzzA5A2ysr9KqFxB7Y9Raw2wS
      vPWYiW0Bs7rP7V99gqzW8Xz1GVKnjdjqMJmqv4IEbyJhx27SsPr4HmO1jq21p9QEkZrQQpZn
      C2OlD3eJJIsshAJsrz+lUm8S2YnQ6XZIFWpomC2MVc7GWd0+ZGFhnnhkg2S2RDp2QLvbOZpj
      nXqmbatW4M7D5yycOUMheaTiXcsnabYEUoX6zHGPy6MXY/zq8TYGecBf3V6lWznkp794RDn6
      jHpnSLFYxbVwgSW/cjj6ZSg5QCYZoyr2WDm3RCp2iMZkQayUMJitCM065XwOz/wyJoUAi06r
      odcf4fP7SB5E6HRbOPzn6Qk5pFaPRrWIyRXAptAhRmcwvag1VctjYpkiZ0Ieyg2BXqdLs1FF
      rbfisis8II2Gfr+H0+PDatRwcJhEFBpMVRqmwx6lShVZpcPrUmjgrNIwHg2x2h2M+y1ykS0k
      vQt5PEav6pMtVBmMpoSUOsSMBISxi2GnwsLSWcaDAcNOjf1sFY/dSD6Xp9kZsTSnFAhTYVUf
      kWB7N87Qd4ORlKdVqqBzOqnk0pSbXZYX5xVP9OwGmWJPi1fb5v56ArfHg9189FzLxRylUpW5
      M8toFUhwrlRFr5UJ+AOoOGrAV2u0KFfyTMcjSrkMvsXzGBV0gVK5IgGHFrXFj0kLU1SIokip
      UmAynlCvFLC4lYOdsWSGawtmilMPPrOawURFv90k3zUyblUo5TL4F8+fCMAd++4abG78HhfB
      uXn+2T/9MUa9iauXlpFVJpwuN+fPr+Bz/Bo66DNgMpsxmY1H6tB2G/J4hNXhxukLc/XyJewm
      LdMZX+RU7ICqICIIAmaLBZPdS7eWwBm6yK0bV/E6Lcgz9pXtepnIXpRMqUa1VsVkMlJr1DFa
      3bx+6zphv5vpjK1Aq1Ykni4iiU1K5Qoms5GlpSVQ67l+7TrLi6GZ+9nJUGJn95BOS0BtsKLz
      L3MxaEeeTrlw8QYXzi3N3gvrHLSKe5gsDqROG7PDgz8QJux1cm7lMhfOn535e0Emsp8inzqk
      rXFS2LqDRmdBazWxfPYCl1bOA7O3PoexJOlkAnGoZjlkpyOUOUjm8M8tcfniJQxamLVzsmin
      tHpTRElge3uH3kSNTTfh7Q9/l6tXrmA3amc+a4/VQLLUYTKQ2Nvdod0fYTfruHLrfW7duIrH
      YZ5pO+9z8ChSxaZqE41GkFotHHYbb1+a5+qVK9iMGsW19X/XVMcAACAASURBVI8c4CW8yujk
      q6qBPm069HedA3xr6dCvKpL7KvGqFsNpT1S+a4v4NPhKdeh2NcP//q//iG63j9HlRTUdc++z
      X+IJzCNPp0zHI0bjKfJkzN/86lesnD8/cyClN8t0MuTJ6jrzcyHWnz6gPdSyu/6Abn9EqlBF
      q5rOJDn1YpZnGzuE5xc53HlOpiKQj+/TkET2E/ljBEmJBEcSWQI+D8mDHWKZGq1qhnylym4k
      geULdWiFcQddiUf3H2DxhjDp4MmTZ4y7IvupHJlEDJVGj/FzdWilSPDq2gZz4TDNcp5HTzZQ
      qcdsReLU8zEGUz16s2WmOvSzh7cZa+1YdVPuP3qK0aAlW6xRzR7SGkxBo5/ZIqldy7GfF/A5
      tNy9/QCtPOLe6h6TYQux02M85oU69JfHjke2SBTrBN02Hj68R7l+1JREareoCm2QZSwWs+IX
      IBuPEE2VmQ/62NtapT1WcxiNYtLK7CYKX0mCq4UUa9sxFubDHOyukymLFBK7CJ0+0Xj2K0lw
      p1HizqN1Fs8sUc0lqbdHpA42aYoCmVJz5rjHvgA9oUym1MRhSBLPxUnH8iydm2f82V/x8wf7
      XFq0IAy12KY9unoH/0TxVmYjur2J0Bse9ZBtdTC4enTbXfr9Hs16k2Yxzbsf/y5248kPk8Pt
      we08UoduNhv0VUZGbQHjeEKrO2JnqwpvfqCoXWqyuzGUjwI/banNSDYSmA9TbzbIdtvs7mxx
      7vItFkMnI7J6k5VgwIdGrSK5v0dVanH10jm6kyoVscbe7pE69MWzJ4u11WoddsfR/UiiQEds
      YnXfwtEZMxAEInt7iO0ON68oq0ObfJeQGgV0PRmxPUBtcqJuZRlMx8Sie1i8Yd5//doJU1me
      srOfZGq0IY/MCGKHfK4Iqgn94ZhCLgJmDz/wvKUYHPIFg4zqXdQ6IytnFpla/aTWH9PqDuiW
      yxRzOr738ccoTBNif4pZPwV5wmE8xVmDG4fLzng8plHN08gneO9HP8amIARQbnZY8hloDWSc
      DgelZBJP4CJSNUKrwwt1aL/zpDp0qljn3YtuMsKEs+EFYqkUnVYLWWumUa9QyyV4X2HcY//S
      W5z85//lf831y2dZWDrP7/3gI8LhOSZTmWtXVrh08y3eunmVUNBHOKykSPbVsNrtTAYDBFHE
      7nQw7Pewu7zYPCGuXr6ETS8znBE7S+zvURUkBEHAaDJh0OswWSw4fHPcun4Zt93EaEYGarte
      Zndnj0yphsN1lFKxub5Od2LgjVtXCXidMyujWtUc+6kCbUlAa7KgkSesr2/QHky4fu06C3P+
      mbbTyYDDnV0SqRRDlQ6L1cDu1g5iq83lyzc5uzzHcFZFls6OmN/BYLKitfmwG2TKuRS7kQOW
      zl3m/PIio+EMW1nGbjUxGo0RxRZmuxWTy42VMUvnL7CyvMz4KyrBdjY26fR6iKJId6LBqR0x
      UKmZP3OWSyvn0TKaWVBvVI8ROmPEVpszi/OMxj0Od3bpqCxcvXQJi27KcIaxy6wlXmgx7kvU
      6jX0JidSaR/X3BVuXruCy2pgNFZeIGGPjYe7Jay0ycT3icYzOJwuHIFFrly6hFU7YaSwU/xW
      a4JfBak87X72NH2Cvy5Oe8+n7RP8KtrZvir8/0aC+/3+qfLMvy6JlmX5a0/KaDT62nUMKpUK
      rfbrPc7T2MqyzHA4/Fq2AAaDstTgbwuOkeBus8wf/fufEjxzAbPhiFxtbaxRrlZxuHyo5KNv
      yFSWQZ6yv/oQSefA9nk08ovTiLuffkZgYf7F/qrXanCYKTJs1TjMVAj7vUS2n1OVhhSSUbq9
      IYlcCb1GhdlsVkyHbhRTPN2OMz8fJrL5jGgyj1DKUhNFYskCRr0Gi0U5RbfdrPLw8VP8C8s0
      CgkOMkd7Qqk3YGdnH7PZgMlsPiL6L05UpuxsrmMym1l9+hxXIMhAqpMp1ZGqOXIVkVziAJXW
      gN5oRqt5uUO9THxnDZUtwNaTO+isfkatKvfv3KMzmrC2sUNfKDGSdaj0Jgw6pWPfo3ToHnqs
      etiJxtGMO2xGkrQaBbpjFai0GPXaY05byadodMfkYrs0uxM8DhOP795ngortzQ06vT5Sr890
      NMFsNqHVak+2heqKbB+kCXodPH38kO5gwu7mJt1+929JsNmk+AUo548IqNNqZmf9KdJIReLw
      ELNOZi9ZRKuSX8zTl9EoZVjbiTM/FyId26VYb3EY2SZXLJEt1o/N8ZfREyrcfbzJ0tICmdge
      ++kyXjOkYnukKh20qqmi7TEHECoZnqxHjorI73zKo+f7VBtldlYf0hlM+MM//Fcko2v8yc+f
      ENu+T63SojuQ+B/+x/+ZZqnAn//sl6QSe6xtxXn/w3deOIDOYEJo1hh2O+zGUly7fJFxt0NZ
      KJM+KGO06mk26lRKBVyhJSwG3YkFUcomafZGLM3P4XU76A0h6HfR67QplGs0qyWsniAW48nu
      MjqDkUFLwOoLsbP+lIlKz6grki9k6Q2mCPUKOrMTq9nwkgOomAzbDKZqasUELdnO8kKQRr1C
      ryVxkMliUMkUKlXQ6PG6HC/dswoLbYpDMGncSK0KS0vL9IYDrl29wrDXYdhrkcqWGE9lgn6P
      ggOoUKsBlRa3240kNpiM+mSS+3QxUCvkaQ0mzAd9xxzAYjZSbgg0K3kMFjdeh56t7X1s3iBO
      o0x7MKGST1MSu5xZCKNTcIBoJEpnOGR+bp52o0xNkBAadcZqLWKtRLnaYH5pCa36pANYzWbK
      9QYep42K2GXSb2OymNGpZJLpDKVcjuDS2ROliQDxdA6fTY3a4mfj2QP0FhcXl3yMphoKxSL1
      ShG7L4RZIf3jIJ7iypyR/MRDM3tAXerR6/dxyTVS1faLcXXqr4gEy2otJoOGC1ev4ggs4jQb
      ubA0zwcffMigI+ILLbC4fJ7Xb13jymvv8d7bNxn1B9y4fo3g/Dl++NGbeNweAqHQsSPFdqPM
      7u4eGpOVcCiEIEnUmg00Ghvzi05Mdi+XL17Aop/SHyjvZ61ON/KwR60pUq3UOLMUZvXpGlqL
      l1vXLuGwaOkNlLcCxdgeiaqEJDRZXJin1+vhdruYO3OVN29dwee20+v1vmQ15mAvSk3ooNaa
      CLj0FHNpdqMHmGx25kILXL12jXDQp2ArE9mPU8zXyac2MZtMCL0eFouLoVjBFVrm8pVrLC6G
      6fX6ivfMdMjq0+cMBj2qlRK729tM1EZMzjAfvHmT5cU5ugq22WSc6GECl8NNt9tBEAQMFhut
      Yoy9fJNzF1ZYOTNPvzeYGc2djPtUqg2a9TJCu49GJWOymFk6u8KFc2dRjXuMZtCObDLG7n4C
      qdWmUysy1ejZ39qmq7Zx+cIFTKoBvZHywA6jmsOcwLgvsbSwQK/fp9macPnyZW5dvYTDpKE3
      UCbvQaeZ+9sFLLTRG/RotRomgzYDy9Ln4/aPlPK+hG81HfpVcAD4+qTyu8oB+v0ZTvRrwGA4
      mTv16+IfAgn+VlMhvm6EUklv5tfFadOKX0We+mkX0qtqlP0PwQGOk+BGgT/6D3+KI7CAS0Ei
      ZG1tjXA4/GsN9MWkqFQq+h2BeLaEaiixFy8wF/IT2V6j2ZmSzyawGnXsxrIYtGrM5qMI4xfK
      EF9cjVKW5zuHzM3NkdzfIl+VKKUPkTo94ukCJoPuhe2Xr2Gnyb0nmyyeWaCQPOQgXaZVzVKT
      OuwfxLGYjZjMf1vr/GX7w8gWZqefbqPAejTNpFMnVayRSyXQ6k3ozeYX++GXL1ke8fTBQ3RW
      N/RFHj3bwqCbcJAoUs/HkbVGNAYTOs3J36tSweazB8gGFybNhMhBCr3cZ21rn45YZSirQaXB
      oNeevGdgd2MVsSfjcRh5eO8BBp2Ke0+3YdKlNRgzHU8xvxQJfvkqJCP0NDbMmgmPHj5AanXZ
      3d1lMh5SlTqoZRmz2fTC9mVUC2kanTEOq4m9zTXaYw17zx8xGE7Jlhto1TJm88m1BSBUcqzv
      JZmfC3K4u06x0SEXjyJ1j+bYqNfMtO23atx/us3C0jzZWIRYpoZQSiG0JHJlEa16qrg+jpPg
      XJT/5xcPGHQEctkCT58+4V/8T39IX8ry0082UA1FHv3iT9jID3n96uw0iJcdAECrNdBo1Gi1
      BmjUUwJ+H9HdLSwuP3qtCo08JZ5KUy0V8YSVdYE0apmDaIylc+dh0CVTbuKzGyhVqtSaIkKt
      jN0bxKxAgg8OElwJ68mOPTSz+1SFLqOuQK/XptrsIDUqGKxubJaT+fH9doOt3Sje8FkKhRxe
      o4xsdFDI5+h1W5TLNTR6E26HUo2EGpU8Aa2eTqNCNp1jaLRh0U2QhArpfB0ZNX6P6+SbdNik
      2rPSlUqEQmGEZo1+WyRXqjBVyxQyOTojmTnFemLot0UqUo+wR8/6Vpxxp0VbpcGokcmlEtQ7
      I5bmQqhUJxexVTOk0D2qCbbqZEZTNYVKGaNBTymfpVITmF9cRKNgazIajkiww0a52WLYaVDM
      FTBabVQqRcqFIqHFZUUhgFgyi9sCaqufdHQHg92DWTOmVK1Rb4g0qyUcvrBiDcT+YZKLQR3F
      qYdmJoqst+CxGSg0JRq1CuVC8fPWrl9BgrVGC++88w5+n5/D6A42p5dLK3O4Aot4zHocdiNT
      vRPnjDY1s9BpVtne3mE46lNptBBECY/HhyA0iEV2ECd6rly6gFHdp63EVIBGvY5aq6bebFJv
      NFDJI+piG7MrwGvXLmExQKurvBf2u8zc3cxhpv15B0rQaHWoTG7eee0qLocFqdVStO33erQl
      kUKxgEED+3mRXqsOWiOv3byJ3+ugNcN2MhR58nSTUb9z1PPWqEYzGVGud7hx4w3mQ56Z46Kz
      Uc/soNUaqVUr7GxtUW8P0es0XL58gzNzAQRphi0ydUEAeYLQaKK3WNA53VhHLebOXeHcwhyi
      JDFr4xSPJYgdxhBFkUZ3wsKcD4dBhzt0hpWzy4x6IjPOKsin4mxHY0itFq1agYlKj9sbwOTw
      cvnCBXRjkfZQeddtM0As22DUk/D4PAj1KnWpg9Ud5LVrlzDrZFrdgaKt32Hk4U4eo9zG7fMi
      NBvUmg3cofNH446Ux/0Hlw59mn3pafrPnhanSYd+lWWN3zUO8GX8RqpDDwaDr03sdDrdqU5j
      XsWEftcX0XcZxzhATyhTaI5w2r6o+upz5/YaZ84cl0Zs1TLsZ9sEFERKv4DSAi5nkxykS4QC
      PgatOqlyk1Iui0mvYj91FAk2mUzH8ohG/Q6rz9bQG41UGgIuh51qPklnqqeai6PWmdiNHGA0
      6DCZTIpR5Mmgw+Onm4QW5qjmkkSTRSbdOlWxw+FhArPJgMFoRMXJxTjqd3j6+CkOX5BJt8n6
      XpxJt0mm3KCQTqIzGNEajS/SoY+T4DFrjx+hs3nQTvqk8hVGnQa7sRxiOYtKZ0StNyqnQ58S
      g1aNZEnC7TCwt3uI02Ygli4wEKuIgwmT0QTT51vZk3W9EbJViYDXyf7uHjaHlfv3HzCZjKhL
      PVTyFJNJOZW6kk8Sy9UJ+tzsrD9BGmgYi3nKrSG5YhWdWsZkUq4qlOpFNqNpwiE/O+tPSOSq
      COUsUrdPKlvCqNfMtB10mjxe22V+IUw+sU8sV2PYqiKITbIVcea4x16V7WqGh88S/PtGD2s3
      iTZ0Hqts4F/+d3+B7+INYnu7nL94hfjhLu/+3h9w49ecjC9QKpcoCUNk+RIHyTxjeYzJYEQU
      RfLZNNVChvc++v6xm9LoDPjdNqZaI8P+UVtQp81EqtXHadYhCBKFXJ6OVOfKrbcIek7W5h7s
      7tIbDRiOptidHjSNLNtbO5w5f5Z0vsygLbBy4w1CCrYanYGA10F/OCa1s81QYyNfqNEeTpkM
      e9QEiZXL1zgz5z9hq1JpCIZCDPo9dDYnk1GJcr2KRudCaBTJVFosnzvP5fPKzZ+/NmSZg1iK
      gdYE+FGpp2h1RqaTAUJbonAYPwqovXVTUd/H7fMj5muACpMWRFFE6vSQJJFqLUnOYOOjD99D
      q7BrKzU6IE8AmVKhzFlPmEIiQlZzFl2/Qjmn4cOPP8aoYJwp1PGYp7QGMleuXiOaLOKzG8nl
      MmTKLaR6kdfe+QCnwmFFPJnncshAWpjgtFioJhMUxDL+hUUagkQ5q+HDH/zghCDXsbvQ6I3Y
      bBZ++KPfwW6z4/V4sOhhpDGAPOW9Dz9CxxSTxYZFoTD574JKrUaWZSSpSatZpVCpcbi7S19j
      58qF86h7dcT+cXbVqubYOszRbVbY2YlQrDfJZTLsx2IkY4eUhD6v3byMQTulKbUVxw2EgjBs
      kSnW2Vp/Srs/JBQOUevAB29cxWIx0Gwo9xdr1XKsR9MMui08viBdqcFgqkLWGHnz9ddwOy00
      Gg1F28lQ4tHj50xHPSqVClubGxjtPqqVCjduvUPI56DRVLY9DWR5QktsUChWEYUakZ1tYvEE
      W5ubhM9dYTkcpFJvzKy/XnvyiMFkiijU2d+PkqsKOAxqnMElVs4s0hMrilFVAO20R008SqX2
      BXwU0glqUh+bw83lCxdQdSuIA+WBLXqZWK7BsCdRLJQ4sxTm4f1H2HxLvHH9EnoGNFtdRVuP
      zcjTvRz6SZtGs8FUnhIKBzF7z3DpwgVUnTJi/+Su5DeSBJ8miHYaDgCvThz3VRL332YS/K05
      wGQyeWX1AN9FdbfTOMBp6gFO6/DfdQc4ToKlKnuJEr22iMvlOtUf/iIv/+WrnE8SSRSYD/o5
      3NukM9ZyuLPKcAKFqoBee0SClSLBKhUcHBzi8/nIJw/I1zs0S0mGUzXJdB6TUffC9svXeNAh
      lS/jdjmp5lPE8zWkagahOyKVTGM2G1+QYCWkEwcYrS7a9TyrWzFaQpHDVAGhVkZvMKIxGBVr
      gmV5wsFBDK/XA7LM/sE+Rq3MzkEGoZxDozeC1jCDBMvsba6C0YVRNeTe/UcY9RrWNvcZ9QQm
      Kh1TWYVep1wTnE3s0+hMcdktlFL7jDQmNja2UU+7tAYy0/EEo1GZBOcSB+RqLbwuG5vPV1Eb
      jGytbwBjamIftTzFaDQqOkC9lCGRb+D3ONndXKXbH7O+vk6n06EqdtFrwGhUFuRqNyvsHGYI
      BnzsrB+1waoX0vTHMulsEaNeO9N21JV4trFHeC5EMX3IfqpCq5aj1elQrEnoZox7nASXU/zk
      j+/y2pUwt3/2F5jnl8ht7eE7d5FBq4InsAidPI2JA7/dgMkR4Hc/fk/xhpSQz2bR24/aEOVz
      OYxdmXK+iMHqIFesUsnree+jjxQJUq2QZj9T5OLFi9hdHuqZFCOtk2p0jaKkRqoXufnW+zgs
      J4N0KrWOfv9o75jL5Sm3Jlw94yebPSBV7tOR6ly8+RZ+58l64mFXJBKNYvGfpZbNoTZYuXTl
      ApHdXVKZNJWayIWr1xTriUHFYHQUuGk3SuwcJqgWMmjtQVqNJMmSyLnz55UbkIwERjof+UwM
      vd9Bqz+mXswi683UKgXiqQKB+WVuXTl30lYes76xzeXX32M6HpCMrFG3jXh/Qc/tgzLWaQyr
      Z473Xr+uSIIdbjf1bBV50CJfqSP0xxj6HQ6SWcaDHjmLkw/ffwcFbSvyFYHJ53UjRoOBcrPN
      tZUFkqUWtcIB5ayeD77/fcUOMalcGat2Qmsgc/XadfZieXSjMan4PrXWCKF6RILtZgVhrESa
      ZY+ajDihksli9C6SSx3g8oUoN0SKWR0fff/7J9Kwj600tVbPD9+7TqbSBvlI/OjSa+9zc8mO
      RmtCGowpFmpMpmp69RwL5y6cfAJfgUAgRC6XQ5REZNVR2q0/EELW27hycYWJVKDRVWZXgijS
      KBcp1Ro8e/yAIXqahTi2wEXeuXkJ1aRHtancN7ffEtja3CBTqoFKZjId0xQFhmo7H799DYNB
      S6WirJbckgRakki+UMDq9SMWc+SyOUJnr/Dum29ht+mpVMqKtvJ0xOHODolUiky5QbtRwWD3
      UK6Uee2ND/C7TJRn2KIxU81EUGt0DFQ6jAwY6u30qnlWrr/FvM9OrjTDFjXBgI9iqUilkKbR
      HsKow5PtND/44A2Wg17ypfJMEvzs0UOGU2gNpwQcFpwWG73JiMWzFzm/tIBYzdOZUVKsnvSo
      C10ESUAQRUbDAfXWmLfffI3LKyuMhSyNnvKWzaSdksg3GHQlCrkCS4tzNNsdjI4gb924hGrc
      piooR7+dFgNrkRyacRt/KEgumyMQDGEKHNUxT5pZGt8YCZ4M+Mu//pQf/7Mfo52xBzzNvhRe
      3X76NPgucoDftprgL+NbJcGnwWkm5TT4LqZC/GM69NfHMRLcbzW4fe8hdk8Qs/GrW9JHdzcx
      2L0YlKIhKC+kSiHFbizHXMjP/u46zY5MKb2PWqsnU6yh16peFGl/+cEKtSI7+2mCQT/yuE86
      X0as5hG7I3L5IkaD7kVxx5ev6bDL2laEcDhIvZQlWWig7jeZGOzsRyKYzSb0BoNyn+BBh2fP
      1vEEQujUKhLJJKpxj0S+SrWYOyLPOgMahYUgyxM2155htHsx6jQkkglcLheJRJJqMYfOYGKq
      1n0jkeAvp0Mf7G7QnepwWAw8X11lIk9Ye7bKWJYZyVrkyegYCX75KmXi5BtdfC4bka11ZL2N
      Vr1Ap9ulLvXQMH1BKE/UXwtVmp0RVrOB5P4eA5WB+N4mU5WafKV5bI6/jK5UZy+WI+D3UEgd
      Umr2aBSTjNGSyuRfzPE3iWMO0Mzs8JM/+StqgsS9X/6cWr3KT//jn/Lg4QNUOgP/57/6N3Q7
      Df7kz/4aNCqEcp7/+P/e5r13Xj+xeJQcYG9rHZPdS8Dr4vmTx4TDdtoTF3sbD2mILeq1OuGF
      BTQKtaaT0YDo3j4L586TOoxQquXZjyRx2PTsHGToijXcgTAG3cka14PoPn7LlJraRym+Q6Ei
      sOJVU+hpWH2+w6hVx+IOKNaagkxmP4LBE2YoFFmPJqjk0pisFuKxA6o1CZPVjt2qEKKXp4yH
      IzrDCYZpl9vPNnEb1eyky/TqSRL5FnqDAbfT9o2/SaVGjVKzTdil5enaPg7/PDajGklqkErG
      afVhLuhXTIeeylOq1TqhgJfJZEK9ViN+sEujJ1POp2gIPebnw6gVbEfDAZWmgMdhI12q0mpW
      8Hp8RKNRqvUqtWrj81Tqk793fz+GXjXA6AyiU02plNKM1A5ysXWSRYGOUMMTnEOv/eZkN4+9
      vlUaLXPzi3jsZobjMd1Om+u3bnJhZYVkLEa9UqPRG3NtZRlBahM7PKRer/PrbnZCoTkSiQSi
      KBKcC5FIVyjEtzh37W2uXjzPoJak2lYmwZIoMhwPqDcbNOo1Mvkafq+TZl/Fe7cuMRlIFGvK
      0Vy7Rc96JINq1GI6nTAaD0mnMxzmBH7n3euotJDP5xVtB50W/fGQRqNOsVKjVi5ic3nIFmt8
      8O47mE1q8gVl28mozd17T9DII5KFCt1mhXi+TCmb5bW3v4fHriM3Y9zTQUZsSfR6XZqNOmg1
      DIcdpioDb77xJmf8ThLZ3GwS/PAeI9SIzQqf3bnPoN9GECW8c8ucX5ijVkjQnkGCG6U8z7ej
      SK0WQjnPaDrl9u0HXLj+BpdXVuhXYlQ7yivGoJmSzNfpdSQeP7jLRGOmlovhDF/m3ZuXGPea
      lOriN/SMjvAPkgP8Yzr03w+/zZHg38h06NNM6hdBtK877ncRp5U4/66O/U3gGAcYdASanTFC
      o4Ld/nd3gfkqKPaBLWXYOcwyF/SRiUdpjTRUczGGEyhWBQw6FXq9MskppGM834kSDs/TKGWo
      dybUcgn6E8gXyhgNWvR6g+IXYDIeUihWsNttxKNb7MXzjDt1SkKXaqmIyWREq9MrkuDxoMuz
      tQ18wRDjrsB+skijmCSer9IRGkdpwVr9DBI8ZWdjDZPDh0GrJpvNYtBCXepRzqYwmExMVNqZ
      keBYZAeNxYVRp6GUz6C32MnnsrQaFSYaA9OpjE6rUXzWh5EtGu0xbqeN3a1NHL4AxXyWYUeg
      M9YiT4bo9XrF5yXWivRlAwadmsj2JqhVPH36lKk8pd2folFN0euVkyG7rSZCZ4TZqGPtyX2a
      3SnZ2C4TWU2l0To2x18et98W2E/k8XndyOMB+VIdPQNqYpdcofRijpUwGfbY2j0kEPAhVvPE
      83WGYoVOr0up3sagVV5bx0lwept/8b/+O1L5FF1pQCoV5ed/9ueky01u/81fUmi2ufPzP6fe
      FPjF7afUaiXy+Qpnlk4qIytNyvb6M2zuID63k8l0TCEf5/lGAqNBTTKdptkQCC/MKyoW25xu
      upKALxAglkzRbTXwen1HjZlTZQatxguCdDKnv0euUiHg8+Hy+JGadbLJQ8IhF3ee7TPtNLF6
      Qpj0Jz+IUyZkohH07hD5TArNuMv8pZt0anmiB/vUGm0sNqdiPbEsjxn1h4jdARb1gF8+XOXc
      mWUq1TLZ2DrxQhej0aTYn5iRRLrcp1Er4XNauH/vU4xWF0+39ph2q8QzZaYqHX6PU+FZyzx7
      /ICFc5cwj4qURzZKyX1Wdw/RMyKRiNEZqAgHfIoOMBQKlIYm3JoeD9a2aPVlVhZ85IoVctkU
      gtRn/vN64i+j3+1QEQS8bjcBv5tqo8VhZBerzUI8laReE5hfmEetMG4kuo962sPkCpI9jJCv
      VmmX08QrDeKpPD2xgTc4h07h5PEgEsGuG9LS+zGqp5SKBYIBH1sHaUrFHLWXxn0Zx/+SSsWP
      /unvE3IaWX3wGelSjcCZc7TyWSRRIBE/YHfvgHQ6w+sf/YheOYHNrxDGn4G5uUWi0SiiJHL7
      s0/Rmx143RZGGhNXL5ynXYxSkpTZ1aDdQGtx05ZE+q0GUnfInc9u4126woevX6LfbpAr1RRt
      R70OW8+fkynVEMsZnMElwnMLRJN1fvzBDcbymHQ6rWg77LTpDnvU63WYjkkWGgiFFP7lK3zv
      g/fQ6SYzbaejDp/dfYRePeEwU6DTrJDN5Vjd3OOt87m8rwAAIABJREFU936IwySTTKWUH5ZG
      TyV7CCo1qXQKQRDZOYgjVEtcufUuQbuOaGKGrSwzNzdPNBKhNZBJRbdoSh0GrTpLF6+z5LUR
      SaRmKjyXC3l2I/u0RjILPicet5tme8QH773DuYUwhVQUaYYcqVAtsrYVQRRFDg9SXDg3TygU
      YqCycHnlPK38LqUZJFivmpDK1+h1BCqVEsn4IeVak97UzPu3LtGTKuQqygcdFqOWncMck0GL
      rWf3aY9V3P30U1YuXOTSyjnauR3KCj2Zfz0SPOzwb/7tT7jy3u/x1tXlz/9zxJ//9C/48T//
      54pdv09Dgk+7r/wucoBXGQj7LmbPfmP38G2dAn1dhTV4ddHJV+UAp73nV+UApxn3i2zfV41j
      HAAgHd+nM1IrB3b+HlB6OKNei71YhoDPTToWRVZrefb0GTLQkHrodWr0ur8lZi9fo16LvcM0
      Ab+XyNYa+VqbUedIniRfKGI06I+RupcvpiN2ozECfh8doUIiX2fSqSP0ZSrFPCazEa1Opzgh
      k2GP5+vb+AIB5HGfWrNNq1Eilq3RERuYzUZkjU6xJhggsr2BxeVHKw/Z2Ipi1k7YiqYZdSXM
      ZhMjlRadQuDv74svp47Ho9uM1GasJgOlYgmrScPd+0/R69UMZT18ToK/sH0Z7WaVvqzDoNOw
      u/EMqd1ne3sblUpFZyij4YgEK70w6uUce/Ec4aCPeqmAWqvhwYOHoFIpzvHLGPYkYukiXreT
      YiZOZ6ylXkiCzkAuX8Kg180k318Xxxwgt/uAP/tsE5V2wi/+9M8o1as8WN0jf/CcSLrM0zu/
      oi5K/OXPP+Hy9Rsz0yBA2QEe3v0MvdVDwOvm4YO7FGot3rp2lshhmmwhhyhIhOfmFCPB3U6P
      ZjWP3T9PKOClVs7THqhJRVfZS9cYdcQXBOnLtoeRHYwMkIwB9PKYYj6Lz+clG9vg0W4euStg
      94Yx6k5GGKfTMaloBK0ziHY6olQpk00c4g/6ef58lVqji83pxqrQn1iWR/Q7AxqtLia9lna1
      RDSfx+8PkYo8JFboYbGYcdos3+zbUIZGtUKhJjAfchONJjD1K8SHZmSpRDwRozfWEgx4FIUA
      urU0pZEZr03FgztPuPbmW1i1ExKZPLlsGqk9ZG4uqNgrdXPtCS7/Ah6XjUYiSs+9xKJNxd5h
      lmIpR6PZYn4+jEbhC7C3F2Ey7GBxh3j+5D6pdBydyUN87yn72TqDtog3NIdOczr5y5dx7C+Z
      7S5quUP29g9xz12kW4oRPYixtb5KPJGgLrapFdJsb0fozlDp/So4XS4OYwe02i3OLp/B6XCR
      KQl8/3sfcuX8WcTMDoUZ7KqQ2CMnjOi1RQqZFOHlczTLWWzBC3z42kXaYplUoaJoa9LrOEjl
      mQw6RNaPNPcf3buDybfCP/ngOv3xgHgioWg76nXpj3o0mk3aLYmd3T38oQV2ogm+/+H7qNVD
      4vG4ou101OPewydYDGqyqQQH5Trn5hfZ3d3m7fd/5/8r78x+48iy9P6LiMyM3JhMZiZ3kRJJ
      rSWpVEtXL9MzHszSXp48frHhN8Nv/j8MGPaDHwzbGL8asGHAHthAj6equ5ZWValaJYkSSXFf
      k8nMZCZzz8hYMnY/JMWWxGBVT6kHNfAcIACCyBMn7j034t7vnu+cS1K22b1A983ER9M1VFVF
      6SoU8js0SBE52WT0+vvMjMR5vr2He8EKptWos7Wzh9JRmJ4dZ319i2bP4u/9/k+Ymx7jaG+N
      bnB9Ki7NzLK2toqiKNROjsnnjzg6UfijP/wp1+fn6R4uU+kF48Ow4FI+aaHrPRbm5kinczSr
      R4xM3+In926gto45qjR/R300kNcwgI/juAiiOPgyAK7nIQrC6bHKPoIg4roeoYDtxpclCAP4
      vofr+oiigOe5iNLgxGXxNFnec13E07Im5/gprovjumf5voIo4jkOgiQhwOB+YrDuC8qwKIr4
      nofr+4iALwiEJGlw4PRpm1+f1n3fw3FcJEk6u48kifgISKKI73tnfwfZtW37rNL1QFfC90GS
      RMDH8wZ//06j176P81LfOI6DJEl4nnfWf67rIoVCgTOA49j4voAkiQOfhELgc7bt+UI36KBu
      z3PxfBAFAdd1EATxrNDZb/pPCiyA/PL48D0PQZTwPfecj3+Xs+XfGAi2LOs7g8qg2j5/Hfm+
      AOWbRK/f5EgoTdO+ky5wVjD2u8j3CWJ/Vxsd50Bw6eiI+FDqlYCB2u0ghCNIosD6ynOyE+N8
      2/B0HOfMmO+5NFptJM/i8LjOyHCKk3IBW5Ap57exXJ92VyMcFk9rd57/ImpKi8NSjUwmTa10
      iGL6mL0mvb5Du9UmEg4RDocDO8f3XJrNNvF4HF1pUap18PoKfS9EvVpBjkaQpODcWvDJ7+4R
      H07j6Mog5c/oUjrpoKtdYtEInhgazCgv6SutOoRjlAv7xIbSaJ06a+ubyLJMvdXDUFqE5Qi2
      J752vNJvpNWoEYkmwLPZOygwlJDZy5fwbR2kCJ7vIYni2Xlsvu+jdZuU6x0EW6feNUjEImxv
      bBAbSrG/d0BYdFEt8N3BzBR0PkCnUaXZM0klYxQO9ghFExQODoiEBbq6jYhH+HTT4PWrr3Y4
      aWsMD8U5PsojyEkaxwVcBJodjUhIPPPT62IZKgdHFTKZNHq3jSOE6dTLaKZLq9X5Rh97rs3B
      YZHMSJpifodCpYno6FhWn6bSJywJgXZfCX36jsp//fP/wJ/+038BtkGr1WBjPU9cVMjNv03z
      pMbY2Bh674S9hss//7N/GNiQ16Wvq5QqVS5PjXFSKbEwO83KygrEMhitElev3eKgXGMsm+H9
      H7wXSFBybIv9rQ1mrlzG7Bvs7R+h1OvcuDXH4maFmzM57r73g0Aga+oqR5UKuVwWw3KpFAs0
      IxJ+f4WlvMm718a5ee8DEvJ53WZ5n9XdIhNX5tlcX6VQbhAfinF1/iqPHj9ldPwyd96+Syb1
      ctluH/Vkj7obptNQaem73Ll+Bclz2Fhfo1TvMB6zsEIT3Lp7i8uB+cQex0f7SENj6OUdVle2
      6Fn38JUqB/ttxNAQ81dvsDA7/mpbLZdq+YidxgnX7/0IfBdNafPsywcolspBKUtEMBmduMyd
      mwH5xIDjehQLh0xnZVZXt0gWSiidDlsHccIhgdzoJd5/561A6sjW7gGm4zI9lmZpZQk5vkWj
      ZnDt2gzVVofsSI4fffBuoK5hmLRrJfqXL9OrV9CTfZYfPObmzTmWdipcuzTKvfd/ELj5sr+1
      iW1qHKuzjE5MU1nbxEtHeby6g2MZZNLBdl+5U2FtEXd4gtUnX/HJRx+SPzpmY22J8Zl5wqJH
      bmaBfrfN6vNlllc3AjsvUDyP0lGeve1NXCmBquvMz10mGpWYGJ+iZ8O1KzN0jjcoNF4/bmgg
      pmniOBZKr0ffNDEtk0QiRrXr8KM787QbJfLlYBDsex6lwwNqbYXD7VWkxDCW3sOWJ/jZj2/S
      01V294LBqBSKEPYUNvaKzMzOEY5EmZmeYmP3kJ/+8AM8R2Nnd/ecntrrcVyt0W03kAQP0/UJ
      xVLcujZHNBrl3R/8HlHZZWt7+4JO81HaTY4rFeKZCVIxGb15TMsO8ZMf/phM1GN5Y+uc1tH+
      FmIsRSIeZ3dvH62nYHoePcNAEnzmb9xiOhPl2do27gV86K21FRLDGXqKgi8IGPqg4NiVa7e4
      NJrlYHPpQhCMa6MZFrrRZ+HyZWKxBIm4jC3KzM/M0Nh9QvkCEFwr7qP6MpahYugqR8VjEokY
      tZ7LB7fnadcOOTwOjvaHQyL1loJt6phKk/GZBZ4vLfH27dtcuTRDfecxx+q3RIJty0QMRXBs
      E9cZgB/btolHo5i2TSgUxvfcM+AXu6BEBQwG7ItbO7ZJT9WJhMNYjkcyGcc2DcLRBKauEo0n
      EfCxTBM5FiMSPn9Inm2ZGJZDLBrBMU2QIgi+gxgaLM1syyQsxwK3UB3bROlpxBJJcCxMxyMm
      hxAkGUkckOWEkIwkBKzjfR9VVZFjUXzXxfEEQoKHg4gcDuF7Dq4vEQm/TErzURVlEB/wPeRY
      DA8QfAHfs7A9YZC4g49pu8Rj0YBiXj7dTodQRCYSDtPvm8hhCdUwSaWGEADTsonKkVfKsxu6
      huV4xOUwLiKSKGDoOolkEk3TGRpK4Hlgmn1isfjgXq8vN3sKLhKxWATLMIjE4hi6TjKZxPd9
      TNMkFo8H8nlc28J0fcIhEatvIMeSWH2NSDQxaK9pXlzfs6+j9y0SiQS2aeD4InJIQAxFkUS+
      0ce+76FpBnI0gsAAU6m9LmE5QTgkXmj3b20k+PsAZp7nfWcKx5s+85uA/jc5J/hN+it8QfDw
      t5HvK4fhdbuv9LpjGRQKR1jOq1NFTwkuNwKws7MT+P8XW18vX7rSptpoIwoC9WqJnm5SKZdw
      bJNGW8G27YCCWKeVll2HnqohCAKdZo1ytYHSqtPu9qjVm1iWddYp5yOyHl1FQRAELKNHvaUg
      +A5dReXkpIb9DQPI9xxKpTKe7+M6FkpPwzRU9L5N7eQE2zJxTpcSr7dXEHyKhUMcD1y7T6F4
      jKX3qLcVmvU6rmPj+Ofb+uJqnFQwHQ98j+JREcd1KBbLdFoN+paNffqRCYfDr10hWvUquukQ
      CoXQNI2QJFAuVzD1Hn1nsNsVDofPwLPv+zi2SbenonZbnDTa+L5PrTLwk9rroqoKzU7vFdD9
      XSWova7dp1prIggCaqdJs9Oj26rRUV71cdDg912H8nEFAEPtUqk10botlG6LWrODaZqBdl+Z
      d9uFNf7jf/mf3Hz3A5xei7fv3iZfPObp11/zj/7Jn5FOxDCUNluHdd596xI7FQNPr3H9+m9X
      H0hXFZ6uHTD1D/6YdrNOY2eDStPF9zRiQ2mmxid495275yirAKqqcFCq8s6d2zxfesqla7dZ
      +nqJq9dmWdyqcGd+kttvv0MkACD11R67+SM+eOdtNja30SwXJRWj1CixfWTxwa1L3Lz7LnJA
      padacZ+lpU108Q+ZiHkUjmtMpURqtsz6s0dMTC1w5+07jAydn15936VaPER1I8yNxVh7/ISD
      8TSdjsEQLRi6xr17txjPBOReOCo7ByViJ21uX5uhWS0PKsulRvHUIqaQ4tqNW1yZGj2v60On
      WaderPPTH95hfW2bd9++Qau0y9pBCNmzuHTlJjevvkpj13o9DisnTIyk2Dk8Zuwn76P2VEon
      bWrlXSKxMSy3z8TEJd6+feMbPP3dZHtri56mk8pkUTWVg6MSjWqdq9dmWd6pcmtuirv37gVG
      gg92Nul220jD40iqxs5unn63TjqboamajGUneO/dO99ChwbG5+7wzuwwmqGzsrzG3d//GQuz
      E9SLu/zi0895vr5NrVJkfWODxWfLf60G2o6D67oYZh/X8XDlEebGY8zduMvlqUmOtx5T6gZ/
      jSVBpFGvoWo6Y+PjbG9tEQqHqHYt3r85Q+34gP1ScKEoUZLoNGu0exowCLbkC3kqLY8/ev8q
      7W6LzZ29QN3sxCWSsgiejY9AvV7D9XxqbZ0fvfcOltllc+sCIOs4eKKEZfTQ+zahkMv0zDyC
      IHDvvZ8SRmV1/YLNBGGwnvZ9F6Xboa5a5NJDtE7yzFx9l1TIZnFl/YKe9nFcD8d16BsWptnj
      5LhE24/zB++/zWhC4tHy6rlIsCgK1Ot1jg7zZMcmMAyDg4ND4hGPRqtLanSKqewwOxvPaOpv
      lvIa3GQf23ExzT6F/D5jk1OEwyFqisM712eolXY5KAeDYEEAy3IwzT6VYp706AThcBgxfYWp
      8QmON776dhDs2iaWJxKNSLRaHZKJGGJYxlC7SKEwpuWw/exLvlir8q/+5T/D9QQiITHwCPqg
      gJLW69B3BJLxKKrSQU6m0ZUOubEx3NMk/KHhdCC4MlSFeqdHLpvFsw08MYrg9hHlBBFJoK9r
      RJMpwgFRVcvQqNZbpLM5YpKPZvukhxJnU6ptGohygrB4nsbtuTaNlsLIcBKz36fT04jLYfou
      jGbS+K6F7YdIxqPnglm+51KtnpDJZnBdj25PI52QsfwQ8WgYwXfRLY9UMh6IAbrtJrHEELZt
      0Wy2yI2NoakamZFhfM9H1fsMp5KBwL3ZqCEnhgmJHo1ag1gigaZpTExOIggiaq9HeiSNY/+G
      0qL3ujQVnXhEwvIlRobjdJotoslhhuIyCINosqaqDKfTRCLnNyveRFzbpKv2ScSjqN02jhgh
      HgZJHiIsDZJtYskUoYAZwPdcmu0uQ8kEhtZDtzzSSRkxHEUSxbNnfn1s/K0sj/4mVNnvK8f1
      TXn13xcV+03svomfvs9E/pfllVfJ91wajca5/WGzb2D3NYqV+osf0m538Fz7bBlUzO/Qf2nj
      52Vw5Xkuqqrh2haa0cf3PGrVYxqtDqqq4joW7W7vjD4R1Dm2aXBcGdSztPoGlu1i6CqO69Lp
      DgD0C7uvi++51Gp1fKDTalA5qaP3uuh9i3a7/crL+oKncnaJIp1O55Qf5dNqd3AsA71vDfbJ
      /QGPKBC8A+1W8/Q0Rp96vYFrm3QUDaXbwXWdC7OyOH3WvuVg93VKpRK60afV7qL2uli2g+0M
      ZqsgQKkpHTRjsJwcUCV8mq0Wpq7St9wBV+h09+n1Ntt9HcO0kUSRdrOB4/l0Oh0c28QwB2c3
      XHSYuW3qdHoDaoauKvQ0g3azgW1bdBXtzE9B4rkOujE46VPvdelpfZROC9OyXvFxkLyI9sNg
      Jmm0Omi9DoaufaPd1+jQD/l3//m/MTmR4y//8iMMy6Zbr/Hzv/jvHJ60+fijj0jmZkjR4V//
      2//ESFLkf/z8PkqtRLXRZu76LSKnq4CXlxJ9tcPabp6ELHBYrjGey9Jp1djeP+KkWkSwTB6v
      bmKbNqNjucAvS379KUddh9nJMU7y2zRdiebBc3q2z2dfPSPk22Rzo4hBVOpuh63lReTJq/hG
      h+XVTbqtGtXyNr96vIcs2KRzY4QClk+NyiHbm9s4sQzVvedUOib1apFS8ZCV5ysomksml0MO
      iEDbRoPFZ9voto9RL7BVatFr1zgslilsPaZQd8hkRwLPvQWHwv4+5XqX0ZEhNlaWKdVaNE9K
      bO/vUD5unhXkOj8QfcrFQ/aPjpmZzvHo6yUEq0cxv8tK4YRq8QAhlGQkPRRIhlt6tkj5pMHs
      9ASbq0ts7x7QaTRY2dqlWi3juCFyuZHAaO7z5WcUShWuzE7z2Se/IJ6MsLV1xMrKEpV6HbPv
      MD4WfLax0mmyVygyOT7Gwy/vU6xUaNSbHOyssbxTQvQcsqOjgUvk/PY6R/k95LE5Nha/oO+F
      KR3usV2sUCwW6J/afV3vlRkglh4nK5t8fv8Bhtbi68dP+atffMrk5TnS6RS337rF3sE+q8vP
      SCYlKorNz/7gxxhSnJDV4zC/z97OPq9HAEKRKK6lI4WjaD0V07bBsbj77nvEIjKp0SmmR7OU
      9xbJ14MjwYmRHK3iHh19ENDo9XrEojJCLMfd+QmOC9vsFYNBsKkrkJ4iKZgkIiLzN24jhcJI
      sTF+/95l6o0qG1vno7kwCLBEo1Fs28RyXGrFPXq2iCQn+cG9u+hqg9W1i6LiPhE5imubGLaD
      WT+g1POJhCXu3PsRotNhaXnlAlWfWqPNldlpxEiU4dFJxtNxopEwb915l7ho8PDZxbr1Wp25
      uTlsyyMS9lF1k1hU5sbNtxiRfR4sLl1IhxZOZz7TNBHDMr5nI0ejXLt+k2wyzuqzry6OBAsi
      oZCEZVl4vsfu7jZhOcrc/FXGMjkKz7+gdEEkWI7G0DWVvmkNNgFci1BYJj0+y1tzE5Tz6+yX
      gqt4ex5EoxH6loXr+ezu7iCFwsxfv0VuJMfhyueUfxsQXK7WmZocp1ZrkhlO0FI0MukUiqoR
      lQdASPBs4skkvV6PUCiC5/sIvovrevg+DGdGcF5ig/bVLoelKsPDKbo9g0szk4QEATkaIb+z
      QyI7QToZo9ftks6NEgmdZ4NahspJSyObGUJp1tE9EdHqEx7KkEsn0XtdEukckYCEGKPX4bBU
      ZWJ6hlhEQo5GUVo1BHkYOQSW3kOMp0nIofOgzvcolytkcxlEQeCk0SabimK4YZKxMJ7dxyRC
      OrA0ok+lXCY7lsUjzEmlwuT4CK2ezUgqjug7dA2XbHooAMi67O/ukUxnTiO/ImHJ56TZZTyX
      xvV8OorGWC5zfgbwfY7y+4ixFJlUlOJRmdHJaXRVZXpqFMsR6LRajE2MBc4AareJLUSRJZ/6
      yQm5qRk6jRqTU5PYzuDw7bGJ8cAZwNQVuoZHMhbBNlS8SJK+0mR08hKubdHttMmNBesqrTrl
      eofp6Sk8U8URY2CpJEbGEH0XTemSHAn2se86lKt1MiPDhASPhtInHnKJxNNIImd2X98G/f+S
      Dv1d5U2B7HeV77sg19+1Nr/c3lcCYZ7roOkGomfRF+JEXIVaW0NAYHTqEkMvVYw+LhXITsx8
      Y1rkC/F9H8u2CYkChuWQjMfA9zBtF9c2CUdkHNcjEg6dgavXXwDPdTBMm0Q8hmNbWI6H4LtI
      4QiO4yBHImdJK4H2LRtZjuDYFqbtEY9FsGwX17GRZfniF8730XSdeDwOvoem95EjIWwP8NzB
      rCiKgcE7fB9d14jGEwi+h2aYyGERy/ER8ZFlGV8UA4tqwYDXE47GCAkCmqYhR6MYfZNISEQ6
      zauVLnhus68jhmTCkoiua0SiMXRdJyaH8cUwksCFOQi21cdDQo6E0LVTXU0jFovi+QIhSbxQ
      13UsLMcnJkfQdZVQJIbvuUTCEn3LfcXHr8vLPu4bGohhRMEnFArTNy3kSPgbfOxh2YNx4NgD
      vlc8GsG1B9yrF3Zfl1dAcGP/Kf/m3/85+cIhDx4uEZcFNjeeUzhW0bUmn3/+Fa7V4+Nf/RrT
      6HJyfMyDxys4vSrLO2V2nj1AF1NM5NLnQPDS5i4x0ePh0xWuLVzhcGed5wdFzE6dJ4vPyB+f
      4Lke2WwmcAbYXl9hc3uH8Zk5nv76V9iCTLtaYmV5kcWNIyKSTyabJWgs9dUOz9a3mZme4uT4
      iMdL64QdleW1Re4/2iUe9hnJ5QJJVq2TAk8XlxBSY1T31ziq9xAcjaXlZzxfWabX98mN5gKj
      k3a/xRdfLmL6YRrlPZafLkMszsOvF6nsP+Wo4ZEbzRINBxDAXZ0vvvgaxbCJ+hpfPd0cFPl9
      8pi9/B6lSotEaoRkPKBSmu/y8KsHnLR6TGYj/NXHDxkZHmL9yQPWyw0qR4dI0RTDqUTgUmTx
      668oVBrMZOP81WdfovQ08pvP2TgoUj4u4wsRMiPDgborTx+znS8xf2WW7bUltgtVCvkDPFPl
      2foWtuMzmh0JfAG21pbZ2N5lcnaO8sEmz9b3MRqHqI7Ppw8WCYs+2Qt8bPTaLG/sMDM1SbVc
      YHF5A8lSOHj+BZulNo7tkzu1+7Ltc16LZy7xe+/c4sb8FM+fb6D2HbrNBvsH+3TrFZ4sr9M+
      qbB1UODoqE7I7fLx/S9Z21hjb3uLg+LxuYeLxJLEwiK6oXP9+k1c12Vrd5dGvUbfdPnjn/0p
      48MpCpsPLwTBri+QTSexHZd+v8/u3i6GafPDn/4Jt2ZHKeyusnNUDdSNxJLEIhKW7dA3dG68
      dYvNnW3qCvz49hTlyhGrG8GcJsdxGB3NYZoWhmFQK+5R62jcvPsD3rl9E6VdZXllLVAXz2Yk
      N4FtGVyeW8BQFQRhkIRy86338PoNniw+C9b1XYZGcviuhdnXMZQGu4fHTC7c4v27d5FdlS8f
      PQ3WxSeWTBMSPVxTo287bG9tMTRzgz+4d5Mhyeb+w8cXguBwNEE0IuLLQ1weG0LTTZLJJPPz
      C6TkMEuPPr8YBEsRknEZ13UJhWRkOUw2m2Z6do700DB7Tz+9EAS7vkhmeOBjSQwhyxGyuSzx
      9CTXL+U43F5m9wIQLMeHiIbF3/j41k02d3dJj80wnEyxu/jJt4Ngu6+hOyIxyUU1bBzbRhAF
      fE9g+cmXjC28Qzu/RGbhfWZHE3i+iICHKEJHtZDcPqnRKYYT0VcwgN5tsrF3SHZkhJba5/r8
      LEPJJJreY39zh+zMHJmhGO1mg7GpS0RPp7qXxTE1iicdcpkU2H26fY9u7ZhEborxTAql3WR4
      dDJwSaZ3m6zv5Lk0fxVPbVLv2dy7fRPd0BFPs5ikZJZULBIAKD329/NMTo0jCiLF4xoyJoot
      sXB5Gs/SMXyZXMABe/g++YN9pqYn0fsWzbZGJiHQ0n0uTWQRPYemajM5lgl0arlwQHp0Al8Q
      qRaPGE4lKBzXeeutm4j4NFpdLk1NBOrWj48Ip0YJ4dKoHjOUTnOQL/DWnbuIokT9pMrM7Ezg
      V7zbqGKKCWIRn0rpmJnLs+ztHXDj1g1cx6NeO2FmdjY4qaXXoql5DCdl6uUjUuPTlHZ3Gb28
      QGYoRrNeZ2pmJnDJaPdVynWF7MgQ3UYVMT5Cp1Ikmp1kMjuM0m6QHp0mEsDZ0joNNvYOmZm7
      itNr0NRc7r11HVwTw/Zfsfuyj/9G6dBvAoK/r3zT7zPP9bvI78J9f5dB8CufS0vv0uz8JsG6
      1yhyWO1cfCenfyEh6wWQffmCAUdIEAZVIV4koQuCgO9/My/+5YR13/NwXQ/P884qDbzcoefp
      0OC6L+yc6nke3mtJ8IEDwfdxT1/mQdUC99S+e2b3b8qZL9//xQfFcRy838LuoG84r+u5eN63
      6bpn/eK6g997nnd2fZPuC9/AwC+e7+O6zmmuxbfo/jV8/E26nufhet5vZfcVENw6XOWzhyt8
      +H9/jmb0+d9/8b/Qbfjklx/RaTX4Pz//iL7e4cPPHlLYfMphfZC69uj+R2jiCDMTv5nKgwwu
      Pf6KSttgajzH2tIjlpeesLpd5mBvk/3iMQLiAFwFbEcqrRrPt/e5NDnB46/uo7kS5a1FVFfg
      w88eEY9IZDLnQQ5AaW+TR19/TfrygBL86YMPPy1+AAACZUlEQVRFQq7G6vMnfPzVJkNRiWwu
      G/gCtGtHfP75AyKZaQ7WF3m+vkutdkxP0/ji/q/QLZGx8VGkoJLWbyKuzse/+BTF8hH1Gvd/
      /YxGo0bppE1+e5F8uc1wJntBFNlnf/ETuokFEnqBn3++SF/TePLlfQ4bbUpHBeREmqFELDAO
      8OjBffZKdeams/zyl58ylB3ly4/+gsN6j/zhAWIoRno4GbgEWn7ya57vHLJwZYaPPvw5LaXL
      6rNVOt02azu7+L5EZmQ4sMnd5gmrOwdMT07w6MGvMLwQRxtP0FyfX37+hGhEJDMSDKCNXovH
      K5vMXpri119+ynb+GFtpsLi2Rv6ohO8Hj61zn1u7rzK3sMDW2gaOEEJpt9A0hVKlxfzUGJs7
      G2zu7KF026yubVAqHbK4uMTh0bcf9ZNKDVEo5BEEgexImh/9yT9mLieRzIyRisfZevwJxQvo
      0MPZcdKnnPuu0mV3b4/LV2ZJZS9xdWqY3Y2nbBWCQbBh2txcuIRmecgRmWQigRgK896P/z4f
      3BijUNhnaS2Y0mxZFgsL8ximxcL8Ap1mjVZHYTdf5vaNBVr1IxYvisi+ifgOo9Pz+I5Jbuoy
      EUehWmtRrxyQnbyGZHf47MGjC5QFZq9cBiAyMs1kzKZneYylh5iZmSPuG3z8xcMLQbCcHGEo
      HgLHpKsaPLz/IdW2SiozSkwSePzgk4tBcDhObiSJIIgsXJmhcVJGUfvYHiTkOJtff3ghCE7n
      JhhODtJsX/ZxenSGuYlhdteesFMMBsHxVJbRzBAAV+fnadTryHKU2at3iEdibD78MBAE/z/l
      9CeTTy0VLwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='GE &amp; Env Issues' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='GE &amp; Immigration' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Global Events &amp; Racism' width='192'>
      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
      f/dU/Fl2mhRfAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Global event &amp; War' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Global events &amp; LGBTQ+' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='OriginTop20' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 28' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 30' width='192'>
      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
      bnO7bVtVVTGbzWSz2Zyu7NV1fXbHkvPnAHa7HbBT6rx03cyljzSMew2NWB5kECwMTQIgDE0C
      IAxNAiAMTQIgDE0CIAxNAiAMTQIgDE0CIAxNAiAMTQIgDE0CIAxNAiAMTQIgDC3HijCdkydP
      URotoHckTtBlIZ5WMGlTWN1Byooj+e6nEHmRY0VYjK6+AewuDwG3A01RcFg0sPtAS0lFWJ7a
      S0VYbpagIqySR5wBzGj0jSQIuEwkMhbUdByrJyQVYXlqLxVhuVmSirCZGylU+0MAhHLunhC3
      LxkEC0OTAAhDkwAIQ5MACEOTAAhDkwAIQ5MACEOTAAhDkwAIQ5MACEOTAAhDkwAIQ5MACEOT
      AAhDy+ly6NTUJK2trVjcQdB1HCZNKsLEspBTACx2J0o2i9mkMDEex+ZzS0WYVITlZFlUhCXj
      EyhWB3arhWm7HadVKsKWYh1SEZabvFeEOdw+VtX5AIhePtuRijCxHMggWBiaBEAYmgRAGJoE
      QBiaBEAYmgRAGJoEQBiaBEAYmgRAGJoEQBiaBEAYmgRAGJoEQBiaBEAYWs4VYW2xbsKFYYbH
      L98jLKNiSsexeEIUBn357qcQeZFzRRjTcfrHXHgsCvGUhpJNkTXbmY6Pk/V7pCIsD+2lIiw3
      S1IRhtWKhSyj8RQBp5lERkVNjmF1S0VYvtpLRVhulqQirG71mpw7JMSdQgbBwtDmHAESY0Oc
      OtcMWNiwcQOWW9ApIZbKnCOA0xfCpmQZ6u8n9+GXEHemOQGIjw4wMZ3GYnfI+ZFY9uacArn8
      YbZsefRW9EWIJTfvTv74oX3s/eQg6aXujRBLbN4AZLM6Nqt1qfsixJKbdwwQ6+jgwIHPWPjz
      WiHubHPGAE6fl1W19xAuSeb2KZkQd7A57/G+pi4cHg8b1q+VzwDEsjfnFMjhtdHa3soRGQQL
      A5hzBFDNdu5eu56SwoJb0R8hltTcI4DbyrED+9ix82M5Aohlb04ALA4fReEQ6fgkC19YKsSd
      bd6JnlV1taieEeyXv9ezGh2dPUTDfrr7RykJ+y7VA2QSWN1BXHYZLos705wA6HqK99/bhdMb
      ZPWaOuxAJpXCYc5wtq2bwoIC+odGyGpZFJMJfbKHivJyqQhbZHuz2bxg0cfVhRu5+nz7p59+
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 31' width='192'>
      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
      zf8P3qTHpp3+M4MAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Temporal trends' width='192'>
      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
      9C6yjv8fZn/rPJu/gBEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top 10 COO vs shoot' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='genre relationship' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='origin_map' width='192'>
      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
      WwWLOV071QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='shooting_map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='temporal_issues' width='192'>
      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
      QmCC
    </thumbnail>
  </thumbnails>
</workbook>
